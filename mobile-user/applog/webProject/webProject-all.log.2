2015-11-24 14:29:33,82915-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? lock in share mode
2015-11-24 14:29:33,82915-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_WRITE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:29:33,83015-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:29:33,83015-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:29:33,83115-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:29:33,83115-11-24 14:29:33 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:29:33,83115-11-24 14:29:33 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:29:33,83315-11-24 14:29:33 DEBUG (SessionFactoryObjectFactory.java:61 LINE) SessionFactoryObjectFactory.<clinit> -> initializing class SessionFactoryObjectFactory
2015-11-24 14:29:33,83415-11-24 14:29:33 DEBUG (SessionFactoryObjectFactory.java:99 LINE) SessionFactoryObjectFactory.addInstance -> registered: e5ad3a6c-35a3-4537-b16a-f5eced3d42ff (unnamed)
2015-11-24 14:29:33,83415-11-24 14:29:33  INFO (SessionFactoryObjectFactory.java:105 LINE) SessionFactoryObjectFactory.addInstance -> Not binding factory to JNDI, no JNDI name configured
2015-11-24 14:29:33,83415-11-24 14:29:33 DEBUG (SessionFactoryImpl.java:369 LINE) SessionFactoryImpl.<init> -> instantiated session factory
2015-11-24 14:29:33,83915-11-24 14:29:33  INFO (SchemaUpdate.java:155 LINE) SchemaUpdate.execute -> Running hbm2ddl schema update
2015-11-24 14:29:33,84015-11-24 14:29:33  INFO (SchemaUpdate.java:167 LINE) SchemaUpdate.execute -> fetching database metadata
2015-11-24 14:29:33,84215-11-24 14:29:33  INFO (SchemaUpdate.java:179 LINE) SchemaUpdate.execute -> updating schema
2015-11-24 14:29:33,84315-11-24 14:29:33 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:29:33,84315-11-24 14:29:33 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:29:33,84315-11-24 14:29:33 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:29:33,84415-11-24 14:29:33 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:29:33,84415-11-24 14:29:33 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:29:33,84415-11-24 14:29:33 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:29:33,84415-11-24 14:29:33 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:29:33,84515-11-24 14:29:33 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:29:33,84515-11-24 14:29:33 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:29:33,84615-11-24 14:29:33 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:29:33,84715-11-24 14:29:33 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:29:33,84815-11-24 14:29:33 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:29:33,95715-11-24 14:29:33  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:29:33,95815-11-24 14:29:33 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:29:34,03315-11-24 14:29:34  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.note_numb_record
2015-11-24 14:29:34,03315-11-24 14:29:34  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [id, node_numb]
2015-11-24 14:29:34,03415-11-24 14:29:34  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:29:34,03415-11-24 14:29:34  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:29:34,05815-11-24 14:29:34  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.user_operate
2015-11-24 14:29:34,05915-11-24 14:29:34  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [birthday, sex, updatetime, open_id, openqq, opensina, userinfo, user_phonenumb, city, createtime, id, userpassword, username, lastlogintime, province, opensinainfo, figureurl, phicomm_id, open_key, access_token, nickname, usertype, ischecked, openqqinfo, useremail, devinfo, expirese_in]
2015-11-24 14:29:34,05915-11-24 14:29:34  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:29:34,05915-11-24 14:29:34  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:29:34,06115-11-24 14:29:34  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:29:34,06115-11-24 14:29:34 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:29:34,06215-11-24 14:29:34 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:29:34,06215-11-24 14:29:34 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:29:34,06315-11-24 14:29:34 DEBUG (SchemaUpdate.java:203 LINE) SchemaUpdate.execute -> create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:29:34,06415-11-24 14:29:34 ERROR (SchemaUpdate.java:212 LINE) SchemaUpdate.execute -> Unsuccessful: create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:29:34,07615-11-24 14:29:34 ERROR (SchemaUpdate.java:213 LINE) SchemaUpdate.execute -> Unknown database 'marketing1'
2015-11-24 14:29:34,07715-11-24 14:29:34  INFO (SchemaUpdate.java:217 LINE) SchemaUpdate.execute -> schema update complete
2015-11-24 14:29:34,08615-11-24 14:29:34  INFO (UpdateTimestampsCache.java:57 LINE) UpdateTimestampsCache.<init> -> starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:29:34,08815-11-24 14:29:34  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
2015-11-24 14:29:34,11515-11-24 14:29:34 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:29:34,13415-11-24 14:29:34 DEBUG (DiskStorePathManager.java:169 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Using diskstore path C:\Users\gqy\AppData\Local\Temp
2015-11-24 14:29:34,13515-11-24 14:29:34 DEBUG (DiskStorePathManager.java:170 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Holding exclusive lock on C:\Users\gqy\AppData\Local\Temp\.ehcache-diskstore.lock
2015-11-24 14:29:34,13615-11-24 14:29:34 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 14:29:34,13615-11-24 14:29:34 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:29:34,14815-11-24 14:29:34 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:29:34,15015-11-24 14:29:34 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:29:34,16215-11-24 14:29:34 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:29:34,16215-11-24 14:29:34 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.UpdateTimestampsCache'.
2015-11-24 14:29:34,16315-11-24 14:29:34 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:29:34,16515-11-24 14:29:34  INFO (StandardQueryCache.java:76 LINE) StandardQueryCache.<init> -> starting query cache at region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:29:34,16615-11-24 14:29:34  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
2015-11-24 14:29:34,16615-11-24 14:29:34 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.StandardQueryCache
2015-11-24 14:29:34,16815-11-24 14:29:34 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 14:29:34,16915-11-24 14:29:34 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:29:34,16915-11-24 14:29:34 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:29:34,17015-11-24 14:29:34 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:29:34,17115-11-24 14:29:34 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.StandardQueryCache
2015-11-24 14:29:34,17115-11-24 14:29:34 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.StandardQueryCache'.
2015-11-24 14:29:34,17115-11-24 14:29:34 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:29:34,17215-11-24 14:29:34 DEBUG (SessionFactoryImpl.java:539 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named HQL queries
2015-11-24 14:29:34,17215-11-24 14:29:34 DEBUG (SessionFactoryImpl.java:559 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named SQL queries
2015-11-24 14:29:34,17315-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:34,17515-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'sessionFactory'
2015-11-24 14:29:34,17615-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:34,18415-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userOperateDao'
2015-11-24 14:29:34,18415-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:34,18515-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userOperateDao'
2015-11-24 14:29:34,18515-11-24 14:29:34 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userInterfaceDao'
2015-11-24 14:29:34,18615-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userInterfaceDao'
2015-11-24 14:29:34,18715-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userInterfaceDao' to allow for resolving potential circular references
2015-11-24 14:29:34,19415-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:29:34,19415-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userInterfaceDao'
2015-11-24 14:29:34,20715-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:34,20815-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userInterfaceDao'
2015-11-24 14:29:34,20915-11-24 14:29:34 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'noteNumRecordDao'
2015-11-24 14:29:34,20915-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'noteNumRecordDao'
2015-11-24 14:29:34,21015-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'noteNumRecordDao' to allow for resolving potential circular references
2015-11-24 14:29:34,25015-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:29:34,25115-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'noteNumRecordDao'
2015-11-24 14:29:34,25115-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:34,25215-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'noteNumRecordDao'
2015-11-24 14:29:34,25415-11-24 14:29:34 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'crashLogDao'
2015-11-24 14:29:34,25415-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'crashLogDao'
2015-11-24 14:29:34,25515-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'crashLogDao' to allow for resolving potential circular references
2015-11-24 14:29:34,28215-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:29:34,28215-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'crashLogDao'
2015-11-24 14:29:34,28215-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:34,28315-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'crashLogDao'
2015-11-24 14:29:34,28315-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'dataSource'
2015-11-24 14:29:34,28315-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:29:34,28315-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:29:34,28315-11-24 14:29:34 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:29:34,28415-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:29:34,28615-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2015-11-24 14:29:34,29115-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:29:34,29115-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:29:34,29215-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:29:34,29215-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:34,29215-11-24 14:29:34 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'transactionManager'
2015-11-24 14:29:34,29215-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'transactionManager'
2015-11-24 14:29:34,29815-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-11-24 14:29:34,30315-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:29:34,30415-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-11-24 14:29:34,31015-11-24 14:29:34  INFO (HibernateTransactionManager.java:415 LINE) HibernateTransactionManager.afterPropertiesSet -> Using DataSource [org.apache.commons.dbcp.BasicDataSource@5e79d54b] of Hibernate SessionFactory for HibernateTransactionManager
2015-11-24 14:29:34,31015-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:34,31115-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'transactionManager'
2015-11-24 14:29:34,31115-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:29:34,31115-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:29:34,31215-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:29:34,31215-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:29:34,31215-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:29:34,31215-11-24 14:29:34 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'operateService'
2015-11-24 14:29:34,31215-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'operateService'
2015-11-24 14:29:34,31915-11-24 14:29:34 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserOperateServiceImp]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:29:34,31915-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'operateService' to allow for resolving potential circular references
2015-11-24 14:29:34,32115-11-24 14:29:34 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'operateService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:29:34,35115-11-24 14:29:34 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'fileRemote'
2015-11-24 14:29:34,38515-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'fileRemote'
2015-11-24 14:29:34,38915-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'fileRemote' to allow for resolving potential circular references
2015-11-24 14:29:34,40815-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'fileRemote'
2015-11-24 14:29:34,41815-11-24 14:29:34 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static
2015-11-24 14:29:34,42315-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'fileRemote'
2015-11-24 14:29:34,42415-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:29:34,42415-11-24 14:29:34 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'operateService' to bean named 'userOperateDao'
2015-11-24 14:29:34,42515-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:34,43115-11-24 14:29:34 DEBUG (AbstractFallbackTransactionAttributeSource.java:106 LINE) AbstractFallbackTransactionAttributeSource.getTransactionAttribute -> Adding transactional method 'registAccount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '',-java.lang.Throwable
2015-11-24 14:29:34,43315-11-24 14:29:34 DEBUG (AbstractAutoProxyCreator.java:534 LINE) AbstractAutoProxyCreator.buildAdvisors -> Creating implicit proxy for bean 'operateService' with 0 common interceptors and 1 specific interceptors
2015-11-24 14:29:34,43415-11-24 14:29:34 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.fx.mobile.user.service.impl.UserOperateServiceImp@2b1038df]
2015-11-24 14:29:34,44315-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'operateService'
2015-11-24 14:29:34,44315-11-24 14:29:34 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'SpringContextUtil'
2015-11-24 14:29:34,44415-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'SpringContextUtil'
2015-11-24 14:29:34,44515-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'SpringContextUtil' to allow for resolving potential circular references
2015-11-24 14:29:34,45115-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:34,45215-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'SpringContextUtil'
2015-11-24 14:29:34,45315-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'fileRemote'
2015-11-24 14:29:34,45415-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:29:34,45515-11-24 14:29:34 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userinterfaceService'
2015-11-24 14:29:34,45515-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userinterfaceService'
2015-11-24 14:29:34,45615-11-24 14:29:34 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserInterfaceServiceImpl]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:29:34,45615-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userinterfaceService' to allow for resolving potential circular references
2015-11-24 14:29:34,46015-11-24 14:29:34 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'userinterfaceService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:29:34,46115-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userInterfaceDao'
2015-11-24 14:29:34,46115-11-24 14:29:34 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'userinterfaceService' to bean named 'userInterfaceDao'
2015-11-24 14:29:34,46215-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:34,46315-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userinterfaceService'
2015-11-24 14:29:34,46315-11-24 14:29:34 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'urlProperties'
2015-11-24 14:29:34,46315-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'urlProperties'
2015-11-24 14:29:34,46415-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'urlProperties' to allow for resolving potential circular references
2015-11-24 14:29:34,47115-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:34,47215-11-24 14:29:34 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'urlProperties'
2015-11-24 14:29:34,47215-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:29:34,47515-11-24 14:29:34 DEBUG (AbstractApplicationContext.java:858 LINE) AbstractApplicationContext.initLifecycleProcessor -> Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4774ba2a]
2015-11-24 14:29:34,47615-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:29:34,47815-11-24 14:29:34 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-11-24 14:29:34,47915-11-24 14:29:34 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-11-24 14:29:34,47915-11-24 14:29:34 DEBUG (PropertySourcesPropertyResolver.java:93 LINE) PropertySourcesPropertyResolver.getProperty -> Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-11-24 14:29:34,48015-11-24 14:29:34 DEBUG (CacheAwareContextLoaderDelegate.java:93 LINE) CacheAwareContextLoaderDelegate.loadContext -> Storing ApplicationContext in cache under key [[MergedContextConfiguration@2c8df9a0 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:29:34,49615-11-24 14:29:34 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 14:29:34,49715-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:29:34,49715-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:34,53215-11-24 14:29:34 DEBUG (SessionFactoryUtils.java:322 LINE) SessionFactoryUtils.doGetSession -> Opening Hibernate Session
2015-11-24 14:29:34,58815-11-24 14:29:34 DEBUG (SessionImpl.java:265 LINE) SessionImpl.<init> -> opened session at timestamp: 5932427569287168
2015-11-24 14:29:34,64115-11-24 14:29:34 DEBUG (QueryTranslatorImpl.java:274 LINE) QueryTranslatorImpl.parse -> parse() - HQL: from com.fx.mobile.model.UserOperate where userName='' or userPhoneNumb=''  or userEmail=''
2015-11-24 14:29:34,65315-11-24 14:29:34 DEBUG (QueryTranslatorImpl.java:293 LINE) QueryTranslatorImpl.showHqlAst -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'fx'
    |           |  |  \-[IDENT] Node: 'mobile'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'UserOperate'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'userName'
          |  |  \-[QUOTED_STRING] Node: ''''
          |  \-[EQ] Node: '='
          |     +-[IDENT] Node: 'userPhoneNumb'
          |     \-[QUOTED_STRING] Node: ''''
          \-[EQ] Node: '='
             +-[IDENT] Node: 'userEmail'
             \-[QUOTED_STRING] Node: ''''

2015-11-24 14:29:34,65415-11-24 14:29:34 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:29:34,68115-11-24 14:29:34 DEBUG (HqlSqlBaseWalker.java:111 LINE) HqlSqlBaseWalker.beforeStatement -> select << begin [level=1, statement=select]
2015-11-24 14:29:34,69315-11-24 14:29:34 DEBUG (FromElement.java:157 LINE) FromElement.doInitialize -> FromClause{level=1} :  com.fx.mobile.model.UserOperate (no alias) -> useroperat0_
2015-11-24 14:29:34,69615-11-24 14:29:34 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 14:29:34,69715-11-24 14:29:34 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userName -> org.hibernate.type.StringType@3fbbaaad
2015-11-24 14:29:34,69815-11-24 14:29:34 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userName -> useroperat0_.userName
2015-11-24 14:29:34,69915-11-24 14:29:34 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 14:29:34,69915-11-24 14:29:34 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userPhoneNumb -> org.hibernate.type.StringType@3fbbaaad
2015-11-24 14:29:34,69915-11-24 14:29:34 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userPhoneNumb -> useroperat0_.user_PhoneNumb
2015-11-24 14:29:34,69915-11-24 14:29:34 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 14:29:34,69915-11-24 14:29:34 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userEmail -> org.hibernate.type.StringType@3fbbaaad
2015-11-24 14:29:34,69915-11-24 14:29:34 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userEmail -> useroperat0_.userEmail
2015-11-24 14:29:34,70015-11-24 14:29:34 DEBUG (HqlSqlBaseWalker.java:117 LINE) HqlSqlBaseWalker.beforeStatementCompletion -> select : finishing up [level=1, statement=select]
2015-11-24 14:29:34,70015-11-24 14:29:34 DEBUG (HqlSqlWalker.java:625 LINE) HqlSqlWalker.processQuery -> processQuery() :  ( SELECT ( FromClause{level=1} user_operate useroperat0_ ) ( where ( or ( or ( = ( useroperat0_.userName {synthetic-alias} userName ) '' ) ( = ( useroperat0_.user_PhoneNumb {synthetic-alias} userPhoneNumb ) '' ) ) ( = ( useroperat0_.userEmail {synthetic-alias} userEmail ) '' ) ) ) )
2015-11-24 14:29:34,70515-11-24 14:29:34 DEBUG (HqlSqlWalker.java:868 LINE) HqlSqlWalker.createSelectClauseFromFromClause -> Derived SELECT clause created.
2015-11-24 14:29:34,71015-11-24 14:29:34 DEBUG (JoinProcessor.java:179 LINE) JoinProcessor.addJoinNodes -> Using FROM fragment [user_operate useroperat0_]
2015-11-24 14:29:34,71115-11-24 14:29:34 DEBUG (HqlSqlBaseWalker.java:123 LINE) HqlSqlBaseWalker.afterStatementCompletion -> select >> end [level=1, statement=select]
2015-11-24 14:29:34,71215-11-24 14:29:34 DEBUG (QueryTranslatorImpl.java:260 LINE) QueryTranslatorImpl.analyze -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_operate)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'useroperat0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}}
    |  \-[SQL_TOKEN] SqlFragment: 'useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[useroperat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_operate useroperat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'useroperat0_.userName' {propertyName=userName,dereferenceType=ALL,propertyPath=userName,path={synthetic-alias}.userName,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          |  |  \-[QUOTED_STRING] LiteralNode: ''''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'useroperat0_.user_PhoneNumb' {propertyName=userPhoneNumb,dereferenceType=ALL,propertyPath=userPhoneNumb,path={synthetic-alias}.userPhoneNumb,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |  \-[IDENT] IdentNode: 'userPhoneNumb' {originalText=userPhoneNumb}
          |     \-[QUOTED_STRING] LiteralNode: ''''
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'useroperat0_.userEmail' {propertyName=userEmail,dereferenceType=ALL,propertyPath=userEmail,path={synthetic-alias}.userEmail,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'userEmail' {originalText=userEmail}
             \-[QUOTED_STRING] LiteralNode: ''''

2015-11-24 14:29:34,71215-11-24 14:29:34 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:29:34,72415-11-24 14:29:34 DEBUG (QueryTranslatorImpl.java:243 LINE) QueryTranslatorImpl.generate -> HQL: from com.fx.mobile.model.UserOperate where userName='' or userPhoneNumb=''  or userEmail=''
2015-11-24 14:29:34,72415-11-24 14:29:34 DEBUG (QueryTranslatorImpl.java:244 LINE) QueryTranslatorImpl.generate -> SQL: select useroperat0_.id as id0_, useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_ from user_operate useroperat0_ where useroperat0_.userName='' or useroperat0_.user_PhoneNumb='' or useroperat0_.userEmail=''
2015-11-24 14:29:34,72415-11-24 14:29:34 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:29:34,77315-11-24 14:29:34 DEBUG (AbstractBatcher.java:410 LINE) AbstractBatcher.logOpenPreparedStatement -> about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-11-24 14:29:34,77315-11-24 14:29:34 DEBUG (ConnectionManager.java:444 LINE) ConnectionManager.openConnection -> opening JDBC connection
2015-11-24 14:29:34,77815-11-24 14:29:34 DEBUG (SQLStatementLogger.java:111 LINE) SQLStatementLogger.logStatement -> 
    select
        useroperat0_.id as id0_,
        useroperat0_.userName as userName0_,
        useroperat0_.userPassword as userPass3_0_,
        useroperat0_.phicomm_id as phicomm4_0_,
        useroperat0_.userEmail as userEmail0_,
        useroperat0_.user_PhoneNumb as user6_0_,
        useroperat0_.userType as userType0_,
        useroperat0_.isChecked as isChecked0_,
        useroperat0_.nickname as nickname0_,
        useroperat0_.figureurl as figureurl0_,
        useroperat0_.sex as sex0_,
        useroperat0_.province as province0_,
        useroperat0_.city as city0_,
        useroperat0_.birthday as birthday0_,
        useroperat0_.open_id as open15_0_,
        useroperat0_.open_key as open16_0_,
        useroperat0_.access_token as access17_0_,
        useroperat0_.expirese_in as expirese18_0_,
        useroperat0_.devinfo as devinfo0_,
        useroperat0_.userinfo as userinfo0_,
        useroperat0_.openqq as openqq0_,
        useroperat0_.openqqinfo as openqqinfo0_,
        useroperat0_.opensina as opensina0_,
        useroperat0_.opensinainfo as opensin24_0_,
        useroperat0_.createTime as createTime0_,
        useroperat0_.updateTime as updateTime0_,
        useroperat0_.lastLoginTime as lastLog27_0_ 
    from
        user_operate useroperat0_ 
    where
        useroperat0_.userName='' 
        or useroperat0_.user_PhoneNumb='' 
        or useroperat0_.userEmail=''
2015-11-24 14:29:34,80015-11-24 14:29:34 DEBUG (AbstractBatcher.java:426 LINE) AbstractBatcher.logOpenResults -> about to open ResultSet (open ResultSets: 0, globally: 0)
2015-11-24 14:29:34,80615-11-24 14:29:34 DEBUG (Loader.java:1322 LINE) Loader.getRow -> result row: EntityKey[com.fx.mobile.model.UserOperate#1]
2015-11-24 14:29:34,81515-11-24 14:29:34 DEBUG (AbstractBatcher.java:433 LINE) AbstractBatcher.logCloseResults -> about to close ResultSet (open ResultSets: 1, globally: 1)
2015-11-24 14:29:34,81615-11-24 14:29:34 DEBUG (AbstractBatcher.java:418 LINE) AbstractBatcher.logClosePreparedStatement -> about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-11-24 14:29:34,81615-11-24 14:29:34 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 14:29:34,81615-11-24 14:29:34 DEBUG (ConnectionManager.java:464 LINE) ConnectionManager.closeConnection -> releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-11-24 14:29:34,81815-11-24 14:29:34 DEBUG (TwoPhaseLoad.java:130 LINE) TwoPhaseLoad.initializeEntity -> resolving associations for [com.fx.mobile.model.UserOperate#1]
2015-11-24 14:29:34,82215-11-24 14:29:34 DEBUG (TwoPhaseLoad.java:255 LINE) TwoPhaseLoad.initializeEntity -> done materializing entity [com.fx.mobile.model.UserOperate#1]
2015-11-24 14:29:34,82515-11-24 14:29:34 DEBUG (StatefulPersistenceContext.java:893 LINE) StatefulPersistenceContext.initializeNonLazyCollections -> initializing non-lazy collections
2015-11-24 14:29:34,82715-11-24 14:29:34 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 14:29:34,82915-11-24 14:29:34 DEBUG (HibernateAccessor.java:389 LINE) HibernateAccessor.flushIfNecessary -> Eagerly flushing Hibernate session
2015-11-24 14:29:34,83215-11-24 14:29:34 DEBUG (AbstractFlushingEventListener.java:134 LINE) AbstractFlushingEventListener.prepareEntityFlushes -> processing flush-time cascades
2015-11-24 14:29:34,83815-11-24 14:29:34 DEBUG (AbstractFlushingEventListener.java:177 LINE) AbstractFlushingEventListener.prepareCollectionFlushes -> dirty checking collections
2015-11-24 14:29:34,84115-11-24 14:29:34 DEBUG (AbstractFlushingEventListener.java:108 LINE) AbstractFlushingEventListener.flushEverythingToExecutions -> Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2015-11-24 14:29:34,84215-11-24 14:29:34 DEBUG (AbstractFlushingEventListener.java:114 LINE) AbstractFlushingEventListener.flushEverythingToExecutions -> Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-11-24 14:29:34,84415-11-24 14:29:34 DEBUG (Printer.java:106 LINE) Printer.toString -> listing entities:
2015-11-24 14:29:34,84415-11-24 14:29:34 DEBUG (Printer.java:113 LINE) Printer.toString -> com.fx.mobile.model.UserOperate{createTime=null, birthday=null, sex=null, accessToken=1e2df3961168a7fefb4f1e1218c389e3, openqq=null, userPassword=e10adc3949ba59abbe56e057, opensina=null, userEmail=null, userinfo=null, openKey=null, userType=null, city=null, id=1, isChecked=null, province=null, userName=, expireseIn=2015-10-22 11:25:50, opensinainfo=null, figureurl=null, lastLoginTime=null, updateTime=null, nickname=null, userPhoneNumb=18251901681, phicommId=123, openqqinfo=null, devinfo=null, openId=null}
2015-11-24 14:29:34,84515-11-24 14:29:34 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 14:29:34,84515-11-24 14:29:34 DEBUG (SessionFactoryUtils.java:800 LINE) SessionFactoryUtils.closeSession -> Closing Hibernate Session
2015-11-24 14:29:34,87115-11-24 14:29:34 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@467c1a71 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@7dac14dd, testMethod = getListTest@UserOperateDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2c8df9a0 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 14:29:34,87215-11-24 14:29:34 DEBUG (DirtiesContextTestExecutionListener.java:138 LINE) DirtiesContextTestExecutionListener.afterTestClass -> After test class: context [[TestContext@467c1a71 testClass = UserOperateDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2c8df9a0 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
2015-11-24 14:29:34,88415-11-24 14:29:34  INFO (AbstractApplicationContext.java:1042 LINE) AbstractApplicationContext.doClose -> Closing org.springframework.context.support.GenericApplicationContext@c9e3b21: startup date [Tue Nov 24 14:29:30 CST 2015]; root of context hierarchy
2015-11-24 14:29:34,88615-11-24 14:29:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:29:34,88615-11-24 14:29:34  INFO (DefaultSingletonBeanRegistry.java:444 LINE) DefaultSingletonBeanRegistry.destroySingletons -> Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4f768377: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:29:34,89115-11-24 14:29:34 DEBUG (DefaultSingletonBeanRegistry.java:500 LINE) DefaultSingletonBeanRegistry.destroyBean -> Retrieved dependent beans for bean 'userOperateDao': [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:29:34,89215-11-24 14:29:34 DEBUG (DisposableBeanAdapter.java:219 LINE) DisposableBeanAdapter.destroy -> Invoking destroy() on bean with name 'sessionFactory'
2015-11-24 14:29:34,89215-11-24 14:29:34  INFO (AbstractSessionFactoryBean.java:223 LINE) AbstractSessionFactoryBean.destroy -> Closing Hibernate SessionFactory
2015-11-24 14:29:34,89215-11-24 14:29:34  INFO (SessionFactoryImpl.java:927 LINE) SessionFactoryImpl.close -> closing
2015-11-24 14:29:34,94215-11-24 14:29:34 DEBUG (DisposableBeanAdapter.java:295 LINE) DisposableBeanAdapter.invokeCustomDestroyMethod -> Invoking destroy method 'close' on bean with name 'dataSource'
2015-11-24 14:33:41,85615-11-24 14:33:41 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 14:33:41,95015-11-24 14:33:41 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@1c398896 declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 14:33:41,95015-11-24 14:33:41 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:33:41,95015-11-24 14:33:41 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 14:33:41,98115-11-24 14:33:41 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:33:41,98115-11-24 14:33:41 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:33:41,98115-11-24 14:33:41 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:33:41,98115-11-24 14:33:41 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:33:42,07515-11-24 14:33:42 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:33:42,07515-11-24 14:33:42 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:33:42,07515-11-24 14:33:42 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:33:42,07515-11-24 14:33:42 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:33:42,07515-11-24 14:33:42 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:33:42,07515-11-24 14:33:42 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:33:42,07515-11-24 14:33:42 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:33:42,07515-11-24 14:33:42 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:33:42,07515-11-24 14:33:42 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@7dac14dd testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@2c8df9a0, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 14:33:42,07515-11-24 14:33:42 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 14:33:42,09015-11-24 14:33:42 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:33:42,16815-11-24 14:33:42 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:33:42,16815-11-24 14:33:42 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:33:42,18415-11-24 14:33:42 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:33:42,18415-11-24 14:33:42 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:33:42,18415-11-24 14:33:42 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:33:42,20015-11-24 14:33:42 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:33:42,20015-11-24 14:33:42 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:33:42,20015-11-24 14:33:42 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:33:42,21615-11-24 14:33:42 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 14:33:42,21615-11-24 14:33:42 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 14:33:42,21715-11-24 14:33:42 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 14:33:42,21715-11-24 14:33:42  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 14:33:42,23315-11-24 14:33:42 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:33:42,26415-11-24 14:33:42 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 14:33:42,28015-11-24 14:33:42 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 14:33:42,28015-11-24 14:33:42 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:33:42,35815-11-24 14:33:42 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:33:42,37415-11-24 14:33:42  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 14:33:42,46715-11-24 14:33:42 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:33:42,46715-11-24 14:33:42 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:33:42,49915-11-24 14:33:42 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:33:42,51415-11-24 14:33:42  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 14:33:42,56115-11-24 14:33:42 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:33:42,59215-11-24 14:33:42 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:33:42,62415-11-24 14:33:42 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 14:33:42,62415-11-24 14:33:42 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:33:42,62415-11-24 14:33:42 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:33:42,65515-11-24 14:33:42 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 14:33:42,67115-11-24 14:33:42  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 14:33:42,70215-11-24 14:33:42 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:33:42,70215-11-24 14:33:42 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:33:42,71715-11-24 14:33:42 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 14:33:42,73315-11-24 14:33:42 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:33:42,73315-11-24 14:33:42 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:33:42,79615-11-24 14:33:42  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 14:33:42,81115-11-24 14:33:42  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 14:33:42,81115-11-24 14:33:42 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 14:33:42,81115-11-24 14:33:42 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:33:42,81115-11-24 14:33:42 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:33:42,81115-11-24 14:33:42 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 14:33:42,85815-11-24 14:33:42 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 14:33:42,88915-11-24 14:33:42 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 14:33:42,88915-11-24 14:33:42 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 14:33:42,93615-11-24 14:33:42 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 14:33:42,95215-11-24 14:33:42  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 14:33:42,95215-11-24 14:33:42  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 14:33:42,96715-11-24 14:33:42 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:33:42,96715-11-24 14:33:42 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:33:42,98315-11-24 14:33:42 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:33:42,98315-11-24 14:33:42 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 14:33:42,99915-11-24 14:33:42  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@683bf9ff: startup date [Tue Nov 24 14:33:42 CST 2015]; root of context hierarchy
2015-11-24 14:33:42,99915-11-24 14:33:42 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@683bf9ff: org.springframework.beans.factory.support.DefaultListableBeanFactory@8488831: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 14:33:43,09215-11-24 14:33:43 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:33:43,09215-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:33:43,15515-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:33:43,15515-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:33:43,21715-11-24 14:33:43 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:33:43,21715-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:33:43,23415-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 14:33:43,29715-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:33:43,29715-11-24 14:33:43  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 14:33:43,32815-11-24 14:33:43  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 14:33:43,32815-11-24 14:33:43  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 14:33:43,32815-11-24 14:33:43 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:33:43,32815-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:33:43,32815-11-24 14:33:43  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 14:33:43,32815-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:33:43,32815-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:33:43,32815-11-24 14:33:43 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:33:43,32815-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:33:43,34315-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:33:43,34315-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:33:43,34315-11-24 14:33:43 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:33:43,34315-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:33:43,35915-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:33:43,35915-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:33:43,35915-11-24 14:33:43 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:33:43,35915-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:33:43,35915-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:33:43,35915-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:33:43,35915-11-24 14:33:43 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:33:43,35915-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:33:43,35915-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 14:33:43,35915-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:33:43,35915-11-24 14:33:43 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:33:43,35915-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:33:43,39015-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 14:33:43,40615-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:33:43,40615-11-24 14:33:43 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2dafc6d2]
2015-11-24 14:33:43,40615-11-24 14:33:43 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@367562d9]
2015-11-24 14:33:43,42215-11-24 14:33:43  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@8488831: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:33:43,42215-11-24 14:33:43 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 14:33:43,42215-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 14:33:43,43715-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 14:33:43,43715-11-24 14:33:43 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 14:33:43,43715-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 14:33:43,48415-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 14:33:43,48415-11-24 14:33:43 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 14:33:43,48415-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 14:33:43,60915-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 14:33:43,62515-11-24 14:33:43 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:33:43,62515-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:33:43,62515-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:33:43,62515-11-24 14:33:43 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:33:43,62515-11-24 14:33:43 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:33:43,62515-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:33:43,62515-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:33:43,62515-11-24 14:33:43 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:33:43,62515-11-24 14:33:43 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:33:43,62515-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:33:43,62515-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:33:43,64015-11-24 14:33:43 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:33:43,64015-11-24 14:33:43 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:33:43,64015-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:33:43,64015-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:33:43,64015-11-24 14:33:43 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:33:43,64015-11-24 14:33:43 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:33:43,64015-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:33:43,64015-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:33:43,64015-11-24 14:33:43 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:33:43,65615-11-24 14:33:43 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:43,65615-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:43,65615-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 14:33:43,71815-11-24 14:33:43 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:33:43,71815-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:33:43,71815-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:33:43,73415-11-24 14:33:43 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:33:43,75015-11-24 14:33:43 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 14:33:43,81215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@78fb787f
2015-11-24 14:33:43,81215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@78fb787f
2015-11-24 14:33:43,81215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78fb787f
2015-11-24 14:33:43,81215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e67f47c
2015-11-24 14:33:43,81215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@3485b49e
2015-11-24 14:33:43,81215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@7377b6fc
2015-11-24 14:33:43,81215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@61b52c64
2015-11-24 14:33:43,81215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@61b52c64
2015-11-24 14:33:43,81215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61b52c64
2015-11-24 14:33:43,81215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@46c7c485
2015-11-24 14:33:43,81215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@46c7c485
2015-11-24 14:33:43,81215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46c7c485
2015-11-24 14:33:43,82815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@79a70972
2015-11-24 14:33:43,82815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@79a70972
2015-11-24 14:33:43,82815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79a70972
2015-11-24 14:33:43,82815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@2b7a2bfe
2015-11-24 14:33:43,82815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@2b7a2bfe
2015-11-24 14:33:43,82815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2b7a2bfe
2015-11-24 14:33:43,82815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7e23c750
2015-11-24 14:33:43,82815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7e23c750
2015-11-24 14:33:43,82815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e23c750
2015-11-24 14:33:43,82815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@75d16e6e
2015-11-24 14:33:43,82815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@75d16e6e
2015-11-24 14:33:43,82815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75d16e6e
2015-11-24 14:33:43,84315-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@47330c96
2015-11-24 14:33:43,84315-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@47330c96
2015-11-24 14:33:43,84315-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@47330c96
2015-11-24 14:33:43,85915-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@412b940e
2015-11-24 14:33:43,85915-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@412b940e
2015-11-24 14:33:43,85915-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22c4d1da
2015-11-24 14:33:43,85915-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22c4d1da
2015-11-24 14:33:43,85915-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@39c2648b
2015-11-24 14:33:43,85915-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@39c2648b
2015-11-24 14:33:43,87515-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@2ab5cc4d
2015-11-24 14:33:43,87515-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@2ab5cc4d
2015-11-24 14:33:43,87515-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@7f792cec
2015-11-24 14:33:43,87515-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f792cec
2015-11-24 14:33:43,89015-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@74bf1f08
2015-11-24 14:33:43,89015-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@74bf1f08
2015-11-24 14:33:43,89015-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@75e17ae9
2015-11-24 14:33:43,89015-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@75e17ae9
2015-11-24 14:33:43,89015-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@75e17ae9
2015-11-24 14:33:43,89015-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2d29f154
2015-11-24 14:33:43,89015-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@46b0b225
2015-11-24 14:33:43,89015-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@46b0b225
2015-11-24 14:33:43,89015-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@46b0b225
2015-11-24 14:33:43,90615-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@57ec035e
2015-11-24 14:33:43,90615-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@20c449e3
2015-11-24 14:33:43,90615-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20c449e3
2015-11-24 14:33:43,92215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@10cbf9d9
2015-11-24 14:33:43,92215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@10cbf9d9
2015-11-24 14:33:43,92215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@17b42596
2015-11-24 14:33:43,92215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17b42596
2015-11-24 14:33:43,92215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@2eb5f307
2015-11-24 14:33:43,92215-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2eb5f307
2015-11-24 14:33:43,93715-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17af4daa
2015-11-24 14:33:43,93715-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17af4daa
2015-11-24 14:33:43,93715-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a6d125b
2015-11-24 14:33:43,93715-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@288c3eae
2015-11-24 14:33:43,93715-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@58cfdc01
2015-11-24 14:33:43,93715-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@58cfdc01
2015-11-24 14:33:43,93715-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@58cfdc01
2015-11-24 14:33:43,95315-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b24260c
2015-11-24 14:33:43,95315-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b24260c
2015-11-24 14:33:43,95315-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b24260c
2015-11-24 14:33:43,95315-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@544f4ab4
2015-11-24 14:33:43,95315-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@6a776719
2015-11-24 14:33:43,95315-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@6a776719
2015-11-24 14:33:43,95315-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@6a776719
2015-11-24 14:33:43,95315-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@21fbf127
2015-11-24 14:33:43,95315-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@21fbf127
2015-11-24 14:33:43,95315-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@21fbf127
2015-11-24 14:33:43,95315-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@664beade
2015-11-24 14:33:43,96815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@2baf0158
2015-11-24 14:33:43,96815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2baf0158
2015-11-24 14:33:43,96815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@600f2cb8
2015-11-24 14:33:43,96815-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@71172e7a
2015-11-24 14:33:43,98415-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@9292f91
2015-11-24 14:33:43,98415-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9292f91
2015-11-24 14:33:43,98415-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@52765b39
2015-11-24 14:33:43,98415-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@729b9707
2015-11-24 14:33:43,98415-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@6fbfb4b9
2015-11-24 14:33:43,98415-11-24 14:33:43 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@67eae247
2015-11-24 14:33:44,00015-11-24 14:33:44 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@5ac169f5
2015-11-24 14:33:44,00015-11-24 14:33:44 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ac169f5
2015-11-24 14:33:44,00015-11-24 14:33:44 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@62481601
2015-11-24 14:33:44,00015-11-24 14:33:44 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6a9cce0f
2015-11-24 14:33:44,00015-11-24 14:33:44 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c9c7177
2015-11-24 14:33:44,00015-11-24 14:33:44 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@22dd6b21
2015-11-24 14:33:44,00015-11-24 14:33:44 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@76a45568
2015-11-24 14:33:44,00015-11-24 14:33:44 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1ee35bb2
2015-11-24 14:33:44,00015-11-24 14:33:44 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@609912f5
2015-11-24 14:33:44,00015-11-24 14:33:44 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61abc45e
2015-11-24 14:33:44,06215-11-24 14:33:44  INFO (Version.java:37 LINE) Version.<clinit> -> Hibernate Commons Annotations 3.2.0.Final
2015-11-24 14:33:44,06215-11-24 14:33:44  INFO (Environment.java:603 LINE) Environment.<clinit> -> Hibernate 3.6.8.Final
2015-11-24 14:33:44,06215-11-24 14:33:44  INFO (Environment.java:636 LINE) Environment.<clinit> -> hibernate.properties not found
2015-11-24 14:33:44,07815-11-24 14:33:44  INFO (Environment.java:814 LINE) Environment.buildBytecodeProvider -> Bytecode provider name : javassist
2015-11-24 14:33:44,07815-11-24 14:33:44  INFO (Environment.java:695 LINE) Environment.<clinit> -> using JDK 1.4 java.sql.Timestamp handling
2015-11-24 14:33:44,23415-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2015-11-24 14:33:44,23415-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2015-11-24 14:33:44,23415-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:33:44,23415-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:33:44,23415-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2015-11-24 14:33:44,23415-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2015-11-24 14:33:44,23415-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2015-11-24 14:33:44,23415-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2015-11-24 14:33:44,25115-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2015-11-24 14:33:44,25115-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2015-11-24 14:33:44,25115-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2015-11-24 14:33:44,25115-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2015-11-24 14:33:44,25115-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2015-11-24 14:33:44,25115-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-11-24 14:33:44,25115-11-24 14:33:44 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2015-11-24 14:33:44,31315-11-24 14:33:44 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:33:44,31315-11-24 14:33:44  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:33:44,31315-11-24 14:33:44 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:33:44,31315-11-24 14:33:44 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:33:44,42315-11-24 14:33:44 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:33:44,42315-11-24 14:33:44  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:33:44,42315-11-24 14:33:44 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:33:44,42315-11-24 14:33:44 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:33:44,46915-11-24 14:33:44 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:33:44,46915-11-24 14:33:44  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:33:44,46915-11-24 14:33:44 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:33:44,46915-11-24 14:33:44 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:33:44,56315-11-24 14:33:44 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:33:44,64115-11-24 14:33:44  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.UserOperate -> user_operate
2015-11-24 14:33:44,65715-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userName -> userName
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPassword -> userPassword
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: phicommId -> phicomm_id
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userEmail -> userEmail
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPhoneNumb -> user_PhoneNumb
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userType -> userType
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: isChecked -> isChecked
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nickname -> nickname
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: figureurl -> figureurl
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: sex -> sex
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: province -> province
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: city -> city
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: birthday -> birthday
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openId -> open_id
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openKey -> open_key
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: accessToken -> access_token
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: expireseIn -> expirese_in
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: devinfo -> devinfo
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userinfo -> userinfo
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqq -> openqq
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqqinfo -> openqqinfo
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensina -> opensina
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensinainfo -> opensinainfo
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: createTime -> createTime
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: updateTime -> updateTime
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: lastLoginTime -> lastLoginTime
2015-11-24 14:33:44,67315-11-24 14:33:44  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.NoteNumbRecord -> note_numb_record
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nodeNumb -> node_numb
2015-11-24 14:33:44,67315-11-24 14:33:44  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.CrashLog -> crash_log
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: url -> url
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: describes -> describes
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: addDate -> addDate
2015-11-24 14:33:44,67315-11-24 14:33:44 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:33:44,68815-11-24 14:33:44 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:33:44,68815-11-24 14:33:44 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:33:44,68815-11-24 14:33:44 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:33:44,68815-11-24 14:33:44 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:33:44,68815-11-24 14:33:44 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:33:44,68815-11-24 14:33:44 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:33:44,68815-11-24 14:33:44 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:33:44,70415-11-24 14:33:44  INFO (Configuration.java:1676 LINE) Configuration.applyHibernateValidatorLegacyConstraintsOnDDL -> Hibernate Validator not found: ignoring
2015-11-24 14:33:44,75115-11-24 14:33:44 DEBUG (LoggerFactory.java:29 LINE) LoggerFactory.make -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-11-24 14:33:44,75115-11-24 14:33:44  INFO (Version.java:27 LINE) Version.<clinit> -> HV000001: Hibernate Validator 5.0.0.Final
2015-11-24 14:33:44,76615-11-24 14:33:44 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:33:44,78215-11-24 14:33:44 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:33:44,79815-11-24 14:33:44 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:33:44,93815-11-24 14:33:44  INFO (LocalSessionFactoryBean.java:780 LINE) LocalSessionFactoryBean.buildSessionFactory -> Building new Hibernate SessionFactory
2015-11-24 14:33:44,93815-11-24 14:33:44 DEBUG (Configuration.java:1854 LINE) Configuration.buildSessionFactory -> Preparing to build session factory with filters : {}
2015-11-24 14:33:44,93815-11-24 14:33:44 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:33:44,93815-11-24 14:33:44 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:33:44,93815-11-24 14:33:44 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:33:44,93815-11-24 14:33:44 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:33:44,93815-11-24 14:33:44 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:33:44,93815-11-24 14:33:44 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:33:44,93815-11-24 14:33:44 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:33:44,93815-11-24 14:33:44 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:33:44,93815-11-24 14:33:44 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:33:44,93815-11-24 14:33:44 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:33:44,93815-11-24 14:33:44 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:33:44,93815-11-24 14:33:44 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:33:44,96915-11-24 14:33:44 DEBUG (Configuration.java:1896 LINE) Configuration.enableLegacyHibernateValidator -> Legacy Validator not present in classpath, ignoring event listener registration
2015-11-24 14:33:44,96915-11-24 14:33:44 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:33:44,96915-11-24 14:33:44 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:33:44,96915-11-24 14:33:44 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:33:44,96915-11-24 14:33:44 DEBUG (HibernateSearchEventListenerRegister.java:231 LINE) HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener -> Search not present in classpath, ignoring event listener registration.
2015-11-24 14:33:44,96915-11-24 14:33:44  INFO (HibernateSearchEventListenerRegister.java:75 LINE) HibernateSearchEventListenerRegister.enableHibernateSearch -> Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2015-11-24 14:33:44,98515-11-24 14:33:44  INFO (ConnectionProviderFactory.java:173 LINE) ConnectionProviderFactory.initializeConnectionProviderFromConfig -> Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2015-11-24 14:33:45,34415-11-24 14:33:45  INFO (Dialect.java:135 LINE) Dialect.<init> -> Using dialect: org.hibernate.dialect.MySQLDialect
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:126 LINE) SettingsFactory.buildSettings -> Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:132 LINE) SettingsFactory.buildSettings -> Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.25 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (TransactionFactoryFactory.java:65 LINE) TransactionFactoryFactory.buildTransactionFactory -> Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (TransactionManagerLookupFactory.java:83 LINE) TransactionManagerLookupFactory.getTransactionManagerLookup -> No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:179 LINE) SettingsFactory.buildSettings -> Automatic flush during beforeCompletion(): disabled
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:183 LINE) SettingsFactory.buildSettings -> Automatic session close at end of transaction: disabled
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:190 LINE) SettingsFactory.buildSettings -> JDBC batch size: 25
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:193 LINE) SettingsFactory.buildSettings -> JDBC batch updates for versioned data: disabled
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:198 LINE) SettingsFactory.buildSettings -> Scrollable result sets: enabled
2015-11-24 14:33:45,36115-11-24 14:33:45 DEBUG (SettingsFactory.java:202 LINE) SettingsFactory.buildSettings -> Wrap result sets: disabled
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:206 LINE) SettingsFactory.buildSettings -> JDBC3 getGeneratedKeys(): enabled
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:210 LINE) SettingsFactory.buildSettings -> JDBC result set fetch size: 50
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:214 LINE) SettingsFactory.buildSettings -> Connection release mode: after_transaction
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:238 LINE) SettingsFactory.buildSettings -> Maximum outer join fetch depth: 2
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:241 LINE) SettingsFactory.buildSettings -> Default batch fetch size: 1
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:245 LINE) SettingsFactory.buildSettings -> Generate SQL with comments: disabled
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:249 LINE) SettingsFactory.buildSettings -> Order SQL updates by primary key: disabled
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:253 LINE) SettingsFactory.buildSettings -> Order SQL inserts for batching: disabled
2015-11-24 14:33:45,36115-11-24 14:33:45  INFO (SettingsFactory.java:431 LINE) SettingsFactory.createQueryTranslatorFactory -> Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2015-11-24 14:33:45,37715-11-24 14:33:45  INFO (ASTQueryTranslatorFactory.java:47 LINE) ASTQueryTranslatorFactory.<init> -> Using ASTQueryTranslatorFactory
2015-11-24 14:33:45,37715-11-24 14:33:45  INFO (SettingsFactory.java:261 LINE) SettingsFactory.buildSettings -> Query language substitutions: {false='N', true='Y'}
2015-11-24 14:33:45,37715-11-24 14:33:45  INFO (SettingsFactory.java:266 LINE) SettingsFactory.buildSettings -> JPA-QL strict compliance: disabled
2015-11-24 14:33:45,37715-11-24 14:33:45  INFO (SettingsFactory.java:271 LINE) SettingsFactory.buildSettings -> Second-level cache: enabled
2015-11-24 14:33:45,37715-11-24 14:33:45  INFO (SettingsFactory.java:275 LINE) SettingsFactory.buildSettings -> Query cache: enabled
2015-11-24 14:33:45,37715-11-24 14:33:45  INFO (SettingsFactory.java:406 LINE) SettingsFactory.createRegionFactory -> Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
2015-11-24 14:33:45,37715-11-24 14:33:45  INFO (RegionFactoryCacheProviderBridge.java:61 LINE) RegionFactoryCacheProviderBridge.<init> -> Cache provider: org.hibernate.cache.EhCacheProvider
2015-11-24 14:33:45,39215-11-24 14:33:45  INFO (SettingsFactory.java:285 LINE) SettingsFactory.buildSettings -> Optimize cache for minimal puts: disabled
2015-11-24 14:33:45,39215-11-24 14:33:45  INFO (SettingsFactory.java:294 LINE) SettingsFactory.buildSettings -> Structured second-level cache entries: disabled
2015-11-24 14:33:45,39215-11-24 14:33:45  INFO (SettingsFactory.java:385 LINE) SettingsFactory.createQueryCacheFactory -> Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
2015-11-24 14:33:45,39215-11-24 14:33:45  INFO (SettingsFactory.java:314 LINE) SettingsFactory.buildSettings -> Echoing all SQL to stdout
2015-11-24 14:33:45,39215-11-24 14:33:45  INFO (SettingsFactory.java:323 LINE) SettingsFactory.buildSettings -> Statistics: disabled
2015-11-24 14:33:45,39215-11-24 14:33:45  INFO (SettingsFactory.java:327 LINE) SettingsFactory.buildSettings -> Deleted entity synthetic identifier rollback: disabled
2015-11-24 14:33:45,39215-11-24 14:33:45  INFO (SettingsFactory.java:343 LINE) SettingsFactory.buildSettings -> Default entity-mode: pojo
2015-11-24 14:33:45,39215-11-24 14:33:45  INFO (SettingsFactory.java:347 LINE) SettingsFactory.buildSettings -> Named query checking : enabled
2015-11-24 14:33:45,39215-11-24 14:33:45  INFO (SettingsFactory.java:351 LINE) SettingsFactory.buildSettings -> Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2015-11-24 14:33:45,43915-11-24 14:33:45  INFO (SessionFactoryImpl.java:202 LINE) SessionFactoryImpl.<init> -> building session factory
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (SessionFactoryImpl.java:206 LINE) SessionFactoryImpl.<init> -> Statistics initialized [enabled=false]}
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@78fb787f
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@78fb787f
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78fb787f
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e67f47c
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@3485b49e
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@7377b6fc
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@61b52c64
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@61b52c64
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61b52c64
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@46c7c485
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@46c7c485
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46c7c485
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@79a70972
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@79a70972
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79a70972
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@2b7a2bfe
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@2b7a2bfe
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2b7a2bfe
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7e23c750
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7e23c750
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e23c750
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@75d16e6e
2015-11-24 14:33:45,43915-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@75d16e6e
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75d16e6e
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@47330c96
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@47330c96
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@47330c96
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@412b940e
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@412b940e
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22c4d1da
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22c4d1da
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@39c2648b
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@39c2648b
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@2ab5cc4d
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@2ab5cc4d
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@7f792cec
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f792cec
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@74bf1f08
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@74bf1f08
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@75e17ae9
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@75e17ae9
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@75e17ae9
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2d29f154
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@46b0b225
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@46b0b225
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@46b0b225
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@57ec035e
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@20c449e3
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20c449e3
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@10cbf9d9
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@10cbf9d9
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@17b42596
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17b42596
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@2eb5f307
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2eb5f307
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17af4daa
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17af4daa
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a6d125b
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@288c3eae
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@58cfdc01
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@58cfdc01
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@58cfdc01
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b24260c
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b24260c
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b24260c
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@544f4ab4
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@6a776719
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@6a776719
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@6a776719
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@21fbf127
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@21fbf127
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@21fbf127
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@664beade
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@2baf0158
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2baf0158
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@600f2cb8
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@71172e7a
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@9292f91
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9292f91
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@52765b39
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@729b9707
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@6fbfb4b9
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@67eae247
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@5ac169f5
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ac169f5
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@214ed1f8
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3dbb01dd
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@407773d4
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6255845c
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5c64e673
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6455b768
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@377c404e
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e61dd57
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d917ec
2015-11-24 14:33:45,45515-11-24 14:33:45  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@600f2cb8
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@1d72e46d
2015-11-24 14:33:45,45515-11-24 14:33:45  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [clob] overrides previous : org.hibernate.type.ClobType@9292f91
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1d72e46d
2015-11-24 14:33:45,45515-11-24 14:33:45  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9292f91
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@1587be37
2015-11-24 14:33:45,45515-11-24 14:33:45  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [blob] overrides previous : org.hibernate.type.BlobType@2baf0158
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1587be37
2015-11-24 14:33:45,45515-11-24 14:33:45  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@2baf0158
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@7e762d0
2015-11-24 14:33:45,45515-11-24 14:33:45  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@729b9707
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@680849bd
2015-11-24 14:33:45,45515-11-24 14:33:45  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@6fbfb4b9
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@61f2bf35
2015-11-24 14:33:45,45515-11-24 14:33:45  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@52765b39
2015-11-24 14:33:45,45515-11-24 14:33:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@7ab18869
2015-11-24 14:33:45,45515-11-24 14:33:45  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@71172e7a
2015-11-24 14:33:45,47015-11-24 14:33:45 DEBUG (SessionFactoryImpl.java:228 LINE) SessionFactoryImpl.<init> -> Session factory constructed with filter configurations : {}
2015-11-24 14:33:45,47015-11-24 14:33:45 DEBUG (SessionFactoryImpl.java:232 LINE) SessionFactoryImpl.<init> -> instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, sun.boot.library.path=E:\JDK1.7\bin, java.vm.version=23.7-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.cache.use_query_cache=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\workspace\mobile-user, java.runtime.version=1.7.0_17-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=E:\JDK1.7\lib\endorsed, os.arch=amd64, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\gqy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, hibernate.cache.use_second_level_cache=true, sun.jnu.encoding=GBK, hibernate.jdbc.fetch_size=50, java.library.path=E:\JDK1.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\ProgramData\Lenovo\ReadyApps;E:\JDK\bin;E:\JDK\jre\bin;E:\Go\bin;E:\winscp\WinSCP\;E:\maven\apache-maven-3.2.3\bin;C:\Program Files (x86)\DBank\ClickUp;C:\Program Files (x86)\DBank\ClickUp;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\gqy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=after_transaction, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=gqy, java.class.path=G:\workspace\mobile-user\target\test-classes;G:\workspace\mobile-user\target\classes;H:\Respositories2\repository\com\alibaba\fastjson\1.2.4\fastjson-1.2.4.jar;H:\Respositories2\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;H:\Respositories2\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;H:\Respositories2\repository\io\netty\netty\4.0.0.Alpha8\netty-4.0.0.Alpha8.jar;H:\Respositories2\repository\jstl\jstl\1.2\jstl-1.2.jar;H:\Respositories2\repository\org\springframework\spring-aop\3.2.0.RELEASE\spring-aop-3.2.0.RELEASE.jar;H:\Respositories2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;H:\Respositories2\repository\org\springframework\spring-beans\3.2.0.RELEASE\spring-beans-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context\3.2.0.RELEASE\spring-context-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-expression\3.2.0.RELEASE\spring-expression-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context-support\3.2.0.RELEASE\spring-context-support-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-core\3.2.0.RELEASE\spring-core-3.2.0.RELEASE.jar;H:\Respositories2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;H:\Respositories2\repository\org\springframework\spring-jdbc\3.2.0.RELEASE\spring-jdbc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-orm\3.2.0.RELEASE\spring-orm-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-tx\3.2.0.RELEASE\spring-tx-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-web\3.2.0.RELEASE\spring-web-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-webmvc\3.2.0.RELEASE\spring-webmvc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\amqp\spring-amqp\1.2.0.RELEASE\spring-amqp-1.2.0.RELEASE.jar;H:\Respositories2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;H:\Respositories2\repository\com\fasterxml\jackson\core\jackson-core\2.1.0\jackson-core-2.1.0.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.13\jackson-jaxrs-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-xc\1.9.13\jackson-xc-1.9.13.jar;H:\Respositories2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;H:\Respositories2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;H:\Respositories2\repository\mysql\mysql-connector-java\5.1.25\mysql-connector-java-5.1.25.jar;H:\Respositories2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;H:\Respositories2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;H:\Respositories2\repository\org\aspectj\aspectjweaver\1.6.4\aspectjweaver-1.6.4.jar;H:\Respositories2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;H:\Respositories2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;H:\Respositories2\repository\commons-beanutils\commons-beanutils\1.9.0\commons-beanutils-1.9.0.jar;H:\Respositories2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;H:\Respositories2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;H:\Respositories2\repository\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;H:\Respositories2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;H:\Respositories2\repository\org\mybatis\mybatis-spring\1.2.0\mybatis-spring-1.2.0.jar;H:\Respositories2\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;H:\Respositories2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar;H:\Respositories2\repository\org\json\json\20090211\json-20090211.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-lgpl\1.8.1\jackson-core-lgpl-1.8.1.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-lgpl\1.8.1\jackson-mapper-lgpl-1.8.1.jar;H:\Respositories2\repository\org\freemarker\freemarker\2.3.16\freemarker-2.3.16.jar;H:\Respositories2\repository\opensymphony\sitemesh\2.4.2\sitemesh-2.4.2.jar;H:\Respositories2\repository\org\testng\testng\5.9\testng-5.9-jdk15.jar;H:\Respositories2\repository\junit\junit\4.7\junit-4.7.jar;H:\Respositories2\repository\cglib\cglib-asm\1.0\cglib-asm-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-core\1.0\jxls-core-1.0.jar;H:\Respositories2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;H:\Respositories2\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml\3.7\poi-ooxml-3.7.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml-schemas\3.7\poi-ooxml-schemas-3.7.jar;H:\Respositories2\repository\org\apache\xmlbeans\xmlbeans\2.3.0\xmlbeans-2.3.0.jar;H:\Respositories2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;H:\Respositories2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-reader\1.0\jxls-reader-1.0.jar;H:\Respositories2\repository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient\4.3.2\httpclient-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient-cache\4.3.2\httpclient-cache-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpmime\4.3.2\httpmime-4.3.2.jar;H:\Respositories2\repository\org\quartz-scheduler\quartz\1.8.6\quartz-1.8.6.jar;H:\Respositories2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;H:\Respositories2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;H:\Respositories2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;H:\Respositories2\repository\net\coobird\thumbnailator\0.4.7\thumbnailator-0.4.7.jar;H:\Respositories2\repository\jcifs\jcifs\1.3.17\jcifs-1.3.17.jar;H:\Respositories2\repository\org\apache\poi\poi\3.10.1\poi-3.10.1.jar;H:\Respositories2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;H:\Respositories2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;H:\Respositories2\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;H:\Respositories2\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;H:\Respositories2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;H:\Respositories2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;H:\Respositories2\repository\net\sf\supercsv\super-csv\2.2.0\super-csv-2.2.0.jar;H:\Respositories2\repository\org\bouncycastle\bcprov-jdk16\1.45\bcprov-jdk16-1.45.jar;H:\Respositories2\repository\jdom\jdom\1.0\jdom-1.0.jar;H:\Respositories2\repository\com\belerweb\pinyin4j\2.5.0\pinyin4j-2.5.0.jar;H:\Respositories2\repository\org\glassfish\jersey\ext\jersey-spring3\2.4.1\jersey-spring3-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-server\2.4.1\jersey-server-2.4.1.jar;H:\Respositories2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-api\2.2.0-b21\hk2-api-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\javax.inject\2.2.0-b21\javax.inject-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-locator\2.2.0-b21\hk2-locator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\asm-all-repackaged\2.2.0-b21\asm-all-repackaged-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\cglib\2.2.0-b21\cglib-2.2.0-b21.jar;H:\Respositories2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;H:\Respositories2\repository\org\glassfish\jersey\containers\jersey-container-servlet-core\2.4.1\jersey-container-servlet-core-2.4.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2\2.2.0-b21\hk2-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-utils\2.2.0-b21\hk2-utils-2.2.0-b21.jar;H:\Respositories2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;H:\Respositories2\repository\org\glassfish\hk2\config-types\2.2.0-b21\config-types-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\core\2.2.0-b21\core-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-config\2.2.0-b21\hk2-config-2.2.0-b21.jar;H:\Respositories2\repository\org\jvnet\tiger-types\1.4\tiger-types-1.4.jar;H:\Respositories2\repository\org\glassfish\hk2\external\bean-validator\2.2.0-b21\bean-validator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-runlevel\2.2.0-b21\hk2-runlevel-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\class-model\2.2.0-b21\class-model-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\spring-bridge\2.2.0-b21\spring-bridge-2.2.0-b21.jar;H:\Respositories2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\2.4.1\jersey-media-json-jackson-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-common\2.4.1\jersey-common-2.4.1.jar;H:\Respositories2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;H:\Respositories2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.1\osgi-resource-locator-1.0.1.jar;H:\Respositories2\repository\org\codehaus\groovy\groovy-all\2.2.0\groovy-all-2.2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\providers\jersey-test-framework-provider-external\2.5.1\jersey-test-framework-provider-external-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\jersey-test-framework-core\2.5.1\jersey-test-framework-core-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-client\2.5.1\jersey-client-2.5.1.jar;H:\Respositories2\repository\org\springframework\spring-test\3.2.6.RELEASE\spring-test-3.2.6.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session\1.0.1.RELEASE\spring-session-1.0.1.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session-data-redis\1.0.0.RELEASE\spring-session-data-redis-1.0.0.RELEASE.jar;H:\Respositories2\repository\org\apache\commons\commons-pool2\2.2\commons-pool2-2.2.jar;H:\Respositories2\repository\redis\clients\jedis\2.6.0\jedis-2.6.0.jar;H:\Respositories2\repository\org\springframework\data\spring-data-redis\1.4.1.RELEASE\spring-data-redis-1.4.1.RELEASE.jar;H:\Respositories2\repository\net\sf\ehcache\ehcache-core\2.6.11\ehcache-core-2.6.11.jar;H:\Respositories2\repository\org\hibernate3\hibernate3\3.0.0\hibernate3-3.0.0.jar;H:\Respositories2\repository\com\google\code\gson\gson\2.1\gson-2.1.jar;H:\Respositories2\repository\org\apache\openejb\javaee-api\5.0-1\javaee-api-5.0-1.jar;H:\Respositories2\repository\com\alibaba\druid\1.0.2\druid-1.0.2.jar;H:\Respositories2\repository\javax\faces\jsf-impl\1.2_04\jsf-impl-1.2_04.jar;H:\Respositories2\repository\javax\faces\jsf-api\1.2_04\jsf-api-1.2_04.jar;H:\Respositories2\repository\javax\transaction\jta\1.1\jta-1.1.jar;H:\Respositories2\repository\org\apache\ws\wss4j\1.5.1\wss4j-1.5.1.jar;H:\Respositories2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;H:\Respositories2\repository\hibernate\antlr\2.7.5H3\antlr-2.7.5H3.jar;H:\Respositories2\repository\javassist\javassist\3.9.0.GA\javassist-3.9.0.GA.jar;H:\Respositories2\repository\com\fx\mobile\mobile-model\0.0.1-SNAPSHOT\mobile-model-0.0.1-SNAPSHOT.jar;H:\Respositories2\repository\com\fx\mobile\mobile-core\0.0.1\mobile-core-0.0.1.jar;H:\Respositories2\repository\Decoder\sun.misc.BASE64Decoder\1.0.0\sun.misc.BASE64Decoder-1.0.0.jar;H:\Respositories2\repository\marketingFile\marketingFile\0.0.1\marketingFile-0.0.1.jar;H:\Respositories2\repository\com\qq\connect\Sdk4J\1.0\Sdk4J-1.0.jar;H:\Respositories2\repository\org\apache\commons\commons-io\1.3.2\commons-io-1.3.2.jar;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.query.substitutions=true 'Y', false 'N', hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=E:\JDK1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 59944 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.fx.mobile.junit.UserOperateDaoImplTest, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_17, java.ext.dirs=E:\JDK1.7\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=E:\JDK1.7\lib\resources.jar;E:\JDK1.7\lib\rt.jar;E:\JDK1.7\lib\sunrsasign.jar;E:\JDK1.7\lib\jsse.jar;E:\JDK1.7\lib\jce.jar;E:\JDK1.7\lib\charsets.jar;E:\JDK1.7\lib\jfr.jar;E:\JDK1.7\classes, java.vendor=Oracle Corporation, hibernate.jdbc.batch_size=25, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-11-24 14:33:45,48615-11-24 14:33:45 DEBUG (CacheManager.java:684 LINE) CacheManager.parseConfiguration -> Configuring ehcache from classpath.
2015-11-24 14:33:45,48615-11-24 14:33:45 DEBUG (ConfigurationFactory.java:132 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from ehcache.xml found in the classpath: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:33:45,48615-11-24 14:33:45 DEBUG (ConfigurationFactory.java:98 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from URL: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:33:45,48615-11-24 14:33:45 DEBUG (ConfigurationFactory.java:150 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from InputStream
2015-11-24 14:33:45,50215-11-24 14:33:45 DEBUG (DiskStoreConfiguration.java:141 LINE) DiskStoreConfiguration.translatePath -> Disk Store Path: C:\Users\gqy\AppData\Local\Temp\
2015-11-24 14:33:45,51715-11-24 14:33:45 DEBUG (PropertyUtil.java:88 LINE) PropertyUtil.parseProperties -> propertiesString is null.
2015-11-24 14:33:45,53315-11-24 14:33:45 DEBUG (ConfigurationHelper.java:185 LINE) ConfigurationHelper.createCacheManagerEventListener -> No CacheManagerEventListenerFactory class specified. Skipping...
2015-11-24 14:33:45,61115-11-24 14:33:45 DEBUG (Cache.java:955 LINE) Cache.createBootstrapCacheLoader -> No BootstrapCacheLoaderFactory class specified. Skipping...
2015-11-24 14:33:45,61115-11-24 14:33:45 DEBUG (Cache.java:929 LINE) Cache.createCacheWriter -> CacheWriter factory not configured. Skipping...
2015-11-24 14:33:45,61115-11-24 14:33:45 DEBUG (ConfigurationHelper.java:96 LINE) ConfigurationHelper.createCacheExceptionHandler -> No CacheExceptionHandlerFactory class specified. Skipping...
2015-11-24 14:33:45,67415-11-24 14:33:45 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:33:45,67415-11-24 14:33:45 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:33:45,67415-11-24 14:33:45 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:33:45,81415-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.NoteNumbRecord
2015-11-24 14:33:45,81415-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from note_numb_record where id =?
2015-11-24 14:33:45,81415-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select notenumbre_.id, notenumbre_.node_numb as node2_1_ from note_numb_record notenumbre_ where notenumbre_.id=?
2015-11-24 14:33:45,81415-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into note_numb_record (node_numb, id) values (?, ?)
2015-11-24 14:33:45,81415-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update note_numb_record set node_numb=? where id=?
2015-11-24 14:33:45,81415-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from note_numb_record where id=?
2015-11-24 14:33:45,81415-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into note_numb_record (node_numb) values (?)
2015-11-24 14:33:45,81415-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.CrashLog
2015-11-24 14:33:45,81415-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from marketing1.crash_log where id =?
2015-11-24 14:33:45,83015-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select crashlog_.id, crashlog_.url as url2_, crashlog_.describes as describes2_, crashlog_.addDate as addDate2_ from marketing1.crash_log crashlog_ where crashlog_.id=?
2015-11-24 14:33:45,83015-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into marketing1.crash_log (url, describes, addDate, id) values (?, ?, ?, ?)
2015-11-24 14:33:45,83015-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update marketing1.crash_log set url=?, describes=?, addDate=? where id=?
2015-11-24 14:33:45,83015-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from marketing1.crash_log where id=?
2015-11-24 14:33:45,83015-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into marketing1.crash_log (url, describes, addDate) values (?, ?, ?)
2015-11-24 14:33:45,84515-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.UserOperate
2015-11-24 14:33:45,84515-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from user_operate where id =?
2015-11-24 14:33:45,84515-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select useroperat_.id, useroperat_.userName as userName0_, useroperat_.userPassword as userPass3_0_, useroperat_.phicomm_id as phicomm4_0_, useroperat_.userEmail as userEmail0_, useroperat_.user_PhoneNumb as user6_0_, useroperat_.userType as userType0_, useroperat_.isChecked as isChecked0_, useroperat_.nickname as nickname0_, useroperat_.figureurl as figureurl0_, useroperat_.sex as sex0_, useroperat_.province as province0_, useroperat_.city as city0_, useroperat_.birthday as birthday0_, useroperat_.open_id as open15_0_, useroperat_.open_key as open16_0_, useroperat_.access_token as access17_0_, useroperat_.expirese_in as expirese18_0_, useroperat_.devinfo as devinfo0_, useroperat_.userinfo as userinfo0_, useroperat_.openqq as openqq0_, useroperat_.openqqinfo as openqqinfo0_, useroperat_.opensina as opensina0_, useroperat_.opensinainfo as opensin24_0_, useroperat_.createTime as createTime0_, useroperat_.updateTime as updateTime0_, useroperat_.lastLoginTime as lastLog27_0_ from user_operate useroperat_ where useroperat_.id=?
2015-11-24 14:33:45,84515-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:33:45,84515-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update user_operate set userName=?, userPassword=?, phicomm_id=?, userEmail=?, user_PhoneNumb=?, userType=?, isChecked=?, nickname=?, figureurl=?, sex=?, province=?, city=?, birthday=?, open_id=?, open_key=?, access_token=?, expirese_in=?, devinfo=?, userinfo=?, openqq=?, openqqinfo=?, opensina=?, opensinainfo=?, createTime=?, updateTime=?, lastLoginTime=? where id=?
2015-11-24 14:33:45,86115-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from user_operate where id=?
2015-11-24 14:33:45,86115-11-24 14:33:45 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:33:45,89215-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [NONE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:33:45,89215-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:33:45,89215-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:33:45,89215-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE_NOWAIT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:33:45,89215-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [FORCE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:33:45,89215-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? lock in share mode
2015-11-24 14:33:45,89215-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_WRITE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:33:45,89215-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:33:45,89215-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:33:45,89215-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:33:45,89215-11-24 14:33:45 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:33:45,89215-11-24 14:33:45 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [NONE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE_NOWAIT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [FORCE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? lock in share mode
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_WRITE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [NONE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE_NOWAIT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [FORCE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? lock in share mode
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_WRITE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:33:45,90815-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:33:45,92415-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:33:45,92415-11-24 14:33:45 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:33:45,92415-11-24 14:33:45 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:33:45,92415-11-24 14:33:45 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:33:45,92415-11-24 14:33:45 DEBUG (SessionFactoryObjectFactory.java:61 LINE) SessionFactoryObjectFactory.<clinit> -> initializing class SessionFactoryObjectFactory
2015-11-24 14:33:45,92415-11-24 14:33:45 DEBUG (SessionFactoryObjectFactory.java:99 LINE) SessionFactoryObjectFactory.addInstance -> registered: 2c773c97-2ed2-4d64-b08f-ee9f8f264bb8 (unnamed)
2015-11-24 14:33:45,92415-11-24 14:33:45  INFO (SessionFactoryObjectFactory.java:105 LINE) SessionFactoryObjectFactory.addInstance -> Not binding factory to JNDI, no JNDI name configured
2015-11-24 14:33:45,92415-11-24 14:33:45 DEBUG (SessionFactoryImpl.java:369 LINE) SessionFactoryImpl.<init> -> instantiated session factory
2015-11-24 14:33:45,92415-11-24 14:33:45  INFO (SchemaUpdate.java:155 LINE) SchemaUpdate.execute -> Running hbm2ddl schema update
2015-11-24 14:33:45,92415-11-24 14:33:45  INFO (SchemaUpdate.java:167 LINE) SchemaUpdate.execute -> fetching database metadata
2015-11-24 14:33:45,92415-11-24 14:33:45  INFO (SchemaUpdate.java:179 LINE) SchemaUpdate.execute -> updating schema
2015-11-24 14:33:45,93915-11-24 14:33:45 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:33:45,93915-11-24 14:33:45 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:33:45,93915-11-24 14:33:45 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:33:45,93915-11-24 14:33:45 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:33:45,93915-11-24 14:33:45 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:33:45,93915-11-24 14:33:45 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:33:45,93915-11-24 14:33:45 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:33:45,93915-11-24 14:33:45 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:33:45,93915-11-24 14:33:45 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:33:45,93915-11-24 14:33:45 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:33:45,93915-11-24 14:33:45 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:33:45,93915-11-24 14:33:45 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:33:45,95515-11-24 14:33:45  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:33:45,95515-11-24 14:33:45 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:33:46,03315-11-24 14:33:46  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.note_numb_record
2015-11-24 14:33:46,03315-11-24 14:33:46  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [id, node_numb]
2015-11-24 14:33:46,03315-11-24 14:33:46  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:33:46,04915-11-24 14:33:46  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:33:46,06415-11-24 14:33:46  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.user_operate
2015-11-24 14:33:46,06415-11-24 14:33:46  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [birthday, sex, updatetime, open_id, openqq, opensina, userinfo, user_phonenumb, city, createtime, id, userpassword, username, lastlogintime, province, opensinainfo, figureurl, phicomm_id, open_key, access_token, nickname, usertype, ischecked, openqqinfo, useremail, devinfo, expirese_in]
2015-11-24 14:33:46,06415-11-24 14:33:46  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:33:46,06415-11-24 14:33:46  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:33:46,06415-11-24 14:33:46  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:33:46,06415-11-24 14:33:46 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:33:46,06415-11-24 14:33:46 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:33:46,06415-11-24 14:33:46 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:33:46,06415-11-24 14:33:46 DEBUG (SchemaUpdate.java:203 LINE) SchemaUpdate.execute -> create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:33:46,06415-11-24 14:33:46 ERROR (SchemaUpdate.java:212 LINE) SchemaUpdate.execute -> Unsuccessful: create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:33:46,12715-11-24 14:33:46 ERROR (SchemaUpdate.java:213 LINE) SchemaUpdate.execute -> Unknown database 'marketing1'
2015-11-24 14:33:46,12715-11-24 14:33:46  INFO (SchemaUpdate.java:217 LINE) SchemaUpdate.execute -> schema update complete
2015-11-24 14:33:46,12715-11-24 14:33:46  INFO (UpdateTimestampsCache.java:57 LINE) UpdateTimestampsCache.<init> -> starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:33:46,12715-11-24 14:33:46  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
2015-11-24 14:33:46,15815-11-24 14:33:46 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:33:46,15815-11-24 14:33:46 DEBUG (DiskStorePathManager.java:169 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Using diskstore path C:\Users\gqy\AppData\Local\Temp
2015-11-24 14:33:46,15815-11-24 14:33:46 DEBUG (DiskStorePathManager.java:170 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Holding exclusive lock on C:\Users\gqy\AppData\Local\Temp\.ehcache-diskstore.lock
2015-11-24 14:33:46,15815-11-24 14:33:46 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 14:33:46,15815-11-24 14:33:46 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:33:46,18915-11-24 14:33:46 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:33:46,18915-11-24 14:33:46 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:33:46,20515-11-24 14:33:46 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:33:46,20515-11-24 14:33:46 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.UpdateTimestampsCache'.
2015-11-24 14:33:46,20515-11-24 14:33:46 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:33:46,20515-11-24 14:33:46  INFO (StandardQueryCache.java:76 LINE) StandardQueryCache.<init> -> starting query cache at region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:33:46,20515-11-24 14:33:46  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
2015-11-24 14:33:46,20515-11-24 14:33:46 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.StandardQueryCache
2015-11-24 14:33:46,20515-11-24 14:33:46 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 14:33:46,20515-11-24 14:33:46 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:33:46,23615-11-24 14:33:46 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:33:46,23615-11-24 14:33:46 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:33:46,23615-11-24 14:33:46 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.StandardQueryCache
2015-11-24 14:33:46,23615-11-24 14:33:46 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.StandardQueryCache'.
2015-11-24 14:33:46,23615-11-24 14:33:46 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:33:46,23615-11-24 14:33:46 DEBUG (SessionFactoryImpl.java:539 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named HQL queries
2015-11-24 14:33:46,23615-11-24 14:33:46 DEBUG (SessionFactoryImpl.java:559 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named SQL queries
2015-11-24 14:33:46,23615-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:46,25215-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'sessionFactory'
2015-11-24 14:33:46,25215-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:46,25215-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userOperateDao'
2015-11-24 14:33:46,25215-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:46,26715-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userOperateDao'
2015-11-24 14:33:46,26715-11-24 14:33:46 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userInterfaceDao'
2015-11-24 14:33:46,26715-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userInterfaceDao'
2015-11-24 14:33:46,26715-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userInterfaceDao' to allow for resolving potential circular references
2015-11-24 14:33:46,26715-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:33:46,26715-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userInterfaceDao'
2015-11-24 14:33:46,26715-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:46,26715-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userInterfaceDao'
2015-11-24 14:33:46,26715-11-24 14:33:46 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'noteNumRecordDao'
2015-11-24 14:33:46,26715-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'noteNumRecordDao'
2015-11-24 14:33:46,26715-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'noteNumRecordDao' to allow for resolving potential circular references
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'noteNumRecordDao'
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'noteNumRecordDao'
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'crashLogDao'
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'crashLogDao'
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'crashLogDao' to allow for resolving potential circular references
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'crashLogDao'
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'crashLogDao'
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'dataSource'
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:33:46,28315-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:33:46,29915-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2015-11-24 14:33:46,29915-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:33:46,29915-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:33:46,29915-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:33:46,29915-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:46,29915-11-24 14:33:46 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'transactionManager'
2015-11-24 14:33:46,29915-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'transactionManager'
2015-11-24 14:33:46,31415-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-11-24 14:33:46,31415-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:33:46,31415-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-11-24 14:33:46,33015-11-24 14:33:46  INFO (HibernateTransactionManager.java:415 LINE) HibernateTransactionManager.afterPropertiesSet -> Using DataSource [org.apache.commons.dbcp.BasicDataSource@3df584] of Hibernate SessionFactory for HibernateTransactionManager
2015-11-24 14:33:46,33015-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:46,33015-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'transactionManager'
2015-11-24 14:33:46,33015-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:33:46,33015-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:33:46,33015-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:33:46,33015-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:33:46,33015-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:33:46,33015-11-24 14:33:46 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'operateService'
2015-11-24 14:33:46,33015-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'operateService'
2015-11-24 14:33:46,34515-11-24 14:33:46 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserOperateServiceImp]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:33:46,34515-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'operateService' to allow for resolving potential circular references
2015-11-24 14:33:46,34515-11-24 14:33:46 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'operateService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:33:46,36115-11-24 14:33:46 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'fileRemote'
2015-11-24 14:33:46,36115-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'fileRemote'
2015-11-24 14:33:46,36115-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'fileRemote' to allow for resolving potential circular references
2015-11-24 14:33:46,37715-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'fileRemote'
2015-11-24 14:33:46,39215-11-24 14:33:46 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static
2015-11-24 14:33:46,39215-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'fileRemote'
2015-11-24 14:33:46,39215-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:33:46,39215-11-24 14:33:46 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'operateService' to bean named 'userOperateDao'
2015-11-24 14:33:46,39215-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:46,39215-11-24 14:33:46 DEBUG (AbstractFallbackTransactionAttributeSource.java:106 LINE) AbstractFallbackTransactionAttributeSource.getTransactionAttribute -> Adding transactional method 'registAccount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '',-java.lang.Throwable
2015-11-24 14:33:46,40815-11-24 14:33:46 DEBUG (AbstractAutoProxyCreator.java:534 LINE) AbstractAutoProxyCreator.buildAdvisors -> Creating implicit proxy for bean 'operateService' with 0 common interceptors and 1 specific interceptors
2015-11-24 14:33:46,40815-11-24 14:33:46 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.fx.mobile.user.service.impl.UserOperateServiceImp@6de86394]
2015-11-24 14:33:46,40815-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'operateService'
2015-11-24 14:33:46,40815-11-24 14:33:46 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'SpringContextUtil'
2015-11-24 14:33:46,40815-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'SpringContextUtil'
2015-11-24 14:33:46,40815-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'SpringContextUtil' to allow for resolving potential circular references
2015-11-24 14:33:46,40815-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:46,40815-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'SpringContextUtil'
2015-11-24 14:33:46,40815-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'fileRemote'
2015-11-24 14:33:46,40815-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:33:46,40815-11-24 14:33:46 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userinterfaceService'
2015-11-24 14:33:46,40815-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userinterfaceService'
2015-11-24 14:33:46,42415-11-24 14:33:46 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserInterfaceServiceImpl]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:33:46,42515-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userinterfaceService' to allow for resolving potential circular references
2015-11-24 14:33:46,42515-11-24 14:33:46 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'userinterfaceService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:33:46,42515-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userInterfaceDao'
2015-11-24 14:33:46,42515-11-24 14:33:46 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'userinterfaceService' to bean named 'userInterfaceDao'
2015-11-24 14:33:46,42515-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:46,42515-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userinterfaceService'
2015-11-24 14:33:46,42515-11-24 14:33:46 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'urlProperties'
2015-11-24 14:33:46,42515-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'urlProperties'
2015-11-24 14:33:46,42515-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'urlProperties' to allow for resolving potential circular references
2015-11-24 14:33:46,42515-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:46,42515-11-24 14:33:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'urlProperties'
2015-11-24 14:33:46,42515-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:33:46,42515-11-24 14:33:46 DEBUG (AbstractApplicationContext.java:858 LINE) AbstractApplicationContext.initLifecycleProcessor -> Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@76633855]
2015-11-24 14:33:46,44015-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:33:46,44015-11-24 14:33:46 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-11-24 14:33:46,44015-11-24 14:33:46 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-11-24 14:33:46,44015-11-24 14:33:46 DEBUG (PropertySourcesPropertyResolver.java:93 LINE) PropertySourcesPropertyResolver.getProperty -> Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-11-24 14:33:46,44015-11-24 14:33:46 DEBUG (CacheAwareContextLoaderDelegate.java:93 LINE) CacheAwareContextLoaderDelegate.loadContext -> Storing ApplicationContext in cache under key [[MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:33:46,44015-11-24 14:33:46 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 14:33:46,44015-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:33:46,44015-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:33:46,44015-11-24 14:33:46 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@7dac14dd testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@2c8df9a0, testMethod = getListTest@UserOperateDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 14:33:46,44015-11-24 14:33:46 DEBUG (DirtiesContextTestExecutionListener.java:138 LINE) DirtiesContextTestExecutionListener.afterTestClass -> After test class: context [[TestContext@7dac14dd testClass = UserOperateDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
2015-11-24 14:33:46,45615-11-24 14:33:46  INFO (AbstractApplicationContext.java:1042 LINE) AbstractApplicationContext.doClose -> Closing org.springframework.context.support.GenericApplicationContext@683bf9ff: startup date [Tue Nov 24 14:33:42 CST 2015]; root of context hierarchy
2015-11-24 14:33:46,45615-11-24 14:33:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:33:46,45615-11-24 14:33:46  INFO (DefaultSingletonBeanRegistry.java:444 LINE) DefaultSingletonBeanRegistry.destroySingletons -> Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@8488831: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:33:46,45615-11-24 14:33:46 DEBUG (DefaultSingletonBeanRegistry.java:500 LINE) DefaultSingletonBeanRegistry.destroyBean -> Retrieved dependent beans for bean 'userOperateDao': [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:33:46,45615-11-24 14:33:46 DEBUG (DisposableBeanAdapter.java:219 LINE) DisposableBeanAdapter.destroy -> Invoking destroy() on bean with name 'sessionFactory'
2015-11-24 14:33:46,45615-11-24 14:33:46  INFO (AbstractSessionFactoryBean.java:223 LINE) AbstractSessionFactoryBean.destroy -> Closing Hibernate SessionFactory
2015-11-24 14:33:46,45615-11-24 14:33:46  INFO (SessionFactoryImpl.java:927 LINE) SessionFactoryImpl.close -> closing
2015-11-24 14:33:46,47115-11-24 14:33:46 DEBUG (DisposableBeanAdapter.java:295 LINE) DisposableBeanAdapter.invokeCustomDestroyMethod -> Invoking destroy method 'close' on bean with name 'dataSource'
2015-11-24 14:36:22,18115-11-24 14:36:22 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 14:36:22,27515-11-24 14:36:22 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@5363e54 declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 14:36:22,27515-11-24 14:36:22 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:36:22,27515-11-24 14:36:22 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 14:36:22,30615-11-24 14:36:22 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:36:22,30615-11-24 14:36:22 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:36:22,30615-11-24 14:36:22 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:36:22,30615-11-24 14:36:22 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:36:22,30615-11-24 14:36:22 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:36:22,30615-11-24 14:36:22 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:36:22,30615-11-24 14:36:22 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:36:22,32215-11-24 14:36:22 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:36:22,32215-11-24 14:36:22 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:36:22,32215-11-24 14:36:22 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:36:22,32215-11-24 14:36:22 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:36:22,32215-11-24 14:36:22 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:36:22,36915-11-24 14:36:22 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@2c8df9a0 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@1cff8e3a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4dd290b5 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 14:36:22,36915-11-24 14:36:22 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@4dd290b5 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 14:36:22,36915-11-24 14:36:22 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@4dd290b5 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:36:22,49415-11-24 14:36:22 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:36:22,49415-11-24 14:36:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:36:22,53315-11-24 14:36:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:36:22,53415-11-24 14:36:22 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:36:22,53515-11-24 14:36:22 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:36:22,53515-11-24 14:36:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:36:22,53515-11-24 14:36:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:36:22,53515-11-24 14:36:22 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:36:22,55115-11-24 14:36:22 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 14:36:22,55115-11-24 14:36:22 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 14:36:22,55115-11-24 14:36:22 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 14:36:22,55115-11-24 14:36:22  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 14:36:22,55115-11-24 14:36:22 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:36:22,58215-11-24 14:36:22 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 14:36:22,59815-11-24 14:36:22 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 14:36:22,59815-11-24 14:36:22 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:36:22,66015-11-24 14:36:22 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:36:22,66015-11-24 14:36:22  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 14:36:22,66015-11-24 14:36:22 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:36:22,67615-11-24 14:36:22 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:36:22,69215-11-24 14:36:22 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:36:22,70715-11-24 14:36:22  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 14:36:22,70715-11-24 14:36:22 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:36:22,70715-11-24 14:36:22 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:36:22,73915-11-24 14:36:22 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 14:36:22,73915-11-24 14:36:22 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:36:22,73915-11-24 14:36:22 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:36:22,75415-11-24 14:36:22 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 14:36:22,77015-11-24 14:36:22  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 14:36:22,77015-11-24 14:36:22 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:36:22,77015-11-24 14:36:22 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:36:22,83215-11-24 14:36:22 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 14:36:22,83215-11-24 14:36:22 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:36:22,84815-11-24 14:36:22 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:36:22,87915-11-24 14:36:22  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 14:36:22,87915-11-24 14:36:22  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 14:36:22,89515-11-24 14:36:22 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 14:36:22,89515-11-24 14:36:22 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:36:22,89515-11-24 14:36:22 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:36:22,89515-11-24 14:36:22 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 14:36:22,97315-11-24 14:36:22 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 14:36:22,98915-11-24 14:36:22 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 14:36:22,98915-11-24 14:36:22 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 14:36:22,98915-11-24 14:36:22 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 14:36:22,98915-11-24 14:36:22  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 14:36:22,98915-11-24 14:36:22  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 14:36:23,00415-11-24 14:36:23 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:36:23,00415-11-24 14:36:23 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:36:23,02015-11-24 14:36:23 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:36:23,02015-11-24 14:36:23 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 14:36:23,02015-11-24 14:36:23  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@399a09cf: startup date [Tue Nov 24 14:36:23 CST 2015]; root of context hierarchy
2015-11-24 14:36:23,02015-11-24 14:36:23 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@399a09cf: org.springframework.beans.factory.support.DefaultListableBeanFactory@25303e3b: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 14:36:23,06715-11-24 14:36:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:36:23,06715-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:36:23,09815-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:36:23,09815-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:36:23,20715-11-24 14:36:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:36:23,20715-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:36:23,20715-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 14:36:23,28515-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:36:23,28515-11-24 14:36:23  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 14:36:23,28515-11-24 14:36:23  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 14:36:23,28515-11-24 14:36:23  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 14:36:23,30115-11-24 14:36:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:36:23,30115-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:36:23,30115-11-24 14:36:23  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 14:36:23,30115-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:36:23,30115-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:36:23,30115-11-24 14:36:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:36:23,30115-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:36:23,30115-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:36:23,30115-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:36:23,30115-11-24 14:36:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:36:23,30115-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:36:23,30115-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:36:23,30115-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:36:23,30115-11-24 14:36:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:36:23,30115-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:36:23,33215-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:36:23,33215-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:36:23,34815-11-24 14:36:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:36:23,34815-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:36:23,34815-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 14:36:23,34815-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:36:23,34815-11-24 14:36:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:36:23,34815-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:36:23,34815-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 14:36:23,36415-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:36:23,37915-11-24 14:36:23 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@48ec350d]
2015-11-24 14:36:23,37915-11-24 14:36:23 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@3dd1d4b8]
2015-11-24 14:36:23,37915-11-24 14:36:23  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@25303e3b: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:36:23,39515-11-24 14:36:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 14:36:23,39515-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 14:36:23,39515-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 14:36:23,41015-11-24 14:36:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 14:36:23,41015-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 14:36:23,42615-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 14:36:23,42615-11-24 14:36:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 14:36:23,42615-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 14:36:23,59815-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 14:36:23,61515-11-24 14:36:23 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:36:23,61515-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:36:23,61515-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:36:23,61515-11-24 14:36:23 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:36:23,61515-11-24 14:36:23 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:36:23,61515-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:36:23,61515-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:36:23,61515-11-24 14:36:23 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:36:23,61515-11-24 14:36:23 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:36:23,61515-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:36:23,61515-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:36:23,61515-11-24 14:36:23 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:36:23,63015-11-24 14:36:23 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:36:23,63015-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:36:23,63015-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:36:23,63015-11-24 14:36:23 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:36:23,63015-11-24 14:36:23 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:36:23,63015-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:36:23,63015-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:36:23,63015-11-24 14:36:23 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:36:23,64615-11-24 14:36:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:23,64615-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:23,64615-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 14:36:23,69315-11-24 14:36:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:36:23,69315-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:36:23,69315-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 14:36:23,69315-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:36:23,69315-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:36:23,70815-11-24 14:36:23 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:36:23,72415-11-24 14:36:23 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:36:23,72415-11-24 14:36:23 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 14:36:23,83315-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@3f998f38
2015-11-24 14:36:23,83315-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@3f998f38
2015-11-24 14:36:23,83315-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f998f38
2015-11-24 14:36:23,83315-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d8a421d
2015-11-24 14:36:23,83315-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@663c18ab
2015-11-24 14:36:23,83315-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@6a59828c
2015-11-24 14:36:23,83315-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@63ee39cc
2015-11-24 14:36:23,83315-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@63ee39cc
2015-11-24 14:36:23,83315-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@63ee39cc
2015-11-24 14:36:23,83315-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@56177ce3
2015-11-24 14:36:23,83315-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@56177ce3
2015-11-24 14:36:23,83315-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@56177ce3
2015-11-24 14:36:23,84915-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@6354743
2015-11-24 14:36:23,84915-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@6354743
2015-11-24 14:36:23,84915-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6354743
2015-11-24 14:36:23,84915-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@6444b374
2015-11-24 14:36:23,84915-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@6444b374
2015-11-24 14:36:23,84915-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6444b374
2015-11-24 14:36:23,84915-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4b29670c
2015-11-24 14:36:23,84915-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4b29670c
2015-11-24 14:36:23,84915-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b29670c
2015-11-24 14:36:23,86515-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@241dbb9c
2015-11-24 14:36:23,86515-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@241dbb9c
2015-11-24 14:36:23,86515-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@241dbb9c
2015-11-24 14:36:23,86515-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@c90647a
2015-11-24 14:36:23,86515-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@c90647a
2015-11-24 14:36:23,86515-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@c90647a
2015-11-24 14:36:23,89615-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@705da7e0
2015-11-24 14:36:23,89615-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@705da7e0
2015-11-24 14:36:23,89615-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7f357760
2015-11-24 14:36:23,89615-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7f357760
2015-11-24 14:36:23,89615-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@13f72039
2015-11-24 14:36:23,89615-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@13f72039
2015-11-24 14:36:23,91115-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@4adaf576
2015-11-24 14:36:23,91115-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@4adaf576
2015-11-24 14:36:23,91115-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@67bb66d9
2015-11-24 14:36:23,91115-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@67bb66d9
2015-11-24 14:36:23,91115-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@36f75b16
2015-11-24 14:36:23,91115-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@36f75b16
2015-11-24 14:36:23,97415-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@34c38bef
2015-11-24 14:36:23,97415-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@34c38bef
2015-11-24 14:36:23,97415-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@34c38bef
2015-11-24 14:36:23,97415-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3f36bab
2015-11-24 14:36:23,97415-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@47d13d6a
2015-11-24 14:36:23,99015-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@47d13d6a
2015-11-24 14:36:23,99015-11-24 14:36:23 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@47d13d6a
2015-11-24 14:36:24,00515-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@28176fec
2015-11-24 14:36:24,00515-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@7666cba4
2015-11-24 14:36:24,00515-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7666cba4
2015-11-24 14:36:24,00515-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@56aae217
2015-11-24 14:36:24,00515-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@56aae217
2015-11-24 14:36:24,00515-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@66b03915
2015-11-24 14:36:24,00515-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@66b03915
2015-11-24 14:36:24,00515-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@42593848
2015-11-24 14:36:24,00515-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@42593848
2015-11-24 14:36:24,02115-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@69b24aa6
2015-11-24 14:36:24,02115-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@69b24aa6
2015-11-24 14:36:24,02115-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@720e027a
2015-11-24 14:36:24,02115-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@24ee777a
2015-11-24 14:36:24,02115-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@3f545b48
2015-11-24 14:36:24,02115-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@3f545b48
2015-11-24 14:36:24,02115-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@3f545b48
2015-11-24 14:36:24,02115-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1974eeb0
2015-11-24 14:36:24,02115-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1974eeb0
2015-11-24 14:36:24,02115-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1974eeb0
2015-11-24 14:36:24,02115-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@48097a51
2015-11-24 14:36:24,03615-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@3d702d0
2015-11-24 14:36:24,03615-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@3d702d0
2015-11-24 14:36:24,03615-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@3d702d0
2015-11-24 14:36:24,03615-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71e56215
2015-11-24 14:36:24,03615-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71e56215
2015-11-24 14:36:24,03615-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71e56215
2015-11-24 14:36:24,03615-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@5a70073a
2015-11-24 14:36:24,05215-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@1f28706
2015-11-24 14:36:24,05215-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f28706
2015-11-24 14:36:24,05215-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@43119cb8
2015-11-24 14:36:24,05215-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@9990da7
2015-11-24 14:36:24,05215-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@3b8d3ecd
2015-11-24 14:36:24,05215-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3b8d3ecd
2015-11-24 14:36:24,06815-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4127f9f0
2015-11-24 14:36:24,06815-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@6d5edea8
2015-11-24 14:36:24,06815-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@407c448d
2015-11-24 14:36:24,06815-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@ffbce2a
2015-11-24 14:36:24,06815-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@6534f1db
2015-11-24 14:36:24,06815-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6534f1db
2015-11-24 14:36:24,06815-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1ee35bb2
2015-11-24 14:36:24,06815-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@609912f5
2015-11-24 14:36:24,06815-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@61abc45e
2015-11-24 14:36:24,06815-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@53e9296a
2015-11-24 14:36:24,06815-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@709e192f
2015-11-24 14:36:24,06815-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1b87966c
2015-11-24 14:36:24,06815-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@62a49a92
2015-11-24 14:36:24,06815-11-24 14:36:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@24a019d6
2015-11-24 14:36:24,11515-11-24 14:36:24  INFO (Version.java:37 LINE) Version.<clinit> -> Hibernate Commons Annotations 3.2.0.Final
2015-11-24 14:36:24,13015-11-24 14:36:24  INFO (Environment.java:603 LINE) Environment.<clinit> -> Hibernate 3.6.8.Final
2015-11-24 14:36:24,13015-11-24 14:36:24  INFO (Environment.java:636 LINE) Environment.<clinit> -> hibernate.properties not found
2015-11-24 14:36:24,13015-11-24 14:36:24  INFO (Environment.java:814 LINE) Environment.buildBytecodeProvider -> Bytecode provider name : javassist
2015-11-24 14:36:24,13015-11-24 14:36:24  INFO (Environment.java:695 LINE) Environment.<clinit> -> using JDK 1.4 java.sql.Timestamp handling
2015-11-24 14:36:24,24015-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2015-11-24 14:36:24,24015-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2015-11-24 14:36:24,25515-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:36:24,25515-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:36:24,25515-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2015-11-24 14:36:24,25515-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2015-11-24 14:36:24,25515-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2015-11-24 14:36:24,25515-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2015-11-24 14:36:24,25515-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2015-11-24 14:36:24,25515-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2015-11-24 14:36:24,25515-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2015-11-24 14:36:24,27115-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2015-11-24 14:36:24,27115-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2015-11-24 14:36:24,27115-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-11-24 14:36:24,27115-11-24 14:36:24 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2015-11-24 14:36:24,31815-11-24 14:36:24 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:36:24,31815-11-24 14:36:24  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:36:24,31815-11-24 14:36:24 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:36:24,31815-11-24 14:36:24 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:36:24,36515-11-24 14:36:24 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:36:24,36515-11-24 14:36:24  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:36:24,36515-11-24 14:36:24 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:36:24,36515-11-24 14:36:24 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:36:24,47415-11-24 14:36:24 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:36:24,47415-11-24 14:36:24  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:36:24,47415-11-24 14:36:24 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:36:24,47415-11-24 14:36:24 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:36:24,55215-11-24 14:36:24 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:36:24,58315-11-24 14:36:24  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.UserOperate -> user_operate
2015-11-24 14:36:24,59915-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userName -> userName
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPassword -> userPassword
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: phicommId -> phicomm_id
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userEmail -> userEmail
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPhoneNumb -> user_PhoneNumb
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userType -> userType
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: isChecked -> isChecked
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nickname -> nickname
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: figureurl -> figureurl
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: sex -> sex
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: province -> province
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: city -> city
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: birthday -> birthday
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openId -> open_id
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openKey -> open_key
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: accessToken -> access_token
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: expireseIn -> expirese_in
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: devinfo -> devinfo
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userinfo -> userinfo
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqq -> openqq
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqqinfo -> openqqinfo
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensina -> opensina
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensinainfo -> opensinainfo
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: createTime -> createTime
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: updateTime -> updateTime
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: lastLoginTime -> lastLoginTime
2015-11-24 14:36:24,62815-11-24 14:36:24  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.NoteNumbRecord -> note_numb_record
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nodeNumb -> node_numb
2015-11-24 14:36:24,62815-11-24 14:36:24  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.CrashLog -> crash_log
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: url -> url
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: describes -> describes
2015-11-24 14:36:24,62815-11-24 14:36:24 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: addDate -> addDate
2015-11-24 14:36:24,64315-11-24 14:36:24 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:36:24,64315-11-24 14:36:24 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:36:24,64315-11-24 14:36:24 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:36:24,64315-11-24 14:36:24 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:36:24,64315-11-24 14:36:24 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:36:24,64315-11-24 14:36:24 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:36:24,64315-11-24 14:36:24 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:36:24,64315-11-24 14:36:24 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:36:24,64315-11-24 14:36:24  INFO (Configuration.java:1676 LINE) Configuration.applyHibernateValidatorLegacyConstraintsOnDDL -> Hibernate Validator not found: ignoring
2015-11-24 14:36:24,69015-11-24 14:36:24 DEBUG (LoggerFactory.java:29 LINE) LoggerFactory.make -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-11-24 14:36:24,69015-11-24 14:36:24  INFO (Version.java:27 LINE) Version.<clinit> -> HV000001: Hibernate Validator 5.0.0.Final
2015-11-24 14:36:24,73715-11-24 14:36:24 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:36:24,73715-11-24 14:36:24 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:36:24,75315-11-24 14:36:24 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:36:25,03415-11-24 14:36:25  INFO (LocalSessionFactoryBean.java:780 LINE) LocalSessionFactoryBean.buildSessionFactory -> Building new Hibernate SessionFactory
2015-11-24 14:36:25,03415-11-24 14:36:25 DEBUG (Configuration.java:1854 LINE) Configuration.buildSessionFactory -> Preparing to build session factory with filters : {}
2015-11-24 14:36:25,03415-11-24 14:36:25 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:36:25,03415-11-24 14:36:25 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:36:25,03415-11-24 14:36:25 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:36:25,03415-11-24 14:36:25 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:36:25,03415-11-24 14:36:25 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:36:25,03415-11-24 14:36:25 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:36:25,03415-11-24 14:36:25 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:36:25,03415-11-24 14:36:25 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:36:25,03415-11-24 14:36:25 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:36:25,03415-11-24 14:36:25 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:36:25,03415-11-24 14:36:25 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:36:25,04915-11-24 14:36:25 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:36:25,08115-11-24 14:36:25 DEBUG (Configuration.java:1896 LINE) Configuration.enableLegacyHibernateValidator -> Legacy Validator not present in classpath, ignoring event listener registration
2015-11-24 14:36:25,08115-11-24 14:36:25 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:36:25,08115-11-24 14:36:25 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:36:25,08115-11-24 14:36:25 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:36:25,08115-11-24 14:36:25 DEBUG (HibernateSearchEventListenerRegister.java:231 LINE) HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener -> Search not present in classpath, ignoring event listener registration.
2015-11-24 14:36:25,08115-11-24 14:36:25  INFO (HibernateSearchEventListenerRegister.java:75 LINE) HibernateSearchEventListenerRegister.enableHibernateSearch -> Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2015-11-24 14:36:25,08115-11-24 14:36:25  INFO (ConnectionProviderFactory.java:173 LINE) ConnectionProviderFactory.initializeConnectionProviderFromConfig -> Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2015-11-24 14:36:25,53415-11-24 14:36:25  INFO (Dialect.java:135 LINE) Dialect.<init> -> Using dialect: org.hibernate.dialect.MySQLDialect
2015-11-24 14:36:25,56515-11-24 14:36:25  INFO (SettingsFactory.java:126 LINE) SettingsFactory.buildSettings -> Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-11-24 14:36:25,56515-11-24 14:36:25  INFO (SettingsFactory.java:132 LINE) SettingsFactory.buildSettings -> Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.25 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2015-11-24 14:36:25,56515-11-24 14:36:25  INFO (TransactionFactoryFactory.java:65 LINE) TransactionFactoryFactory.buildTransactionFactory -> Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2015-11-24 14:36:25,58115-11-24 14:36:25  INFO (TransactionManagerLookupFactory.java:83 LINE) TransactionManagerLookupFactory.getTransactionManagerLookup -> No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2015-11-24 14:36:25,58115-11-24 14:36:25  INFO (SettingsFactory.java:179 LINE) SettingsFactory.buildSettings -> Automatic flush during beforeCompletion(): disabled
2015-11-24 14:36:25,58115-11-24 14:36:25  INFO (SettingsFactory.java:183 LINE) SettingsFactory.buildSettings -> Automatic session close at end of transaction: disabled
2015-11-24 14:36:25,58115-11-24 14:36:25  INFO (SettingsFactory.java:190 LINE) SettingsFactory.buildSettings -> JDBC batch size: 25
2015-11-24 14:36:25,58115-11-24 14:36:25  INFO (SettingsFactory.java:193 LINE) SettingsFactory.buildSettings -> JDBC batch updates for versioned data: disabled
2015-11-24 14:36:25,58115-11-24 14:36:25  INFO (SettingsFactory.java:198 LINE) SettingsFactory.buildSettings -> Scrollable result sets: enabled
2015-11-24 14:36:25,58115-11-24 14:36:25 DEBUG (SettingsFactory.java:202 LINE) SettingsFactory.buildSettings -> Wrap result sets: disabled
2015-11-24 14:36:25,62815-11-24 14:36:25  INFO (SettingsFactory.java:206 LINE) SettingsFactory.buildSettings -> JDBC3 getGeneratedKeys(): enabled
2015-11-24 14:36:25,62815-11-24 14:36:25  INFO (SettingsFactory.java:210 LINE) SettingsFactory.buildSettings -> JDBC result set fetch size: 50
2015-11-24 14:36:25,62815-11-24 14:36:25  INFO (SettingsFactory.java:214 LINE) SettingsFactory.buildSettings -> Connection release mode: after_transaction
2015-11-24 14:36:25,62815-11-24 14:36:25  INFO (SettingsFactory.java:238 LINE) SettingsFactory.buildSettings -> Maximum outer join fetch depth: 2
2015-11-24 14:36:25,62815-11-24 14:36:25  INFO (SettingsFactory.java:241 LINE) SettingsFactory.buildSettings -> Default batch fetch size: 1
2015-11-24 14:36:25,62815-11-24 14:36:25  INFO (SettingsFactory.java:245 LINE) SettingsFactory.buildSettings -> Generate SQL with comments: disabled
2015-11-24 14:36:25,64415-11-24 14:36:25  INFO (SettingsFactory.java:249 LINE) SettingsFactory.buildSettings -> Order SQL updates by primary key: disabled
2015-11-24 14:36:25,64415-11-24 14:36:25  INFO (SettingsFactory.java:253 LINE) SettingsFactory.buildSettings -> Order SQL inserts for batching: disabled
2015-11-24 14:36:25,64415-11-24 14:36:25  INFO (SettingsFactory.java:431 LINE) SettingsFactory.createQueryTranslatorFactory -> Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2015-11-24 14:36:25,64415-11-24 14:36:25  INFO (ASTQueryTranslatorFactory.java:47 LINE) ASTQueryTranslatorFactory.<init> -> Using ASTQueryTranslatorFactory
2015-11-24 14:36:25,64415-11-24 14:36:25  INFO (SettingsFactory.java:261 LINE) SettingsFactory.buildSettings -> Query language substitutions: {false='N', true='Y'}
2015-11-24 14:36:25,64415-11-24 14:36:25  INFO (SettingsFactory.java:266 LINE) SettingsFactory.buildSettings -> JPA-QL strict compliance: disabled
2015-11-24 14:36:25,64415-11-24 14:36:25  INFO (SettingsFactory.java:271 LINE) SettingsFactory.buildSettings -> Second-level cache: enabled
2015-11-24 14:36:25,64415-11-24 14:36:25  INFO (SettingsFactory.java:275 LINE) SettingsFactory.buildSettings -> Query cache: enabled
2015-11-24 14:36:25,64415-11-24 14:36:25  INFO (SettingsFactory.java:406 LINE) SettingsFactory.createRegionFactory -> Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
2015-11-24 14:36:25,64415-11-24 14:36:25  INFO (RegionFactoryCacheProviderBridge.java:61 LINE) RegionFactoryCacheProviderBridge.<init> -> Cache provider: org.hibernate.cache.EhCacheProvider
2015-11-24 14:36:25,64415-11-24 14:36:25  INFO (SettingsFactory.java:285 LINE) SettingsFactory.buildSettings -> Optimize cache for minimal puts: disabled
2015-11-24 14:36:25,64415-11-24 14:36:25  INFO (SettingsFactory.java:294 LINE) SettingsFactory.buildSettings -> Structured second-level cache entries: disabled
2015-11-24 14:36:25,64415-11-24 14:36:25  INFO (SettingsFactory.java:385 LINE) SettingsFactory.createQueryCacheFactory -> Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
2015-11-24 14:36:25,66015-11-24 14:36:25  INFO (SettingsFactory.java:314 LINE) SettingsFactory.buildSettings -> Echoing all SQL to stdout
2015-11-24 14:36:25,66015-11-24 14:36:25  INFO (SettingsFactory.java:323 LINE) SettingsFactory.buildSettings -> Statistics: disabled
2015-11-24 14:36:25,66015-11-24 14:36:25  INFO (SettingsFactory.java:327 LINE) SettingsFactory.buildSettings -> Deleted entity synthetic identifier rollback: disabled
2015-11-24 14:36:25,66015-11-24 14:36:25  INFO (SettingsFactory.java:343 LINE) SettingsFactory.buildSettings -> Default entity-mode: pojo
2015-11-24 14:36:25,66015-11-24 14:36:25  INFO (SettingsFactory.java:347 LINE) SettingsFactory.buildSettings -> Named query checking : enabled
2015-11-24 14:36:25,66015-11-24 14:36:25  INFO (SettingsFactory.java:351 LINE) SettingsFactory.buildSettings -> Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2015-11-24 14:36:25,67515-11-24 14:36:25  INFO (SessionFactoryImpl.java:202 LINE) SessionFactoryImpl.<init> -> building session factory
2015-11-24 14:36:25,67515-11-24 14:36:25 DEBUG (SessionFactoryImpl.java:206 LINE) SessionFactoryImpl.<init> -> Statistics initialized [enabled=false]}
2015-11-24 14:36:25,67515-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@3f998f38
2015-11-24 14:36:25,67515-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@3f998f38
2015-11-24 14:36:25,67515-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3f998f38
2015-11-24 14:36:25,67515-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d8a421d
2015-11-24 14:36:25,67515-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@663c18ab
2015-11-24 14:36:25,67515-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@6a59828c
2015-11-24 14:36:25,67515-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@63ee39cc
2015-11-24 14:36:25,67515-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@63ee39cc
2015-11-24 14:36:25,67515-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@63ee39cc
2015-11-24 14:36:25,67515-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@56177ce3
2015-11-24 14:36:25,67515-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@56177ce3
2015-11-24 14:36:25,67515-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@56177ce3
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@6354743
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@6354743
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6354743
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@6444b374
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@6444b374
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6444b374
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4b29670c
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4b29670c
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b29670c
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@241dbb9c
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@241dbb9c
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@241dbb9c
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@c90647a
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@c90647a
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@c90647a
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@705da7e0
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@705da7e0
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@7f357760
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@7f357760
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@13f72039
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@13f72039
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@4adaf576
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@4adaf576
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@67bb66d9
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@67bb66d9
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@36f75b16
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@36f75b16
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@34c38bef
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@34c38bef
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@34c38bef
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3f36bab
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@47d13d6a
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@47d13d6a
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@47d13d6a
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@28176fec
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@7666cba4
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7666cba4
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@56aae217
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@56aae217
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@66b03915
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@66b03915
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@42593848
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@42593848
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@69b24aa6
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@69b24aa6
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@720e027a
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@24ee777a
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@3f545b48
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@3f545b48
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@3f545b48
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1974eeb0
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1974eeb0
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1974eeb0
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@48097a51
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@3d702d0
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@3d702d0
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@3d702d0
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@71e56215
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@71e56215
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@71e56215
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@5a70073a
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@1f28706
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f28706
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@43119cb8
2015-11-24 14:36:25,69115-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@9990da7
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@3b8d3ecd
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3b8d3ecd
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4127f9f0
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@6d5edea8
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@407c448d
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@ffbce2a
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@6534f1db
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6534f1db
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e61dd57
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b0a9ac0
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6535b8e9
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@29fefce8
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@238df8e2
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3dcecfaa
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54a3c199
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4afb4f38
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@437af558
2015-11-24 14:36:25,70715-11-24 14:36:25  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@407c448d
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@78214ca6
2015-11-24 14:36:25,70715-11-24 14:36:25  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [blob] overrides previous : org.hibernate.type.BlobType@1f28706
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@78214ca6
2015-11-24 14:36:25,70715-11-24 14:36:25  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@1f28706
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@1928dc07
2015-11-24 14:36:25,70715-11-24 14:36:25  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [clob] overrides previous : org.hibernate.type.ClobType@3b8d3ecd
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1928dc07
2015-11-24 14:36:25,70715-11-24 14:36:25  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@3b8d3ecd
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@522f63e7
2015-11-24 14:36:25,70715-11-24 14:36:25  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@43119cb8
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@2547fcd8
2015-11-24 14:36:25,70715-11-24 14:36:25  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@9990da7
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@5279effd
2015-11-24 14:36:25,70715-11-24 14:36:25  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@6d5edea8
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@49855c78
2015-11-24 14:36:25,70715-11-24 14:36:25  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@4127f9f0
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (SessionFactoryImpl.java:228 LINE) SessionFactoryImpl.<init> -> Session factory constructed with filter configurations : {}
2015-11-24 14:36:25,70715-11-24 14:36:25 DEBUG (SessionFactoryImpl.java:232 LINE) SessionFactoryImpl.<init> -> instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, sun.boot.library.path=E:\JDK1.7\bin, java.vm.version=23.7-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.cache.use_query_cache=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\workspace\mobile-user, java.runtime.version=1.7.0_17-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=E:\JDK1.7\lib\endorsed, os.arch=amd64, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\gqy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, hibernate.cache.use_second_level_cache=true, sun.jnu.encoding=GBK, hibernate.jdbc.fetch_size=50, java.library.path=E:\JDK1.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\ProgramData\Lenovo\ReadyApps;E:\JDK\bin;E:\JDK\jre\bin;E:\Go\bin;E:\winscp\WinSCP\;E:\maven\apache-maven-3.2.3\bin;C:\Program Files (x86)\DBank\ClickUp;C:\Program Files (x86)\DBank\ClickUp;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\gqy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=after_transaction, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=gqy, java.class.path=G:\workspace\mobile-user\target\test-classes;G:\workspace\mobile-user\target\classes;H:\Respositories2\repository\com\alibaba\fastjson\1.2.4\fastjson-1.2.4.jar;H:\Respositories2\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;H:\Respositories2\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;H:\Respositories2\repository\io\netty\netty\4.0.0.Alpha8\netty-4.0.0.Alpha8.jar;H:\Respositories2\repository\jstl\jstl\1.2\jstl-1.2.jar;H:\Respositories2\repository\org\springframework\spring-aop\3.2.0.RELEASE\spring-aop-3.2.0.RELEASE.jar;H:\Respositories2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;H:\Respositories2\repository\org\springframework\spring-beans\3.2.0.RELEASE\spring-beans-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context\3.2.0.RELEASE\spring-context-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-expression\3.2.0.RELEASE\spring-expression-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context-support\3.2.0.RELEASE\spring-context-support-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-core\3.2.0.RELEASE\spring-core-3.2.0.RELEASE.jar;H:\Respositories2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;H:\Respositories2\repository\org\springframework\spring-jdbc\3.2.0.RELEASE\spring-jdbc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-orm\3.2.0.RELEASE\spring-orm-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-tx\3.2.0.RELEASE\spring-tx-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-web\3.2.0.RELEASE\spring-web-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-webmvc\3.2.0.RELEASE\spring-webmvc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\amqp\spring-amqp\1.2.0.RELEASE\spring-amqp-1.2.0.RELEASE.jar;H:\Respositories2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;H:\Respositories2\repository\com\fasterxml\jackson\core\jackson-core\2.1.0\jackson-core-2.1.0.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.13\jackson-jaxrs-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-xc\1.9.13\jackson-xc-1.9.13.jar;H:\Respositories2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;H:\Respositories2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;H:\Respositories2\repository\mysql\mysql-connector-java\5.1.25\mysql-connector-java-5.1.25.jar;H:\Respositories2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;H:\Respositories2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;H:\Respositories2\repository\org\aspectj\aspectjweaver\1.6.4\aspectjweaver-1.6.4.jar;H:\Respositories2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;H:\Respositories2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;H:\Respositories2\repository\commons-beanutils\commons-beanutils\1.9.0\commons-beanutils-1.9.0.jar;H:\Respositories2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;H:\Respositories2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;H:\Respositories2\repository\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;H:\Respositories2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;H:\Respositories2\repository\org\mybatis\mybatis-spring\1.2.0\mybatis-spring-1.2.0.jar;H:\Respositories2\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;H:\Respositories2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar;H:\Respositories2\repository\org\json\json\20090211\json-20090211.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-lgpl\1.8.1\jackson-core-lgpl-1.8.1.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-lgpl\1.8.1\jackson-mapper-lgpl-1.8.1.jar;H:\Respositories2\repository\org\freemarker\freemarker\2.3.16\freemarker-2.3.16.jar;H:\Respositories2\repository\opensymphony\sitemesh\2.4.2\sitemesh-2.4.2.jar;H:\Respositories2\repository\org\testng\testng\5.9\testng-5.9-jdk15.jar;H:\Respositories2\repository\junit\junit\4.7\junit-4.7.jar;H:\Respositories2\repository\cglib\cglib-asm\1.0\cglib-asm-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-core\1.0\jxls-core-1.0.jar;H:\Respositories2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;H:\Respositories2\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml\3.7\poi-ooxml-3.7.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml-schemas\3.7\poi-ooxml-schemas-3.7.jar;H:\Respositories2\repository\org\apache\xmlbeans\xmlbeans\2.3.0\xmlbeans-2.3.0.jar;H:\Respositories2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;H:\Respositories2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-reader\1.0\jxls-reader-1.0.jar;H:\Respositories2\repository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient\4.3.2\httpclient-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient-cache\4.3.2\httpclient-cache-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpmime\4.3.2\httpmime-4.3.2.jar;H:\Respositories2\repository\org\quartz-scheduler\quartz\1.8.6\quartz-1.8.6.jar;H:\Respositories2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;H:\Respositories2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;H:\Respositories2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;H:\Respositories2\repository\net\coobird\thumbnailator\0.4.7\thumbnailator-0.4.7.jar;H:\Respositories2\repository\jcifs\jcifs\1.3.17\jcifs-1.3.17.jar;H:\Respositories2\repository\org\apache\poi\poi\3.10.1\poi-3.10.1.jar;H:\Respositories2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;H:\Respositories2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;H:\Respositories2\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;H:\Respositories2\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;H:\Respositories2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;H:\Respositories2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;H:\Respositories2\repository\net\sf\supercsv\super-csv\2.2.0\super-csv-2.2.0.jar;H:\Respositories2\repository\org\bouncycastle\bcprov-jdk16\1.45\bcprov-jdk16-1.45.jar;H:\Respositories2\repository\jdom\jdom\1.0\jdom-1.0.jar;H:\Respositories2\repository\com\belerweb\pinyin4j\2.5.0\pinyin4j-2.5.0.jar;H:\Respositories2\repository\org\glassfish\jersey\ext\jersey-spring3\2.4.1\jersey-spring3-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-server\2.4.1\jersey-server-2.4.1.jar;H:\Respositories2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-api\2.2.0-b21\hk2-api-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\javax.inject\2.2.0-b21\javax.inject-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-locator\2.2.0-b21\hk2-locator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\asm-all-repackaged\2.2.0-b21\asm-all-repackaged-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\cglib\2.2.0-b21\cglib-2.2.0-b21.jar;H:\Respositories2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;H:\Respositories2\repository\org\glassfish\jersey\containers\jersey-container-servlet-core\2.4.1\jersey-container-servlet-core-2.4.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2\2.2.0-b21\hk2-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-utils\2.2.0-b21\hk2-utils-2.2.0-b21.jar;H:\Respositories2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;H:\Respositories2\repository\org\glassfish\hk2\config-types\2.2.0-b21\config-types-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\core\2.2.0-b21\core-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-config\2.2.0-b21\hk2-config-2.2.0-b21.jar;H:\Respositories2\repository\org\jvnet\tiger-types\1.4\tiger-types-1.4.jar;H:\Respositories2\repository\org\glassfish\hk2\external\bean-validator\2.2.0-b21\bean-validator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-runlevel\2.2.0-b21\hk2-runlevel-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\class-model\2.2.0-b21\class-model-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\spring-bridge\2.2.0-b21\spring-bridge-2.2.0-b21.jar;H:\Respositories2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\2.4.1\jersey-media-json-jackson-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-common\2.4.1\jersey-common-2.4.1.jar;H:\Respositories2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;H:\Respositories2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.1\osgi-resource-locator-1.0.1.jar;H:\Respositories2\repository\org\codehaus\groovy\groovy-all\2.2.0\groovy-all-2.2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\providers\jersey-test-framework-provider-external\2.5.1\jersey-test-framework-provider-external-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\jersey-test-framework-core\2.5.1\jersey-test-framework-core-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-client\2.5.1\jersey-client-2.5.1.jar;H:\Respositories2\repository\org\springframework\spring-test\3.2.6.RELEASE\spring-test-3.2.6.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session\1.0.1.RELEASE\spring-session-1.0.1.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session-data-redis\1.0.0.RELEASE\spring-session-data-redis-1.0.0.RELEASE.jar;H:\Respositories2\repository\org\apache\commons\commons-pool2\2.2\commons-pool2-2.2.jar;H:\Respositories2\repository\redis\clients\jedis\2.6.0\jedis-2.6.0.jar;H:\Respositories2\repository\org\springframework\data\spring-data-redis\1.4.1.RELEASE\spring-data-redis-1.4.1.RELEASE.jar;H:\Respositories2\repository\net\sf\ehcache\ehcache-core\2.6.11\ehcache-core-2.6.11.jar;H:\Respositories2\repository\org\hibernate3\hibernate3\3.0.0\hibernate3-3.0.0.jar;H:\Respositories2\repository\com\google\code\gson\gson\2.1\gson-2.1.jar;H:\Respositories2\repository\org\apache\openejb\javaee-api\5.0-1\javaee-api-5.0-1.jar;H:\Respositories2\repository\com\alibaba\druid\1.0.2\druid-1.0.2.jar;H:\Respositories2\repository\javax\faces\jsf-impl\1.2_04\jsf-impl-1.2_04.jar;H:\Respositories2\repository\javax\faces\jsf-api\1.2_04\jsf-api-1.2_04.jar;H:\Respositories2\repository\javax\transaction\jta\1.1\jta-1.1.jar;H:\Respositories2\repository\org\apache\ws\wss4j\1.5.1\wss4j-1.5.1.jar;H:\Respositories2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;H:\Respositories2\repository\hibernate\antlr\2.7.5H3\antlr-2.7.5H3.jar;H:\Respositories2\repository\javassist\javassist\3.9.0.GA\javassist-3.9.0.GA.jar;H:\Respositories2\repository\com\fx\mobile\mobile-model\0.0.1-SNAPSHOT\mobile-model-0.0.1-SNAPSHOT.jar;H:\Respositories2\repository\com\fx\mobile\mobile-core\0.0.1\mobile-core-0.0.1.jar;H:\Respositories2\repository\Decoder\sun.misc.BASE64Decoder\1.0.0\sun.misc.BASE64Decoder-1.0.0.jar;H:\Respositories2\repository\marketingFile\marketingFile\0.0.1\marketingFile-0.0.1.jar;H:\Respositories2\repository\com\qq\connect\Sdk4J\1.0\Sdk4J-1.0.jar;H:\Respositories2\repository\org\apache\commons\commons-io\1.3.2\commons-io-1.3.2.jar;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.query.substitutions=true 'Y', false 'N', hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=E:\JDK1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 59970 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.fx.mobile.junit.UserOperateDaoImplTest, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_17, java.ext.dirs=E:\JDK1.7\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=E:\JDK1.7\lib\resources.jar;E:\JDK1.7\lib\rt.jar;E:\JDK1.7\lib\sunrsasign.jar;E:\JDK1.7\lib\jsse.jar;E:\JDK1.7\lib\jce.jar;E:\JDK1.7\lib\charsets.jar;E:\JDK1.7\lib\jfr.jar;E:\JDK1.7\classes, java.vendor=Oracle Corporation, hibernate.jdbc.batch_size=25, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-11-24 14:36:25,72215-11-24 14:36:25 DEBUG (CacheManager.java:684 LINE) CacheManager.parseConfiguration -> Configuring ehcache from classpath.
2015-11-24 14:36:25,73815-11-24 14:36:25 DEBUG (ConfigurationFactory.java:132 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from ehcache.xml found in the classpath: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:36:25,73815-11-24 14:36:25 DEBUG (ConfigurationFactory.java:98 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from URL: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:36:25,73815-11-24 14:36:25 DEBUG (ConfigurationFactory.java:150 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from InputStream
2015-11-24 14:36:25,80015-11-24 14:36:25 DEBUG (DiskStoreConfiguration.java:141 LINE) DiskStoreConfiguration.translatePath -> Disk Store Path: C:\Users\gqy\AppData\Local\Temp\
2015-11-24 14:36:25,83215-11-24 14:36:25 DEBUG (PropertyUtil.java:88 LINE) PropertyUtil.parseProperties -> propertiesString is null.
2015-11-24 14:36:25,84715-11-24 14:36:25 DEBUG (ConfigurationHelper.java:185 LINE) ConfigurationHelper.createCacheManagerEventListener -> No CacheManagerEventListenerFactory class specified. Skipping...
2015-11-24 14:36:25,89415-11-24 14:36:25 DEBUG (Cache.java:955 LINE) Cache.createBootstrapCacheLoader -> No BootstrapCacheLoaderFactory class specified. Skipping...
2015-11-24 14:36:25,89415-11-24 14:36:25 DEBUG (Cache.java:929 LINE) Cache.createCacheWriter -> CacheWriter factory not configured. Skipping...
2015-11-24 14:36:25,89415-11-24 14:36:25 DEBUG (ConfigurationHelper.java:96 LINE) ConfigurationHelper.createCacheExceptionHandler -> No CacheExceptionHandlerFactory class specified. Skipping...
2015-11-24 14:36:25,92515-11-24 14:36:25 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:36:25,92515-11-24 14:36:25 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:36:25,92515-11-24 14:36:25 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:36:26,16015-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.NoteNumbRecord
2015-11-24 14:36:26,16015-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from note_numb_record where id =?
2015-11-24 14:36:26,16015-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select notenumbre_.id, notenumbre_.node_numb as node2_1_ from note_numb_record notenumbre_ where notenumbre_.id=?
2015-11-24 14:36:26,16015-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into note_numb_record (node_numb, id) values (?, ?)
2015-11-24 14:36:26,16015-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update note_numb_record set node_numb=? where id=?
2015-11-24 14:36:26,16015-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from note_numb_record where id=?
2015-11-24 14:36:26,16015-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into note_numb_record (node_numb) values (?)
2015-11-24 14:36:26,16015-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.CrashLog
2015-11-24 14:36:26,16015-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from marketing1.crash_log where id =?
2015-11-24 14:36:26,16015-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select crashlog_.id, crashlog_.url as url2_, crashlog_.describes as describes2_, crashlog_.addDate as addDate2_ from marketing1.crash_log crashlog_ where crashlog_.id=?
2015-11-24 14:36:26,16015-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into marketing1.crash_log (url, describes, addDate, id) values (?, ?, ?, ?)
2015-11-24 14:36:26,16015-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update marketing1.crash_log set url=?, describes=?, addDate=? where id=?
2015-11-24 14:36:26,16015-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from marketing1.crash_log where id=?
2015-11-24 14:36:26,16015-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into marketing1.crash_log (url, describes, addDate) values (?, ?, ?)
2015-11-24 14:36:26,19115-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.UserOperate
2015-11-24 14:36:26,19115-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from user_operate where id =?
2015-11-24 14:36:26,19115-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select useroperat_.id, useroperat_.userName as userName0_, useroperat_.userPassword as userPass3_0_, useroperat_.phicomm_id as phicomm4_0_, useroperat_.userEmail as userEmail0_, useroperat_.user_PhoneNumb as user6_0_, useroperat_.userType as userType0_, useroperat_.isChecked as isChecked0_, useroperat_.nickname as nickname0_, useroperat_.figureurl as figureurl0_, useroperat_.sex as sex0_, useroperat_.province as province0_, useroperat_.city as city0_, useroperat_.birthday as birthday0_, useroperat_.open_id as open15_0_, useroperat_.open_key as open16_0_, useroperat_.access_token as access17_0_, useroperat_.expirese_in as expirese18_0_, useroperat_.devinfo as devinfo0_, useroperat_.userinfo as userinfo0_, useroperat_.openqq as openqq0_, useroperat_.openqqinfo as openqqinfo0_, useroperat_.opensina as opensina0_, useroperat_.opensinainfo as opensin24_0_, useroperat_.createTime as createTime0_, useroperat_.updateTime as updateTime0_, useroperat_.lastLoginTime as lastLog27_0_ from user_operate useroperat_ where useroperat_.id=?
2015-11-24 14:36:26,19115-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:36:26,19115-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update user_operate set userName=?, userPassword=?, phicomm_id=?, userEmail=?, user_PhoneNumb=?, userType=?, isChecked=?, nickname=?, figureurl=?, sex=?, province=?, city=?, birthday=?, open_id=?, open_key=?, access_token=?, expirese_in=?, devinfo=?, userinfo=?, openqq=?, openqqinfo=?, opensina=?, opensinainfo=?, createTime=?, updateTime=?, lastLoginTime=? where id=?
2015-11-24 14:36:26,19115-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from user_operate where id=?
2015-11-24 14:36:26,19115-11-24 14:36:26 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:36:26,20715-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [NONE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:36:26,20715-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:36:26,20715-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:36:26,20715-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE_NOWAIT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:36:26,20715-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [FORCE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:36:26,20715-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? lock in share mode
2015-11-24 14:36:26,20715-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_WRITE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:36:26,20715-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:36:26,20715-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:36:26,20715-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:36:26,22215-11-24 14:36:26 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:36:26,22215-11-24 14:36:26 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:36:26,22215-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [NONE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:36:26,22215-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:36:26,22215-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:36:26,22215-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE_NOWAIT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:36:26,22215-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [FORCE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:36:26,22215-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? lock in share mode
2015-11-24 14:36:26,22215-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_WRITE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:36:26,22215-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:36:26,23815-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:36:26,23815-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:36:26,23815-11-24 14:36:26 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:36:26,23815-11-24 14:36:26 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:36:26,23815-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [NONE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:36:26,23815-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:36:26,23815-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:36:26,23815-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE_NOWAIT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:36:26,23815-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [FORCE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:36:26,23815-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? lock in share mode
2015-11-24 14:36:26,23815-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_WRITE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:36:26,28515-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:36:26,28515-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:36:26,28515-11-24 14:36:26 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:36:26,28515-11-24 14:36:26 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:36:26,28515-11-24 14:36:26 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:36:26,28515-11-24 14:36:26 DEBUG (SessionFactoryObjectFactory.java:61 LINE) SessionFactoryObjectFactory.<clinit> -> initializing class SessionFactoryObjectFactory
2015-11-24 14:36:26,28515-11-24 14:36:26 DEBUG (SessionFactoryObjectFactory.java:99 LINE) SessionFactoryObjectFactory.addInstance -> registered: 2e4533b6-cf5d-40e9-b034-2d404707e32f (unnamed)
2015-11-24 14:36:26,28515-11-24 14:36:26  INFO (SessionFactoryObjectFactory.java:105 LINE) SessionFactoryObjectFactory.addInstance -> Not binding factory to JNDI, no JNDI name configured
2015-11-24 14:36:26,28515-11-24 14:36:26 DEBUG (SessionFactoryImpl.java:369 LINE) SessionFactoryImpl.<init> -> instantiated session factory
2015-11-24 14:36:26,30015-11-24 14:36:26  INFO (SchemaUpdate.java:155 LINE) SchemaUpdate.execute -> Running hbm2ddl schema update
2015-11-24 14:36:26,30015-11-24 14:36:26  INFO (SchemaUpdate.java:167 LINE) SchemaUpdate.execute -> fetching database metadata
2015-11-24 14:36:26,30015-11-24 14:36:26  INFO (SchemaUpdate.java:179 LINE) SchemaUpdate.execute -> updating schema
2015-11-24 14:36:26,30015-11-24 14:36:26 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:36:26,30015-11-24 14:36:26 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:36:26,30015-11-24 14:36:26 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:36:26,30015-11-24 14:36:26 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:36:26,30015-11-24 14:36:26 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:36:26,30015-11-24 14:36:26 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:36:26,30015-11-24 14:36:26 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:36:26,31615-11-24 14:36:26 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:36:26,31615-11-24 14:36:26 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:36:26,31615-11-24 14:36:26 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:36:26,31615-11-24 14:36:26 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:36:26,31615-11-24 14:36:26 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:36:26,34715-11-24 14:36:26  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:36:26,34715-11-24 14:36:26 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:36:26,41015-11-24 14:36:26  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.note_numb_record
2015-11-24 14:36:26,41015-11-24 14:36:26  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [id, node_numb]
2015-11-24 14:36:26,41015-11-24 14:36:26  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:36:26,41015-11-24 14:36:26  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:36:26,42515-11-24 14:36:26  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.user_operate
2015-11-24 14:36:26,42515-11-24 14:36:26  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [birthday, sex, updatetime, open_id, openqq, opensina, userinfo, user_phonenumb, city, createtime, id, userpassword, username, lastlogintime, province, opensinainfo, figureurl, phicomm_id, open_key, access_token, nickname, usertype, ischecked, openqqinfo, useremail, devinfo, expirese_in]
2015-11-24 14:36:26,42515-11-24 14:36:26  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:36:26,42515-11-24 14:36:26  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:36:26,42515-11-24 14:36:26  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:36:26,42515-11-24 14:36:26 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:36:26,42515-11-24 14:36:26 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:36:26,42515-11-24 14:36:26 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:36:26,42515-11-24 14:36:26 DEBUG (SchemaUpdate.java:203 LINE) SchemaUpdate.execute -> create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:36:26,44115-11-24 14:36:26 ERROR (SchemaUpdate.java:212 LINE) SchemaUpdate.execute -> Unsuccessful: create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:36:26,44115-11-24 14:36:26 ERROR (SchemaUpdate.java:213 LINE) SchemaUpdate.execute -> Unknown database 'marketing1'
2015-11-24 14:36:26,44115-11-24 14:36:26  INFO (SchemaUpdate.java:217 LINE) SchemaUpdate.execute -> schema update complete
2015-11-24 14:36:26,44115-11-24 14:36:26  INFO (UpdateTimestampsCache.java:57 LINE) UpdateTimestampsCache.<init> -> starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:36:26,44115-11-24 14:36:26  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
2015-11-24 14:36:26,50415-11-24 14:36:26 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:36:26,50415-11-24 14:36:26 DEBUG (DiskStorePathManager.java:169 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Using diskstore path C:\Users\gqy\AppData\Local\Temp
2015-11-24 14:36:26,50415-11-24 14:36:26 DEBUG (DiskStorePathManager.java:170 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Holding exclusive lock on C:\Users\gqy\AppData\Local\Temp\.ehcache-diskstore.lock
2015-11-24 14:36:26,50415-11-24 14:36:26 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 14:36:26,50415-11-24 14:36:26 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:36:26,51915-11-24 14:36:26 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:36:26,51915-11-24 14:36:26 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:36:26,53515-11-24 14:36:26 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:36:26,53515-11-24 14:36:26 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.UpdateTimestampsCache'.
2015-11-24 14:36:26,53515-11-24 14:36:26 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:36:26,53515-11-24 14:36:26  INFO (StandardQueryCache.java:76 LINE) StandardQueryCache.<init> -> starting query cache at region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:36:26,53515-11-24 14:36:26  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
2015-11-24 14:36:26,53515-11-24 14:36:26 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.StandardQueryCache
2015-11-24 14:36:26,53515-11-24 14:36:26 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 14:36:26,53515-11-24 14:36:26 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:36:26,53515-11-24 14:36:26 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:36:26,53515-11-24 14:36:26 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:36:26,53515-11-24 14:36:26 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.StandardQueryCache
2015-11-24 14:36:26,53515-11-24 14:36:26 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.StandardQueryCache'.
2015-11-24 14:36:26,55015-11-24 14:36:26 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:36:26,55015-11-24 14:36:26 DEBUG (SessionFactoryImpl.java:539 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named HQL queries
2015-11-24 14:36:26,55015-11-24 14:36:26 DEBUG (SessionFactoryImpl.java:559 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named SQL queries
2015-11-24 14:36:26,55015-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:26,55015-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'sessionFactory'
2015-11-24 14:36:26,55015-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:26,55015-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userOperateDao'
2015-11-24 14:36:26,55015-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:26,55015-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userOperateDao'
2015-11-24 14:36:26,55015-11-24 14:36:26 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userInterfaceDao'
2015-11-24 14:36:26,55015-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userInterfaceDao'
2015-11-24 14:36:26,55015-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userInterfaceDao' to allow for resolving potential circular references
2015-11-24 14:36:26,56615-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:36:26,56615-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userInterfaceDao'
2015-11-24 14:36:26,56615-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:26,56615-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userInterfaceDao'
2015-11-24 14:36:26,56615-11-24 14:36:26 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'noteNumRecordDao'
2015-11-24 14:36:26,56615-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'noteNumRecordDao'
2015-11-24 14:36:26,56615-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'noteNumRecordDao' to allow for resolving potential circular references
2015-11-24 14:36:26,56615-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:36:26,56615-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'noteNumRecordDao'
2015-11-24 14:36:26,58215-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:26,58215-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'noteNumRecordDao'
2015-11-24 14:36:26,58215-11-24 14:36:26 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'crashLogDao'
2015-11-24 14:36:26,58215-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'crashLogDao'
2015-11-24 14:36:26,58215-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'crashLogDao' to allow for resolving potential circular references
2015-11-24 14:36:26,64415-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:36:26,64415-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'crashLogDao'
2015-11-24 14:36:26,64415-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:26,64415-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'crashLogDao'
2015-11-24 14:36:26,64415-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'dataSource'
2015-11-24 14:36:26,64415-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:36:26,64415-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:36:26,64415-11-24 14:36:26 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:36:26,64415-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:36:26,64415-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2015-11-24 14:36:26,64415-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:36:26,64415-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:36:26,64415-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:36:26,66015-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:26,66015-11-24 14:36:26 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'transactionManager'
2015-11-24 14:36:26,66015-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'transactionManager'
2015-11-24 14:36:26,66115-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-11-24 14:36:26,66115-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:36:26,67715-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-11-24 14:36:26,67715-11-24 14:36:26  INFO (HibernateTransactionManager.java:415 LINE) HibernateTransactionManager.afterPropertiesSet -> Using DataSource [org.apache.commons.dbcp.BasicDataSource@785d0b86] of Hibernate SessionFactory for HibernateTransactionManager
2015-11-24 14:36:26,67715-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:26,67715-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'transactionManager'
2015-11-24 14:36:26,67715-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:36:26,67715-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:36:26,67715-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:36:26,67715-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:36:26,67715-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:36:26,67715-11-24 14:36:26 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'operateService'
2015-11-24 14:36:26,67715-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'operateService'
2015-11-24 14:36:26,69215-11-24 14:36:26 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserOperateServiceImp]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:36:26,69215-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'operateService' to allow for resolving potential circular references
2015-11-24 14:36:26,69215-11-24 14:36:26 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'operateService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:36:26,70815-11-24 14:36:26 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'fileRemote'
2015-11-24 14:36:26,70815-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'fileRemote'
2015-11-24 14:36:26,70815-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'fileRemote' to allow for resolving potential circular references
2015-11-24 14:36:26,72315-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'fileRemote'
2015-11-24 14:36:26,73915-11-24 14:36:26 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static
2015-11-24 14:36:26,73915-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'fileRemote'
2015-11-24 14:36:26,73915-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:36:26,73915-11-24 14:36:26 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'operateService' to bean named 'userOperateDao'
2015-11-24 14:36:26,73915-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:26,75515-11-24 14:36:26 DEBUG (AbstractFallbackTransactionAttributeSource.java:106 LINE) AbstractFallbackTransactionAttributeSource.getTransactionAttribute -> Adding transactional method 'registAccount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '',-java.lang.Throwable
2015-11-24 14:36:26,75515-11-24 14:36:26 DEBUG (AbstractAutoProxyCreator.java:534 LINE) AbstractAutoProxyCreator.buildAdvisors -> Creating implicit proxy for bean 'operateService' with 0 common interceptors and 1 specific interceptors
2015-11-24 14:36:26,75515-11-24 14:36:26 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.fx.mobile.user.service.impl.UserOperateServiceImp@5fe28c28]
2015-11-24 14:36:26,77015-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'operateService'
2015-11-24 14:36:26,77015-11-24 14:36:26 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'SpringContextUtil'
2015-11-24 14:36:26,77015-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'SpringContextUtil'
2015-11-24 14:36:26,77015-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'SpringContextUtil' to allow for resolving potential circular references
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'SpringContextUtil'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'fileRemote'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userinterfaceService'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userinterfaceService'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserInterfaceServiceImpl]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userinterfaceService' to allow for resolving potential circular references
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'userinterfaceService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userInterfaceDao'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'userinterfaceService' to bean named 'userInterfaceDao'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userinterfaceService'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'urlProperties'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'urlProperties'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'urlProperties' to allow for resolving potential circular references
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'urlProperties'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractApplicationContext.java:858 LINE) AbstractApplicationContext.initLifecycleProcessor -> Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@33666fbb]
2015-11-24 14:36:26,80215-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:36:26,81715-11-24 14:36:26 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-11-24 14:36:26,81715-11-24 14:36:26 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-11-24 14:36:26,81715-11-24 14:36:26 DEBUG (PropertySourcesPropertyResolver.java:93 LINE) PropertySourcesPropertyResolver.getProperty -> Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-11-24 14:36:26,81715-11-24 14:36:26 DEBUG (CacheAwareContextLoaderDelegate.java:93 LINE) CacheAwareContextLoaderDelegate.loadContext -> Storing ApplicationContext in cache under key [[MergedContextConfiguration@4dd290b5 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:36:26,81715-11-24 14:36:26 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 14:36:26,81715-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:36:26,81715-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:36:26,81715-11-24 14:36:26 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@2c8df9a0 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@1cff8e3a, testMethod = getListTest@UserOperateDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4dd290b5 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 14:36:26,81715-11-24 14:36:26 DEBUG (DirtiesContextTestExecutionListener.java:138 LINE) DirtiesContextTestExecutionListener.afterTestClass -> After test class: context [[TestContext@2c8df9a0 testClass = UserOperateDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4dd290b5 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
2015-11-24 14:36:26,81715-11-24 14:36:26  INFO (AbstractApplicationContext.java:1042 LINE) AbstractApplicationContext.doClose -> Closing org.springframework.context.support.GenericApplicationContext@399a09cf: startup date [Tue Nov 24 14:36:23 CST 2015]; root of context hierarchy
2015-11-24 14:36:26,83315-11-24 14:36:26 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:36:26,83315-11-24 14:36:26  INFO (DefaultSingletonBeanRegistry.java:444 LINE) DefaultSingletonBeanRegistry.destroySingletons -> Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@25303e3b: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:36:26,83315-11-24 14:36:26 DEBUG (DefaultSingletonBeanRegistry.java:500 LINE) DefaultSingletonBeanRegistry.destroyBean -> Retrieved dependent beans for bean 'userOperateDao': [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:36:26,83315-11-24 14:36:26 DEBUG (DisposableBeanAdapter.java:219 LINE) DisposableBeanAdapter.destroy -> Invoking destroy() on bean with name 'sessionFactory'
2015-11-24 14:36:26,83315-11-24 14:36:26  INFO (AbstractSessionFactoryBean.java:223 LINE) AbstractSessionFactoryBean.destroy -> Closing Hibernate SessionFactory
2015-11-24 14:36:26,83315-11-24 14:36:26  INFO (SessionFactoryImpl.java:927 LINE) SessionFactoryImpl.close -> closing
2015-11-24 14:36:26,84815-11-24 14:36:26 DEBUG (DisposableBeanAdapter.java:295 LINE) DisposableBeanAdapter.invokeCustomDestroyMethod -> Invoking destroy method 'close' on bean with name 'dataSource'
2015-11-24 14:48:44,22215-11-24 14:48:44 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 14:48:44,26915-11-24 14:48:44 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@1c398896 declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 14:48:44,26915-11-24 14:48:44 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:48:44,26915-11-24 14:48:44 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 14:48:44,30015-11-24 14:48:44 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:48:44,30015-11-24 14:48:44 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:48:44,30015-11-24 14:48:44 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:48:44,30015-11-24 14:48:44 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:48:44,30015-11-24 14:48:44 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:48:44,30015-11-24 14:48:44 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:48:44,30015-11-24 14:48:44 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:48:44,30015-11-24 14:48:44 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:48:44,30015-11-24 14:48:44 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:48:44,30015-11-24 14:48:44 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:48:44,30015-11-24 14:48:44 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:48:44,30015-11-24 14:48:44 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:48:44,31615-11-24 14:48:44 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@7dac14dd testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@2c8df9a0, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 14:48:44,31615-11-24 14:48:44 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 14:48:44,31615-11-24 14:48:44 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:48:44,39415-11-24 14:48:44 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:48:44,39415-11-24 14:48:44 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:48:44,39415-11-24 14:48:44 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:48:44,39415-11-24 14:48:44 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:48:44,39415-11-24 14:48:44 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:48:44,39415-11-24 14:48:44 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:48:44,39415-11-24 14:48:44 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:48:44,39415-11-24 14:48:44 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:48:44,41015-11-24 14:48:44 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 14:48:44,41015-11-24 14:48:44 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 14:48:44,41015-11-24 14:48:44 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 14:48:44,41015-11-24 14:48:44  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 14:48:44,41015-11-24 14:48:44 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:48:44,42515-11-24 14:48:44 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 14:48:44,44115-11-24 14:48:44 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 14:48:44,44115-11-24 14:48:44 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:48:44,48815-11-24 14:48:44 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:48:44,48815-11-24 14:48:44  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 14:48:44,48815-11-24 14:48:44 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:48:44,48815-11-24 14:48:44 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:48:44,51915-11-24 14:48:44 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:48:44,53515-11-24 14:48:44  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 14:48:44,53515-11-24 14:48:44 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:48:44,55015-11-24 14:48:44 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:48:44,58215-11-24 14:48:44 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 14:48:44,58215-11-24 14:48:44 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:48:44,58215-11-24 14:48:44 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:48:44,59715-11-24 14:48:44 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 14:48:44,61315-11-24 14:48:44  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 14:48:44,61315-11-24 14:48:44 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:48:44,61315-11-24 14:48:44 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:48:44,62915-11-24 14:48:44 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 14:48:44,62915-11-24 14:48:44 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:48:44,64415-11-24 14:48:44 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:48:44,67515-11-24 14:48:44  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 14:48:44,67515-11-24 14:48:44  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 14:48:44,69115-11-24 14:48:44 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 14:48:44,69115-11-24 14:48:44 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:48:44,69115-11-24 14:48:44 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:48:44,69115-11-24 14:48:44 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 14:48:44,70715-11-24 14:48:44 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 14:48:44,70715-11-24 14:48:44 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 14:48:44,70715-11-24 14:48:44 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 14:48:44,72215-11-24 14:48:44 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 14:48:44,72215-11-24 14:48:44  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 14:48:44,72215-11-24 14:48:44  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 14:48:44,72215-11-24 14:48:44 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:48:44,72215-11-24 14:48:44 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:48:44,73815-11-24 14:48:44 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:48:44,73815-11-24 14:48:44 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 14:48:44,75415-11-24 14:48:44  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@683bf9ff: startup date [Tue Nov 24 14:48:44 CST 2015]; root of context hierarchy
2015-11-24 14:48:44,75415-11-24 14:48:44 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@683bf9ff: org.springframework.beans.factory.support.DefaultListableBeanFactory@51e54d36: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 14:48:44,78515-11-24 14:48:44 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:48:44,78515-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:48:44,78515-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:48:44,80015-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:48:44,84715-11-24 14:48:44 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:48:44,84715-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:48:44,84715-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 14:48:44,89715-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:48:44,89715-11-24 14:48:44  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 14:48:44,89715-11-24 14:48:44  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 14:48:44,89715-11-24 14:48:44  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 14:48:44,91315-11-24 14:48:44 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:48:44,91315-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:48:44,91315-11-24 14:48:44  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 14:48:44,91315-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:48:44,91315-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:48:44,91315-11-24 14:48:44 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:48:44,91315-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:48:44,91315-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:48:44,91315-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:48:44,91315-11-24 14:48:44 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:48:44,91315-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:48:44,91315-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:48:44,91315-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:48:44,91315-11-24 14:48:44 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:48:44,91315-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:48:44,92815-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:48:44,92815-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:48:44,92815-11-24 14:48:44 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:48:44,92815-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:48:44,92815-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 14:48:44,92815-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:48:44,92815-11-24 14:48:44 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:48:44,92815-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:48:44,92815-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 14:48:44,94415-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:48:44,94415-11-24 14:48:44 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2f142f76]
2015-11-24 14:48:44,94415-11-24 14:48:44 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@157709f9]
2015-11-24 14:48:44,94415-11-24 14:48:44  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@51e54d36: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:48:44,94415-11-24 14:48:44 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 14:48:44,94415-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 14:48:44,96015-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 14:48:44,97515-11-24 14:48:44 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 14:48:44,97515-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 14:48:44,99115-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 14:48:44,99115-11-24 14:48:44 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 14:48:44,99115-11-24 14:48:44 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 14:48:45,06915-11-24 14:48:45 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 14:48:45,06915-11-24 14:48:45 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:48:45,06915-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:48:45,06915-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:48:45,06915-11-24 14:48:45 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:48:45,06915-11-24 14:48:45 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:48:45,06915-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:48:45,06915-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:48:45,06915-11-24 14:48:45 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:48:45,06915-11-24 14:48:45 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:48:45,06915-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:48:45,06915-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:48:45,06915-11-24 14:48:45 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:48:45,08515-11-24 14:48:45 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:48:45,08515-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:48:45,08515-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:48:45,08515-11-24 14:48:45 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:48:45,08515-11-24 14:48:45 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:48:45,08515-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:48:45,08515-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:48:45,08515-11-24 14:48:45 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:48:45,08515-11-24 14:48:45 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:45,08515-11-24 14:48:45 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:45,10015-11-24 14:48:45 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 14:48:45,11615-11-24 14:48:45 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:48:45,11615-11-24 14:48:45 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:48:45,11615-11-24 14:48:45 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 14:48:45,11615-11-24 14:48:45 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:48:45,11615-11-24 14:48:45 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:45,11615-11-24 14:48:45 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:48:45,13215-11-24 14:48:45 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 14:48:45,19415-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@45a417e6
2015-11-24 14:48:45,19415-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@45a417e6
2015-11-24 14:48:45,19415-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@45a417e6
2015-11-24 14:48:45,19415-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1ae418e6
2015-11-24 14:48:45,19415-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@36150c02
2015-11-24 14:48:45,19415-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@388e959d
2015-11-24 14:48:45,21015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@3d758b59
2015-11-24 14:48:45,21015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@3d758b59
2015-11-24 14:48:45,21015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d758b59
2015-11-24 14:48:45,21015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@65371c10
2015-11-24 14:48:45,21015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@65371c10
2015-11-24 14:48:45,21015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65371c10
2015-11-24 14:48:45,21015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@455d59c3
2015-11-24 14:48:45,21015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@455d59c3
2015-11-24 14:48:45,21015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@455d59c3
2015-11-24 14:48:45,21015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@61de46fe
2015-11-24 14:48:45,21015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@61de46fe
2015-11-24 14:48:45,21015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@61de46fe
2015-11-24 14:48:45,22515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@5ef295e2
2015-11-24 14:48:45,22515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@5ef295e2
2015-11-24 14:48:45,22515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@5ef295e2
2015-11-24 14:48:45,22515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@8a93430
2015-11-24 14:48:45,22515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@8a93430
2015-11-24 14:48:45,22515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8a93430
2015-11-24 14:48:45,22515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@687f705e
2015-11-24 14:48:45,22515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@687f705e
2015-11-24 14:48:45,22515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@687f705e
2015-11-24 14:48:45,22515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1405448f
2015-11-24 14:48:45,22515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1405448f
2015-11-24 14:48:45,24115-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@27ad510b
2015-11-24 14:48:45,24115-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@27ad510b
2015-11-24 14:48:45,24115-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@956ff4d
2015-11-24 14:48:45,24115-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@956ff4d
2015-11-24 14:48:45,24115-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@577e923
2015-11-24 14:48:45,24115-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@577e923
2015-11-24 14:48:45,24115-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@6c747b55
2015-11-24 14:48:45,24115-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@6c747b55
2015-11-24 14:48:45,25715-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@2f8e8219
2015-11-24 14:48:45,25715-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2f8e8219
2015-11-24 14:48:45,25715-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@264c9375
2015-11-24 14:48:45,25715-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@264c9375
2015-11-24 14:48:45,25715-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@264c9375
2015-11-24 14:48:45,25715-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ca2d8f6
2015-11-24 14:48:45,27215-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@7a7fbf64
2015-11-24 14:48:45,27215-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a7fbf64
2015-11-24 14:48:45,27215-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a7fbf64
2015-11-24 14:48:45,27215-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@47d13d6a
2015-11-24 14:48:45,27215-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@36cee6e3
2015-11-24 14:48:45,27215-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@36cee6e3
2015-11-24 14:48:45,27215-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@3f801e2c
2015-11-24 14:48:45,27215-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f801e2c
2015-11-24 14:48:45,28815-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@340fa702
2015-11-24 14:48:45,28815-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@340fa702
2015-11-24 14:48:45,28815-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@2b666886
2015-11-24 14:48:45,28815-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2b666886
2015-11-24 14:48:45,28815-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7613e00b
2015-11-24 14:48:45,28815-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7613e00b
2015-11-24 14:48:45,28815-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4ed03254
2015-11-24 14:48:45,28815-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@f67264e
2015-11-24 14:48:45,28815-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@3674f334
2015-11-24 14:48:45,28815-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@3674f334
2015-11-24 14:48:45,28815-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@3674f334
2015-11-24 14:48:45,30315-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@23e1cfd
2015-11-24 14:48:45,30315-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@23e1cfd
2015-11-24 14:48:45,30315-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@23e1cfd
2015-11-24 14:48:45,30315-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@21b19aaa
2015-11-24 14:48:45,30315-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@4511d0ea
2015-11-24 14:48:45,30315-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@4511d0ea
2015-11-24 14:48:45,30315-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@4511d0ea
2015-11-24 14:48:45,30315-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@239548df
2015-11-24 14:48:45,30315-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@239548df
2015-11-24 14:48:45,30315-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@239548df
2015-11-24 14:48:45,31915-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@228c94a
2015-11-24 14:48:45,33515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@6e814ecf
2015-11-24 14:48:45,33515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6e814ecf
2015-11-24 14:48:45,33515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@441154d
2015-11-24 14:48:45,33515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@28ec8597
2015-11-24 14:48:45,33515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@6ef1dd49
2015-11-24 14:48:45,33515-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6ef1dd49
2015-11-24 14:48:45,35015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@585f257a
2015-11-24 14:48:45,35015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@44d88759
2015-11-24 14:48:45,35015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@12f21700
2015-11-24 14:48:45,35015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@6dadd89d
2015-11-24 14:48:45,35015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@5013825f
2015-11-24 14:48:45,35015-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5013825f
2015-11-24 14:48:45,36615-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a9cce0f
2015-11-24 14:48:45,36615-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5c9c7177
2015-11-24 14:48:45,36615-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22dd6b21
2015-11-24 14:48:45,36615-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@76a45568
2015-11-24 14:48:45,36615-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1ee35bb2
2015-11-24 14:48:45,36615-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@609912f5
2015-11-24 14:48:45,36615-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@61abc45e
2015-11-24 14:48:45,36615-11-24 14:48:45 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@53e9296a
2015-11-24 14:48:45,41315-11-24 14:48:45  INFO (Version.java:37 LINE) Version.<clinit> -> Hibernate Commons Annotations 3.2.0.Final
2015-11-24 14:48:45,41315-11-24 14:48:45  INFO (Environment.java:603 LINE) Environment.<clinit> -> Hibernate 3.6.8.Final
2015-11-24 14:48:45,42815-11-24 14:48:45  INFO (Environment.java:636 LINE) Environment.<clinit> -> hibernate.properties not found
2015-11-24 14:48:45,42815-11-24 14:48:45  INFO (Environment.java:814 LINE) Environment.buildBytecodeProvider -> Bytecode provider name : javassist
2015-11-24 14:48:45,42815-11-24 14:48:45  INFO (Environment.java:695 LINE) Environment.<clinit> -> using JDK 1.4 java.sql.Timestamp handling
2015-11-24 14:48:45,52215-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2015-11-24 14:48:45,53815-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2015-11-24 14:48:45,53815-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:48:45,53815-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:48:45,53815-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2015-11-24 14:48:45,53815-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2015-11-24 14:48:45,53815-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2015-11-24 14:48:45,53815-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2015-11-24 14:48:45,55315-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2015-11-24 14:48:45,55315-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2015-11-24 14:48:45,55315-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2015-11-24 14:48:45,55315-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2015-11-24 14:48:45,55315-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2015-11-24 14:48:45,55315-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-11-24 14:48:45,55315-11-24 14:48:45 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2015-11-24 14:48:45,61615-11-24 14:48:45 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:48:45,61615-11-24 14:48:45  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:48:45,61615-11-24 14:48:45 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:48:45,61615-11-24 14:48:45 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:48:45,67815-11-24 14:48:45 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:48:45,67815-11-24 14:48:45  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:48:45,67815-11-24 14:48:45 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:48:45,67815-11-24 14:48:45 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:48:45,69415-11-24 14:48:45 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:48:45,69415-11-24 14:48:45  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:48:45,69415-11-24 14:48:45 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:48:45,69415-11-24 14:48:45 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:48:45,78815-11-24 14:48:45 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:48:45,80315-11-24 14:48:45  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.UserOperate -> user_operate
2015-11-24 14:48:45,81915-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:48:45,81915-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userName -> userName
2015-11-24 14:48:45,81915-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPassword -> userPassword
2015-11-24 14:48:45,81915-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: phicommId -> phicomm_id
2015-11-24 14:48:45,81915-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userEmail -> userEmail
2015-11-24 14:48:45,81915-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPhoneNumb -> user_PhoneNumb
2015-11-24 14:48:45,81915-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userType -> userType
2015-11-24 14:48:45,81915-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: isChecked -> isChecked
2015-11-24 14:48:45,81915-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nickname -> nickname
2015-11-24 14:48:45,81915-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: figureurl -> figureurl
2015-11-24 14:48:45,81915-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: sex -> sex
2015-11-24 14:48:45,81915-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: province -> province
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: city -> city
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: birthday -> birthday
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openId -> open_id
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openKey -> open_key
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: accessToken -> access_token
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: expireseIn -> expirese_in
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: devinfo -> devinfo
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userinfo -> userinfo
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqq -> openqq
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqqinfo -> openqqinfo
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensina -> opensina
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensinainfo -> opensinainfo
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: createTime -> createTime
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: updateTime -> updateTime
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: lastLoginTime -> lastLoginTime
2015-11-24 14:48:45,83515-11-24 14:48:45  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.NoteNumbRecord -> note_numb_record
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nodeNumb -> node_numb
2015-11-24 14:48:45,83515-11-24 14:48:45  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.CrashLog -> crash_log
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: url -> url
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: describes -> describes
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: addDate -> addDate
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:48:45,83515-11-24 14:48:45 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:48:45,85015-11-24 14:48:45  INFO (Configuration.java:1676 LINE) Configuration.applyHibernateValidatorLegacyConstraintsOnDDL -> Hibernate Validator not found: ignoring
2015-11-24 14:48:45,93115-11-24 14:48:45 DEBUG (LoggerFactory.java:29 LINE) LoggerFactory.make -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-11-24 14:48:45,93115-11-24 14:48:45  INFO (Version.java:27 LINE) Version.<clinit> -> HV000001: Hibernate Validator 5.0.0.Final
2015-11-24 14:48:45,94715-11-24 14:48:45 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:48:45,96315-11-24 14:48:45 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:48:45,97815-11-24 14:48:45 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:48:46,10315-11-24 14:48:46  INFO (LocalSessionFactoryBean.java:780 LINE) LocalSessionFactoryBean.buildSessionFactory -> Building new Hibernate SessionFactory
2015-11-24 14:48:46,10315-11-24 14:48:46 DEBUG (Configuration.java:1854 LINE) Configuration.buildSessionFactory -> Preparing to build session factory with filters : {}
2015-11-24 14:48:46,10315-11-24 14:48:46 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:48:46,10315-11-24 14:48:46 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:48:46,10315-11-24 14:48:46 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:48:46,10315-11-24 14:48:46 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:48:46,10315-11-24 14:48:46 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:48:46,10315-11-24 14:48:46 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:48:46,10315-11-24 14:48:46 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:48:46,10315-11-24 14:48:46 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:48:46,10315-11-24 14:48:46 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:48:46,10315-11-24 14:48:46 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:48:46,10315-11-24 14:48:46 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:48:46,10315-11-24 14:48:46 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:48:46,11915-11-24 14:48:46 DEBUG (Configuration.java:1896 LINE) Configuration.enableLegacyHibernateValidator -> Legacy Validator not present in classpath, ignoring event listener registration
2015-11-24 14:48:46,11915-11-24 14:48:46 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:48:46,11915-11-24 14:48:46 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:48:46,11915-11-24 14:48:46 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:48:46,13515-11-24 14:48:46 DEBUG (HibernateSearchEventListenerRegister.java:231 LINE) HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener -> Search not present in classpath, ignoring event listener registration.
2015-11-24 14:48:46,13515-11-24 14:48:46  INFO (HibernateSearchEventListenerRegister.java:75 LINE) HibernateSearchEventListenerRegister.enableHibernateSearch -> Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2015-11-24 14:48:46,13515-11-24 14:48:46  INFO (ConnectionProviderFactory.java:173 LINE) ConnectionProviderFactory.initializeConnectionProviderFromConfig -> Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2015-11-24 14:48:46,43115-11-24 14:48:46  INFO (Dialect.java:135 LINE) Dialect.<init> -> Using dialect: org.hibernate.dialect.MySQLDialect
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:126 LINE) SettingsFactory.buildSettings -> Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:132 LINE) SettingsFactory.buildSettings -> Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.25 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (TransactionFactoryFactory.java:65 LINE) TransactionFactoryFactory.buildTransactionFactory -> Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (TransactionManagerLookupFactory.java:83 LINE) TransactionManagerLookupFactory.getTransactionManagerLookup -> No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:179 LINE) SettingsFactory.buildSettings -> Automatic flush during beforeCompletion(): disabled
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:183 LINE) SettingsFactory.buildSettings -> Automatic session close at end of transaction: disabled
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:190 LINE) SettingsFactory.buildSettings -> JDBC batch size: 25
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:193 LINE) SettingsFactory.buildSettings -> JDBC batch updates for versioned data: disabled
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:198 LINE) SettingsFactory.buildSettings -> Scrollable result sets: enabled
2015-11-24 14:48:46,44715-11-24 14:48:46 DEBUG (SettingsFactory.java:202 LINE) SettingsFactory.buildSettings -> Wrap result sets: disabled
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:206 LINE) SettingsFactory.buildSettings -> JDBC3 getGeneratedKeys(): enabled
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:210 LINE) SettingsFactory.buildSettings -> JDBC result set fetch size: 50
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:214 LINE) SettingsFactory.buildSettings -> Connection release mode: after_transaction
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:238 LINE) SettingsFactory.buildSettings -> Maximum outer join fetch depth: 2
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:241 LINE) SettingsFactory.buildSettings -> Default batch fetch size: 1
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:245 LINE) SettingsFactory.buildSettings -> Generate SQL with comments: disabled
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:249 LINE) SettingsFactory.buildSettings -> Order SQL updates by primary key: disabled
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:253 LINE) SettingsFactory.buildSettings -> Order SQL inserts for batching: disabled
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (SettingsFactory.java:431 LINE) SettingsFactory.createQueryTranslatorFactory -> Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2015-11-24 14:48:46,44715-11-24 14:48:46  INFO (ASTQueryTranslatorFactory.java:47 LINE) ASTQueryTranslatorFactory.<init> -> Using ASTQueryTranslatorFactory
2015-11-24 14:48:46,46315-11-24 14:48:46  INFO (SettingsFactory.java:261 LINE) SettingsFactory.buildSettings -> Query language substitutions: {false='N', true='Y'}
2015-11-24 14:48:46,46315-11-24 14:48:46  INFO (SettingsFactory.java:266 LINE) SettingsFactory.buildSettings -> JPA-QL strict compliance: disabled
2015-11-24 14:48:46,46315-11-24 14:48:46  INFO (SettingsFactory.java:271 LINE) SettingsFactory.buildSettings -> Second-level cache: enabled
2015-11-24 14:48:46,46315-11-24 14:48:46  INFO (SettingsFactory.java:275 LINE) SettingsFactory.buildSettings -> Query cache: enabled
2015-11-24 14:48:46,46315-11-24 14:48:46  INFO (SettingsFactory.java:406 LINE) SettingsFactory.createRegionFactory -> Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
2015-11-24 14:48:46,46315-11-24 14:48:46  INFO (RegionFactoryCacheProviderBridge.java:61 LINE) RegionFactoryCacheProviderBridge.<init> -> Cache provider: org.hibernate.cache.EhCacheProvider
2015-11-24 14:48:46,46315-11-24 14:48:46  INFO (SettingsFactory.java:285 LINE) SettingsFactory.buildSettings -> Optimize cache for minimal puts: disabled
2015-11-24 14:48:46,46315-11-24 14:48:46  INFO (SettingsFactory.java:294 LINE) SettingsFactory.buildSettings -> Structured second-level cache entries: disabled
2015-11-24 14:48:46,46315-11-24 14:48:46  INFO (SettingsFactory.java:385 LINE) SettingsFactory.createQueryCacheFactory -> Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
2015-11-24 14:48:46,47815-11-24 14:48:46  INFO (SettingsFactory.java:314 LINE) SettingsFactory.buildSettings -> Echoing all SQL to stdout
2015-11-24 14:48:46,47815-11-24 14:48:46  INFO (SettingsFactory.java:323 LINE) SettingsFactory.buildSettings -> Statistics: disabled
2015-11-24 14:48:46,47815-11-24 14:48:46  INFO (SettingsFactory.java:327 LINE) SettingsFactory.buildSettings -> Deleted entity synthetic identifier rollback: disabled
2015-11-24 14:48:46,47815-11-24 14:48:46  INFO (SettingsFactory.java:343 LINE) SettingsFactory.buildSettings -> Default entity-mode: pojo
2015-11-24 14:48:46,47815-11-24 14:48:46  INFO (SettingsFactory.java:347 LINE) SettingsFactory.buildSettings -> Named query checking : enabled
2015-11-24 14:48:46,47815-11-24 14:48:46  INFO (SettingsFactory.java:351 LINE) SettingsFactory.buildSettings -> Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2015-11-24 14:48:46,49415-11-24 14:48:46  INFO (SessionFactoryImpl.java:202 LINE) SessionFactoryImpl.<init> -> building session factory
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (SessionFactoryImpl.java:206 LINE) SessionFactoryImpl.<init> -> Statistics initialized [enabled=false]}
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@45a417e6
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@45a417e6
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@45a417e6
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1ae418e6
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@36150c02
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@388e959d
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@3d758b59
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@3d758b59
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d758b59
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@65371c10
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@65371c10
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65371c10
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@455d59c3
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@455d59c3
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@455d59c3
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@61de46fe
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@61de46fe
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@61de46fe
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@5ef295e2
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@5ef295e2
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@5ef295e2
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@8a93430
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@8a93430
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@8a93430
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@687f705e
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@687f705e
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@687f705e
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1405448f
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1405448f
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@27ad510b
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@27ad510b
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@956ff4d
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@956ff4d
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@577e923
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@577e923
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@6c747b55
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@6c747b55
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@2f8e8219
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2f8e8219
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@264c9375
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@264c9375
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@264c9375
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1ca2d8f6
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@7a7fbf64
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a7fbf64
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a7fbf64
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@47d13d6a
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@36cee6e3
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@36cee6e3
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@3f801e2c
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3f801e2c
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@340fa702
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@340fa702
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@2b666886
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2b666886
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7613e00b
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7613e00b
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4ed03254
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@f67264e
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@3674f334
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@3674f334
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@3674f334
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@23e1cfd
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@23e1cfd
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@23e1cfd
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@21b19aaa
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@4511d0ea
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@4511d0ea
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@4511d0ea
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@239548df
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@239548df
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@239548df
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@228c94a
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@6e814ecf
2015-11-24 14:48:46,51015-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6e814ecf
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@441154d
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@28ec8597
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@6ef1dd49
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6ef1dd49
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@585f257a
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@44d88759
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@12f21700
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@6dadd89d
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@5013825f
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5013825f
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c64e673
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6455b768
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@377c404e
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e61dd57
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b0a9ac0
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6535b8e9
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@29fefce8
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@238df8e2
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@78214ca6
2015-11-24 14:48:46,52515-11-24 14:48:46  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [clob] overrides previous : org.hibernate.type.ClobType@6ef1dd49
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78214ca6
2015-11-24 14:48:46,52515-11-24 14:48:46  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@6ef1dd49
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1928dc07
2015-11-24 14:48:46,52515-11-24 14:48:46  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@12f21700
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@522f63e7
2015-11-24 14:48:46,52515-11-24 14:48:46  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@585f257a
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@2547fcd8
2015-11-24 14:48:46,52515-11-24 14:48:46  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@44d88759
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7e762d0
2015-11-24 14:48:46,52515-11-24 14:48:46  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@441154d
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@680849bd
2015-11-24 14:48:46,52515-11-24 14:48:46  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@28ec8597
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@61f2bf35
2015-11-24 14:48:46,52515-11-24 14:48:46  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [blob] overrides previous : org.hibernate.type.BlobType@6e814ecf
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61f2bf35
2015-11-24 14:48:46,52515-11-24 14:48:46  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@6e814ecf
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (SessionFactoryImpl.java:228 LINE) SessionFactoryImpl.<init> -> Session factory constructed with filter configurations : {}
2015-11-24 14:48:46,52515-11-24 14:48:46 DEBUG (SessionFactoryImpl.java:232 LINE) SessionFactoryImpl.<init> -> instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, sun.boot.library.path=E:\JDK1.7\bin, java.vm.version=23.7-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.cache.use_query_cache=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\workspace\mobile-user, java.runtime.version=1.7.0_17-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=E:\JDK1.7\lib\endorsed, os.arch=amd64, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\gqy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, hibernate.cache.use_second_level_cache=true, sun.jnu.encoding=GBK, hibernate.jdbc.fetch_size=50, java.library.path=E:\JDK1.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\ProgramData\Lenovo\ReadyApps;E:\JDK\bin;E:\JDK\jre\bin;E:\Go\bin;E:\winscp\WinSCP\;E:\maven\apache-maven-3.2.3\bin;C:\Program Files (x86)\DBank\ClickUp;C:\Program Files (x86)\DBank\ClickUp;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\gqy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=after_transaction, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=gqy, java.class.path=G:\workspace\mobile-user\target\test-classes;G:\workspace\mobile-user\target\classes;H:\Respositories2\repository\com\alibaba\fastjson\1.2.4\fastjson-1.2.4.jar;H:\Respositories2\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;H:\Respositories2\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;H:\Respositories2\repository\io\netty\netty\4.0.0.Alpha8\netty-4.0.0.Alpha8.jar;H:\Respositories2\repository\jstl\jstl\1.2\jstl-1.2.jar;H:\Respositories2\repository\org\springframework\spring-aop\3.2.0.RELEASE\spring-aop-3.2.0.RELEASE.jar;H:\Respositories2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;H:\Respositories2\repository\org\springframework\spring-beans\3.2.0.RELEASE\spring-beans-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context\3.2.0.RELEASE\spring-context-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-expression\3.2.0.RELEASE\spring-expression-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context-support\3.2.0.RELEASE\spring-context-support-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-core\3.2.0.RELEASE\spring-core-3.2.0.RELEASE.jar;H:\Respositories2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;H:\Respositories2\repository\org\springframework\spring-jdbc\3.2.0.RELEASE\spring-jdbc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-orm\3.2.0.RELEASE\spring-orm-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-tx\3.2.0.RELEASE\spring-tx-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-web\3.2.0.RELEASE\spring-web-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-webmvc\3.2.0.RELEASE\spring-webmvc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\amqp\spring-amqp\1.2.0.RELEASE\spring-amqp-1.2.0.RELEASE.jar;H:\Respositories2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;H:\Respositories2\repository\com\fasterxml\jackson\core\jackson-core\2.1.0\jackson-core-2.1.0.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.13\jackson-jaxrs-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-xc\1.9.13\jackson-xc-1.9.13.jar;H:\Respositories2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;H:\Respositories2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;H:\Respositories2\repository\mysql\mysql-connector-java\5.1.25\mysql-connector-java-5.1.25.jar;H:\Respositories2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;H:\Respositories2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;H:\Respositories2\repository\org\aspectj\aspectjweaver\1.6.4\aspectjweaver-1.6.4.jar;H:\Respositories2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;H:\Respositories2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;H:\Respositories2\repository\commons-beanutils\commons-beanutils\1.9.0\commons-beanutils-1.9.0.jar;H:\Respositories2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;H:\Respositories2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;H:\Respositories2\repository\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;H:\Respositories2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;H:\Respositories2\repository\org\mybatis\mybatis-spring\1.2.0\mybatis-spring-1.2.0.jar;H:\Respositories2\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;H:\Respositories2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar;H:\Respositories2\repository\org\json\json\20090211\json-20090211.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-lgpl\1.8.1\jackson-core-lgpl-1.8.1.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-lgpl\1.8.1\jackson-mapper-lgpl-1.8.1.jar;H:\Respositories2\repository\org\freemarker\freemarker\2.3.16\freemarker-2.3.16.jar;H:\Respositories2\repository\opensymphony\sitemesh\2.4.2\sitemesh-2.4.2.jar;H:\Respositories2\repository\org\testng\testng\5.9\testng-5.9-jdk15.jar;H:\Respositories2\repository\junit\junit\4.7\junit-4.7.jar;H:\Respositories2\repository\cglib\cglib-asm\1.0\cglib-asm-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-core\1.0\jxls-core-1.0.jar;H:\Respositories2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;H:\Respositories2\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml\3.7\poi-ooxml-3.7.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml-schemas\3.7\poi-ooxml-schemas-3.7.jar;H:\Respositories2\repository\org\apache\xmlbeans\xmlbeans\2.3.0\xmlbeans-2.3.0.jar;H:\Respositories2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;H:\Respositories2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-reader\1.0\jxls-reader-1.0.jar;H:\Respositories2\repository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient\4.3.2\httpclient-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient-cache\4.3.2\httpclient-cache-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpmime\4.3.2\httpmime-4.3.2.jar;H:\Respositories2\repository\org\quartz-scheduler\quartz\1.8.6\quartz-1.8.6.jar;H:\Respositories2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;H:\Respositories2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;H:\Respositories2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;H:\Respositories2\repository\net\coobird\thumbnailator\0.4.7\thumbnailator-0.4.7.jar;H:\Respositories2\repository\jcifs\jcifs\1.3.17\jcifs-1.3.17.jar;H:\Respositories2\repository\org\apache\poi\poi\3.10.1\poi-3.10.1.jar;H:\Respositories2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;H:\Respositories2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;H:\Respositories2\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;H:\Respositories2\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;H:\Respositories2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;H:\Respositories2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;H:\Respositories2\repository\net\sf\supercsv\super-csv\2.2.0\super-csv-2.2.0.jar;H:\Respositories2\repository\org\bouncycastle\bcprov-jdk16\1.45\bcprov-jdk16-1.45.jar;H:\Respositories2\repository\jdom\jdom\1.0\jdom-1.0.jar;H:\Respositories2\repository\com\belerweb\pinyin4j\2.5.0\pinyin4j-2.5.0.jar;H:\Respositories2\repository\org\glassfish\jersey\ext\jersey-spring3\2.4.1\jersey-spring3-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-server\2.4.1\jersey-server-2.4.1.jar;H:\Respositories2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-api\2.2.0-b21\hk2-api-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\javax.inject\2.2.0-b21\javax.inject-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-locator\2.2.0-b21\hk2-locator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\asm-all-repackaged\2.2.0-b21\asm-all-repackaged-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\cglib\2.2.0-b21\cglib-2.2.0-b21.jar;H:\Respositories2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;H:\Respositories2\repository\org\glassfish\jersey\containers\jersey-container-servlet-core\2.4.1\jersey-container-servlet-core-2.4.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2\2.2.0-b21\hk2-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-utils\2.2.0-b21\hk2-utils-2.2.0-b21.jar;H:\Respositories2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;H:\Respositories2\repository\org\glassfish\hk2\config-types\2.2.0-b21\config-types-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\core\2.2.0-b21\core-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-config\2.2.0-b21\hk2-config-2.2.0-b21.jar;H:\Respositories2\repository\org\jvnet\tiger-types\1.4\tiger-types-1.4.jar;H:\Respositories2\repository\org\glassfish\hk2\external\bean-validator\2.2.0-b21\bean-validator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-runlevel\2.2.0-b21\hk2-runlevel-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\class-model\2.2.0-b21\class-model-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\spring-bridge\2.2.0-b21\spring-bridge-2.2.0-b21.jar;H:\Respositories2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\2.4.1\jersey-media-json-jackson-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-common\2.4.1\jersey-common-2.4.1.jar;H:\Respositories2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;H:\Respositories2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.1\osgi-resource-locator-1.0.1.jar;H:\Respositories2\repository\org\codehaus\groovy\groovy-all\2.2.0\groovy-all-2.2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\providers\jersey-test-framework-provider-external\2.5.1\jersey-test-framework-provider-external-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\jersey-test-framework-core\2.5.1\jersey-test-framework-core-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-client\2.5.1\jersey-client-2.5.1.jar;H:\Respositories2\repository\org\springframework\spring-test\3.2.6.RELEASE\spring-test-3.2.6.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session\1.0.1.RELEASE\spring-session-1.0.1.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session-data-redis\1.0.0.RELEASE\spring-session-data-redis-1.0.0.RELEASE.jar;H:\Respositories2\repository\org\apache\commons\commons-pool2\2.2\commons-pool2-2.2.jar;H:\Respositories2\repository\redis\clients\jedis\2.6.0\jedis-2.6.0.jar;H:\Respositories2\repository\org\springframework\data\spring-data-redis\1.4.1.RELEASE\spring-data-redis-1.4.1.RELEASE.jar;H:\Respositories2\repository\net\sf\ehcache\ehcache-core\2.6.11\ehcache-core-2.6.11.jar;H:\Respositories2\repository\org\hibernate3\hibernate3\3.0.0\hibernate3-3.0.0.jar;H:\Respositories2\repository\com\google\code\gson\gson\2.1\gson-2.1.jar;H:\Respositories2\repository\org\apache\openejb\javaee-api\5.0-1\javaee-api-5.0-1.jar;H:\Respositories2\repository\com\alibaba\druid\1.0.2\druid-1.0.2.jar;H:\Respositories2\repository\javax\faces\jsf-impl\1.2_04\jsf-impl-1.2_04.jar;H:\Respositories2\repository\javax\faces\jsf-api\1.2_04\jsf-api-1.2_04.jar;H:\Respositories2\repository\javax\transaction\jta\1.1\jta-1.1.jar;H:\Respositories2\repository\org\apache\ws\wss4j\1.5.1\wss4j-1.5.1.jar;H:\Respositories2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;H:\Respositories2\repository\hibernate\antlr\2.7.5H3\antlr-2.7.5H3.jar;H:\Respositories2\repository\javassist\javassist\3.9.0.GA\javassist-3.9.0.GA.jar;H:\Respositories2\repository\com\fx\mobile\mobile-model\0.0.1-SNAPSHOT\mobile-model-0.0.1-SNAPSHOT.jar;H:\Respositories2\repository\com\fx\mobile\mobile-core\0.0.1\mobile-core-0.0.1.jar;H:\Respositories2\repository\Decoder\sun.misc.BASE64Decoder\1.0.0\sun.misc.BASE64Decoder-1.0.0.jar;H:\Respositories2\repository\marketingFile\marketingFile\0.0.1\marketingFile-0.0.1.jar;H:\Respositories2\repository\com\qq\connect\Sdk4J\1.0\Sdk4J-1.0.jar;H:\Respositories2\repository\org\apache\commons\commons-io\1.3.2\commons-io-1.3.2.jar;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.query.substitutions=true 'Y', false 'N', hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=E:\JDK1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60075 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.fx.mobile.junit.UserOperateDaoImplTest, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_17, java.ext.dirs=E:\JDK1.7\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=E:\JDK1.7\lib\resources.jar;E:\JDK1.7\lib\rt.jar;E:\JDK1.7\lib\sunrsasign.jar;E:\JDK1.7\lib\jsse.jar;E:\JDK1.7\lib\jce.jar;E:\JDK1.7\lib\charsets.jar;E:\JDK1.7\lib\jfr.jar;E:\JDK1.7\classes, java.vendor=Oracle Corporation, hibernate.jdbc.batch_size=25, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-11-24 14:48:46,54115-11-24 14:48:46 DEBUG (CacheManager.java:684 LINE) CacheManager.parseConfiguration -> Configuring ehcache from classpath.
2015-11-24 14:48:46,54115-11-24 14:48:46 DEBUG (ConfigurationFactory.java:132 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from ehcache.xml found in the classpath: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:48:46,54115-11-24 14:48:46 DEBUG (ConfigurationFactory.java:98 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from URL: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:48:46,54115-11-24 14:48:46 DEBUG (ConfigurationFactory.java:150 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from InputStream
2015-11-24 14:48:46,57215-11-24 14:48:46 DEBUG (DiskStoreConfiguration.java:141 LINE) DiskStoreConfiguration.translatePath -> Disk Store Path: C:\Users\gqy\AppData\Local\Temp\
2015-11-24 14:48:46,58815-11-24 14:48:46 DEBUG (PropertyUtil.java:88 LINE) PropertyUtil.parseProperties -> propertiesString is null.
2015-11-24 14:48:46,58815-11-24 14:48:46 DEBUG (ConfigurationHelper.java:185 LINE) ConfigurationHelper.createCacheManagerEventListener -> No CacheManagerEventListenerFactory class specified. Skipping...
2015-11-24 14:48:46,63515-11-24 14:48:46 DEBUG (Cache.java:955 LINE) Cache.createBootstrapCacheLoader -> No BootstrapCacheLoaderFactory class specified. Skipping...
2015-11-24 14:48:46,63515-11-24 14:48:46 DEBUG (Cache.java:929 LINE) Cache.createCacheWriter -> CacheWriter factory not configured. Skipping...
2015-11-24 14:48:46,63515-11-24 14:48:46 DEBUG (ConfigurationHelper.java:96 LINE) ConfigurationHelper.createCacheExceptionHandler -> No CacheExceptionHandlerFactory class specified. Skipping...
2015-11-24 14:48:46,65015-11-24 14:48:46 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:48:46,65015-11-24 14:48:46 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:48:46,65015-11-24 14:48:46 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:48:46,74415-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.NoteNumbRecord
2015-11-24 14:48:46,74415-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from note_numb_record where id =?
2015-11-24 14:48:46,74415-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select notenumbre_.id, notenumbre_.node_numb as node2_1_ from note_numb_record notenumbre_ where notenumbre_.id=?
2015-11-24 14:48:46,74415-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into note_numb_record (node_numb, id) values (?, ?)
2015-11-24 14:48:46,74415-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update note_numb_record set node_numb=? where id=?
2015-11-24 14:48:46,74415-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from note_numb_record where id=?
2015-11-24 14:48:46,74415-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into note_numb_record (node_numb) values (?)
2015-11-24 14:48:46,76015-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.CrashLog
2015-11-24 14:48:46,76015-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from marketing1.crash_log where id =?
2015-11-24 14:48:46,76015-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select crashlog_.id, crashlog_.url as url2_, crashlog_.describes as describes2_, crashlog_.addDate as addDate2_ from marketing1.crash_log crashlog_ where crashlog_.id=?
2015-11-24 14:48:46,76015-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into marketing1.crash_log (url, describes, addDate, id) values (?, ?, ?, ?)
2015-11-24 14:48:46,76015-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update marketing1.crash_log set url=?, describes=?, addDate=? where id=?
2015-11-24 14:48:46,76015-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from marketing1.crash_log where id=?
2015-11-24 14:48:46,76015-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into marketing1.crash_log (url, describes, addDate) values (?, ?, ?)
2015-11-24 14:48:46,77515-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.UserOperate
2015-11-24 14:48:46,77515-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from user_operate where id =?
2015-11-24 14:48:46,77515-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select useroperat_.id, useroperat_.userName as userName0_, useroperat_.userPassword as userPass3_0_, useroperat_.phicomm_id as phicomm4_0_, useroperat_.userEmail as userEmail0_, useroperat_.user_PhoneNumb as user6_0_, useroperat_.userType as userType0_, useroperat_.isChecked as isChecked0_, useroperat_.nickname as nickname0_, useroperat_.figureurl as figureurl0_, useroperat_.sex as sex0_, useroperat_.province as province0_, useroperat_.city as city0_, useroperat_.birthday as birthday0_, useroperat_.open_id as open15_0_, useroperat_.open_key as open16_0_, useroperat_.access_token as access17_0_, useroperat_.expirese_in as expirese18_0_, useroperat_.devinfo as devinfo0_, useroperat_.userinfo as userinfo0_, useroperat_.openqq as openqq0_, useroperat_.openqqinfo as openqqinfo0_, useroperat_.opensina as opensina0_, useroperat_.opensinainfo as opensin24_0_, useroperat_.createTime as createTime0_, useroperat_.updateTime as updateTime0_, useroperat_.lastLoginTime as lastLog27_0_ from user_operate useroperat_ where useroperat_.id=?
2015-11-24 14:48:46,77515-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:48:46,77515-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update user_operate set userName=?, userPassword=?, phicomm_id=?, userEmail=?, user_PhoneNumb=?, userType=?, isChecked=?, nickname=?, figureurl=?, sex=?, province=?, city=?, birthday=?, open_id=?, open_key=?, access_token=?, expirese_in=?, devinfo=?, userinfo=?, openqq=?, openqqinfo=?, opensina=?, opensinainfo=?, createTime=?, updateTime=?, lastLoginTime=? where id=?
2015-11-24 14:48:46,77515-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from user_operate where id=?
2015-11-24 14:48:46,77515-11-24 14:48:46 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:48:46,79115-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [NONE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:48:46,79115-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:48:46,79115-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:48:46,79115-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE_NOWAIT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:48:46,79115-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [FORCE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:48:46,79115-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? lock in share mode
2015-11-24 14:48:46,79115-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_WRITE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:48:46,79115-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:48:46,79115-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:48:46,79115-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [NONE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE_NOWAIT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [FORCE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? lock in share mode
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_WRITE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [NONE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE_NOWAIT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [FORCE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? lock in share mode
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_WRITE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (SessionFactoryObjectFactory.java:61 LINE) SessionFactoryObjectFactory.<clinit> -> initializing class SessionFactoryObjectFactory
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (SessionFactoryObjectFactory.java:99 LINE) SessionFactoryObjectFactory.addInstance -> registered: 4841f2e4-afbc-403b-b5a0-474a265387ab (unnamed)
2015-11-24 14:48:46,80615-11-24 14:48:46  INFO (SessionFactoryObjectFactory.java:105 LINE) SessionFactoryObjectFactory.addInstance -> Not binding factory to JNDI, no JNDI name configured
2015-11-24 14:48:46,80615-11-24 14:48:46 DEBUG (SessionFactoryImpl.java:369 LINE) SessionFactoryImpl.<init> -> instantiated session factory
2015-11-24 14:48:46,82215-11-24 14:48:46  INFO (SchemaUpdate.java:155 LINE) SchemaUpdate.execute -> Running hbm2ddl schema update
2015-11-24 14:48:46,82215-11-24 14:48:46  INFO (SchemaUpdate.java:167 LINE) SchemaUpdate.execute -> fetching database metadata
2015-11-24 14:48:46,82215-11-24 14:48:46  INFO (SchemaUpdate.java:179 LINE) SchemaUpdate.execute -> updating schema
2015-11-24 14:48:46,82215-11-24 14:48:46 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:48:46,82215-11-24 14:48:46 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:48:46,82215-11-24 14:48:46 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:48:46,82215-11-24 14:48:46 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:48:46,82215-11-24 14:48:46 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:48:46,82215-11-24 14:48:46 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:48:46,82215-11-24 14:48:46 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:48:46,82215-11-24 14:48:46 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:48:46,82215-11-24 14:48:46 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:48:46,82215-11-24 14:48:46 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:48:46,82215-11-24 14:48:46 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:48:46,82215-11-24 14:48:46 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:48:46,83815-11-24 14:48:46  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:48:46,83815-11-24 14:48:46 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:48:46,86915-11-24 14:48:46  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.note_numb_record
2015-11-24 14:48:46,86915-11-24 14:48:46  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [id, node_numb]
2015-11-24 14:48:46,86915-11-24 14:48:46  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:48:46,86915-11-24 14:48:46  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:48:46,90215-11-24 14:48:46  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.user_operate
2015-11-24 14:48:46,90215-11-24 14:48:46  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [birthday, sex, updatetime, open_id, openqq, opensina, userinfo, user_phonenumb, city, createtime, id, userpassword, username, lastlogintime, province, opensinainfo, figureurl, phicomm_id, open_key, access_token, nickname, usertype, ischecked, openqqinfo, useremail, devinfo, expirese_in]
2015-11-24 14:48:46,90215-11-24 14:48:46  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:48:46,90215-11-24 14:48:46  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:48:46,90215-11-24 14:48:46  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:48:46,90215-11-24 14:48:46 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:48:46,90215-11-24 14:48:46 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:48:46,90215-11-24 14:48:46 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:48:46,90215-11-24 14:48:46 DEBUG (SchemaUpdate.java:203 LINE) SchemaUpdate.execute -> create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:48:46,90215-11-24 14:48:46 ERROR (SchemaUpdate.java:212 LINE) SchemaUpdate.execute -> Unsuccessful: create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:48:46,90215-11-24 14:48:46 ERROR (SchemaUpdate.java:213 LINE) SchemaUpdate.execute -> Unknown database 'marketing1'
2015-11-24 14:48:46,90215-11-24 14:48:46  INFO (SchemaUpdate.java:217 LINE) SchemaUpdate.execute -> schema update complete
2015-11-24 14:48:46,91815-11-24 14:48:46  INFO (UpdateTimestampsCache.java:57 LINE) UpdateTimestampsCache.<init> -> starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:48:46,91815-11-24 14:48:46  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
2015-11-24 14:48:46,93415-11-24 14:48:46 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:48:46,94915-11-24 14:48:46  WARN (DiskStorePathManager.java:162 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> diskStorePath 'C:\Users\gqy\AppData\Local\Temp' is already used by an existing CacheManager either in the same VM or in a different process.
The diskStore path for this CacheManager will be set to C:\Users\gqy\AppData\Local\Temp\ehcache_auto_created547793724389078085diskstore.
To avoid this warning consider using the CacheManager factory methods to create a singleton CacheManager or specifying a separate ehcache configuration (ehcache.xml) for each CacheManager instance.
2015-11-24 14:48:46,94915-11-24 14:48:46 DEBUG (DiskStorePathManager.java:169 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Using diskstore path C:\Users\gqy\AppData\Local\Temp\ehcache_auto_created547793724389078085diskstore
2015-11-24 14:48:46,94915-11-24 14:48:46 DEBUG (DiskStorePathManager.java:170 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Holding exclusive lock on C:\Users\gqy\AppData\Local\Temp\ehcache_auto_created547793724389078085diskstore\.ehcache-diskstore.lock
2015-11-24 14:48:46,94915-11-24 14:48:46 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 14:48:46,94915-11-24 14:48:46 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:48:46,96515-11-24 14:48:46 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\ehcache_auto_created547793724389078085diskstore\org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:48:46,96515-11-24 14:48:46 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:48:46,96515-11-24 14:48:46 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:48:46,96515-11-24 14:48:46 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.UpdateTimestampsCache'.
2015-11-24 14:48:46,96515-11-24 14:48:46 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:48:46,98015-11-24 14:48:46  INFO (StandardQueryCache.java:76 LINE) StandardQueryCache.<init> -> starting query cache at region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:48:46,98015-11-24 14:48:46  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.StandardQueryCache
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\ehcache_auto_created547793724389078085diskstore\org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.StandardQueryCache
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.StandardQueryCache'.
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (SessionFactoryImpl.java:539 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named HQL queries
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (SessionFactoryImpl.java:559 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named SQL queries
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'sessionFactory'
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userOperateDao'
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userOperateDao'
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userInterfaceDao'
2015-11-24 14:48:46,98015-11-24 14:48:46 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userInterfaceDao'
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userInterfaceDao' to allow for resolving potential circular references
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userInterfaceDao'
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userInterfaceDao'
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'noteNumRecordDao'
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'noteNumRecordDao'
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'noteNumRecordDao' to allow for resolving potential circular references
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'noteNumRecordDao'
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'noteNumRecordDao'
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'crashLogDao'
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'crashLogDao'
2015-11-24 14:48:46,99615-11-24 14:48:46 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'crashLogDao' to allow for resolving potential circular references
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'crashLogDao'
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'crashLogDao'
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'dataSource'
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'transactionManager'
2015-11-24 14:48:47,02715-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'transactionManager'
2015-11-24 14:48:47,04315-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-11-24 14:48:47,04315-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:48:47,04315-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-11-24 14:48:47,04315-11-24 14:48:47  INFO (HibernateTransactionManager.java:415 LINE) HibernateTransactionManager.afterPropertiesSet -> Using DataSource [org.apache.commons.dbcp.BasicDataSource@785d0b86] of Hibernate SessionFactory for HibernateTransactionManager
2015-11-24 14:48:47,04315-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:47,05915-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'transactionManager'
2015-11-24 14:48:47,05915-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:48:47,05915-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:48:47,05915-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:48:47,05915-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:48:47,05915-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:48:47,05915-11-24 14:48:47 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'operateService'
2015-11-24 14:48:47,05915-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'operateService'
2015-11-24 14:48:47,05915-11-24 14:48:47 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserOperateServiceImp]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:48:47,05915-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'operateService' to allow for resolving potential circular references
2015-11-24 14:48:47,05915-11-24 14:48:47 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'operateService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:48:47,07415-11-24 14:48:47 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'fileRemote'
2015-11-24 14:48:47,07415-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'fileRemote'
2015-11-24 14:48:47,07415-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'fileRemote' to allow for resolving potential circular references
2015-11-24 14:48:47,09015-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'fileRemote'
2015-11-24 14:48:47,09015-11-24 14:48:47 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static
2015-11-24 14:48:47,10515-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'fileRemote'
2015-11-24 14:48:47,10515-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:48:47,10515-11-24 14:48:47 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'operateService' to bean named 'userOperateDao'
2015-11-24 14:48:47,10515-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:47,10515-11-24 14:48:47 DEBUG (AbstractFallbackTransactionAttributeSource.java:106 LINE) AbstractFallbackTransactionAttributeSource.getTransactionAttribute -> Adding transactional method 'registAccount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '',-java.lang.Throwable
2015-11-24 14:48:47,10515-11-24 14:48:47 DEBUG (AbstractAutoProxyCreator.java:534 LINE) AbstractAutoProxyCreator.buildAdvisors -> Creating implicit proxy for bean 'operateService' with 0 common interceptors and 1 specific interceptors
2015-11-24 14:48:47,10515-11-24 14:48:47 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.fx.mobile.user.service.impl.UserOperateServiceImp@9138297]
2015-11-24 14:48:47,10515-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'operateService'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'SpringContextUtil'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'SpringContextUtil'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'SpringContextUtil' to allow for resolving potential circular references
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'SpringContextUtil'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'fileRemote'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userinterfaceService'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userinterfaceService'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserInterfaceServiceImpl]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userinterfaceService' to allow for resolving potential circular references
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'userinterfaceService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userInterfaceDao'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'userinterfaceService' to bean named 'userInterfaceDao'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userinterfaceService'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'urlProperties'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'urlProperties'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'urlProperties' to allow for resolving potential circular references
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'urlProperties'
2015-11-24 14:48:47,12115-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:48:47,13715-11-24 14:48:47 DEBUG (AbstractApplicationContext.java:858 LINE) AbstractApplicationContext.initLifecycleProcessor -> Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@26ff0fcd]
2015-11-24 14:48:47,13715-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:48:47,13715-11-24 14:48:47 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-11-24 14:48:47,13715-11-24 14:48:47 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-11-24 14:48:47,13715-11-24 14:48:47 DEBUG (PropertySourcesPropertyResolver.java:93 LINE) PropertySourcesPropertyResolver.getProperty -> Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-11-24 14:48:47,13715-11-24 14:48:47 DEBUG (CacheAwareContextLoaderDelegate.java:93 LINE) CacheAwareContextLoaderDelegate.loadContext -> Storing ApplicationContext in cache under key [[MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:48:47,13715-11-24 14:48:47 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 14:48:47,13715-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:48:47,13715-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:48:47,13715-11-24 14:48:47 DEBUG (SessionFactoryUtils.java:322 LINE) SessionFactoryUtils.doGetSession -> Opening Hibernate Session
2015-11-24 14:48:47,18415-11-24 14:48:47 DEBUG (SessionImpl.java:265 LINE) SessionImpl.<init> -> opened session at timestamp: 5932432290353152
2015-11-24 14:48:47,23015-11-24 14:48:47 DEBUG (QueryTranslatorImpl.java:274 LINE) QueryTranslatorImpl.parse -> parse() - HQL: from com.fx.mobile.model.UserOperate where userName='18251901681' or userPhoneNumb='18251901681'  or userEmail='18251901681'
2015-11-24 14:48:47,24615-11-24 14:48:47 DEBUG (QueryTranslatorImpl.java:293 LINE) QueryTranslatorImpl.showHqlAst -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'fx'
    |           |  |  \-[IDENT] Node: 'mobile'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'UserOperate'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'userName'
          |  |  \-[QUOTED_STRING] Node: ''18251901681''
          |  \-[EQ] Node: '='
          |     +-[IDENT] Node: 'userPhoneNumb'
          |     \-[QUOTED_STRING] Node: ''18251901681''
          \-[EQ] Node: '='
             +-[IDENT] Node: 'userEmail'
             \-[QUOTED_STRING] Node: ''18251901681''

2015-11-24 14:48:47,24615-11-24 14:48:47 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:48:47,27715-11-24 14:48:47 DEBUG (HqlSqlBaseWalker.java:111 LINE) HqlSqlBaseWalker.beforeStatement -> select << begin [level=1, statement=select]
2015-11-24 14:48:47,29315-11-24 14:48:47 DEBUG (FromElement.java:157 LINE) FromElement.doInitialize -> FromClause{level=1} :  com.fx.mobile.model.UserOperate (no alias) -> useroperat0_
2015-11-24 14:48:47,29315-11-24 14:48:47 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 14:48:47,29315-11-24 14:48:47 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userName -> org.hibernate.type.StringType@956ff4d
2015-11-24 14:48:47,29315-11-24 14:48:47 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userName -> useroperat0_.userName
2015-11-24 14:48:47,29315-11-24 14:48:47 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 14:48:47,29315-11-24 14:48:47 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userPhoneNumb -> org.hibernate.type.StringType@956ff4d
2015-11-24 14:48:47,29315-11-24 14:48:47 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userPhoneNumb -> useroperat0_.user_PhoneNumb
2015-11-24 14:48:47,29315-11-24 14:48:47 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 14:48:47,29315-11-24 14:48:47 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userEmail -> org.hibernate.type.StringType@956ff4d
2015-11-24 14:48:47,29315-11-24 14:48:47 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userEmail -> useroperat0_.userEmail
2015-11-24 14:48:47,29315-11-24 14:48:47 DEBUG (HqlSqlBaseWalker.java:117 LINE) HqlSqlBaseWalker.beforeStatementCompletion -> select : finishing up [level=1, statement=select]
2015-11-24 14:48:47,29315-11-24 14:48:47 DEBUG (HqlSqlWalker.java:625 LINE) HqlSqlWalker.processQuery -> processQuery() :  ( SELECT ( FromClause{level=1} user_operate useroperat0_ ) ( where ( or ( or ( = ( useroperat0_.userName {synthetic-alias} userName ) '18251901681' ) ( = ( useroperat0_.user_PhoneNumb {synthetic-alias} userPhoneNumb ) '18251901681' ) ) ( = ( useroperat0_.userEmail {synthetic-alias} userEmail ) '18251901681' ) ) ) )
2015-11-24 14:48:47,29315-11-24 14:48:47 DEBUG (HqlSqlWalker.java:868 LINE) HqlSqlWalker.createSelectClauseFromFromClause -> Derived SELECT clause created.
2015-11-24 14:48:47,30915-11-24 14:48:47 DEBUG (JoinProcessor.java:179 LINE) JoinProcessor.addJoinNodes -> Using FROM fragment [user_operate useroperat0_]
2015-11-24 14:48:47,30915-11-24 14:48:47 DEBUG (HqlSqlBaseWalker.java:123 LINE) HqlSqlBaseWalker.afterStatementCompletion -> select >> end [level=1, statement=select]
2015-11-24 14:48:47,30915-11-24 14:48:47 DEBUG (QueryTranslatorImpl.java:260 LINE) QueryTranslatorImpl.analyze -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_operate)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'useroperat0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}}
    |  \-[SQL_TOKEN] SqlFragment: 'useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[useroperat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_operate useroperat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'useroperat0_.userName' {propertyName=userName,dereferenceType=ALL,propertyPath=userName,path={synthetic-alias}.userName,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          |  |  \-[QUOTED_STRING] LiteralNode: ''18251901681''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'useroperat0_.user_PhoneNumb' {propertyName=userPhoneNumb,dereferenceType=ALL,propertyPath=userPhoneNumb,path={synthetic-alias}.userPhoneNumb,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |  \-[IDENT] IdentNode: 'userPhoneNumb' {originalText=userPhoneNumb}
          |     \-[QUOTED_STRING] LiteralNode: ''18251901681''
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'useroperat0_.userEmail' {propertyName=userEmail,dereferenceType=ALL,propertyPath=userEmail,path={synthetic-alias}.userEmail,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'userEmail' {originalText=userEmail}
             \-[QUOTED_STRING] LiteralNode: ''18251901681''

2015-11-24 14:48:47,30915-11-24 14:48:47 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:48:47,32415-11-24 14:48:47 DEBUG (QueryTranslatorImpl.java:243 LINE) QueryTranslatorImpl.generate -> HQL: from com.fx.mobile.model.UserOperate where userName='18251901681' or userPhoneNumb='18251901681'  or userEmail='18251901681'
2015-11-24 14:48:47,32415-11-24 14:48:47 DEBUG (QueryTranslatorImpl.java:244 LINE) QueryTranslatorImpl.generate -> SQL: select useroperat0_.id as id0_, useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_ from user_operate useroperat0_ where useroperat0_.userName='18251901681' or useroperat0_.user_PhoneNumb='18251901681' or useroperat0_.userEmail='18251901681'
2015-11-24 14:48:47,32415-11-24 14:48:47 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:48:47,32415-11-24 14:48:47 DEBUG (AbstractBatcher.java:410 LINE) AbstractBatcher.logOpenPreparedStatement -> about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-11-24 14:48:47,32415-11-24 14:48:47 DEBUG (ConnectionManager.java:444 LINE) ConnectionManager.openConnection -> opening JDBC connection
2015-11-24 14:48:47,32415-11-24 14:48:47 DEBUG (SQLStatementLogger.java:111 LINE) SQLStatementLogger.logStatement -> 
    select
        useroperat0_.id as id0_,
        useroperat0_.userName as userName0_,
        useroperat0_.userPassword as userPass3_0_,
        useroperat0_.phicomm_id as phicomm4_0_,
        useroperat0_.userEmail as userEmail0_,
        useroperat0_.user_PhoneNumb as user6_0_,
        useroperat0_.userType as userType0_,
        useroperat0_.isChecked as isChecked0_,
        useroperat0_.nickname as nickname0_,
        useroperat0_.figureurl as figureurl0_,
        useroperat0_.sex as sex0_,
        useroperat0_.province as province0_,
        useroperat0_.city as city0_,
        useroperat0_.birthday as birthday0_,
        useroperat0_.open_id as open15_0_,
        useroperat0_.open_key as open16_0_,
        useroperat0_.access_token as access17_0_,
        useroperat0_.expirese_in as expirese18_0_,
        useroperat0_.devinfo as devinfo0_,
        useroperat0_.userinfo as userinfo0_,
        useroperat0_.openqq as openqq0_,
        useroperat0_.openqqinfo as openqqinfo0_,
        useroperat0_.opensina as opensina0_,
        useroperat0_.opensinainfo as opensin24_0_,
        useroperat0_.createTime as createTime0_,
        useroperat0_.updateTime as updateTime0_,
        useroperat0_.lastLoginTime as lastLog27_0_ 
    from
        user_operate useroperat0_ 
    where
        useroperat0_.userName='18251901681' 
        or useroperat0_.user_PhoneNumb='18251901681' 
        or useroperat0_.userEmail='18251901681'
2015-11-24 14:48:47,34015-11-24 14:48:47 DEBUG (AbstractBatcher.java:426 LINE) AbstractBatcher.logOpenResults -> about to open ResultSet (open ResultSets: 0, globally: 0)
2015-11-24 14:48:47,35515-11-24 14:48:47 DEBUG (Loader.java:1322 LINE) Loader.getRow -> result row: EntityKey[com.fx.mobile.model.UserOperate#1]
2015-11-24 14:48:47,35515-11-24 14:48:47 DEBUG (AbstractBatcher.java:433 LINE) AbstractBatcher.logCloseResults -> about to close ResultSet (open ResultSets: 1, globally: 1)
2015-11-24 14:48:47,35515-11-24 14:48:47 DEBUG (AbstractBatcher.java:418 LINE) AbstractBatcher.logClosePreparedStatement -> about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-11-24 14:48:47,35515-11-24 14:48:47 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 14:48:47,35515-11-24 14:48:47 DEBUG (ConnectionManager.java:464 LINE) ConnectionManager.closeConnection -> releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-11-24 14:48:47,35515-11-24 14:48:47 DEBUG (TwoPhaseLoad.java:130 LINE) TwoPhaseLoad.initializeEntity -> resolving associations for [com.fx.mobile.model.UserOperate#1]
2015-11-24 14:48:47,35515-11-24 14:48:47 DEBUG (TwoPhaseLoad.java:255 LINE) TwoPhaseLoad.initializeEntity -> done materializing entity [com.fx.mobile.model.UserOperate#1]
2015-11-24 14:48:47,37115-11-24 14:48:47 DEBUG (StatefulPersistenceContext.java:893 LINE) StatefulPersistenceContext.initializeNonLazyCollections -> initializing non-lazy collections
2015-11-24 14:48:47,37115-11-24 14:48:47 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 14:48:47,37115-11-24 14:48:47 DEBUG (HibernateAccessor.java:389 LINE) HibernateAccessor.flushIfNecessary -> Eagerly flushing Hibernate session
2015-11-24 14:48:47,37115-11-24 14:48:47 DEBUG (AbstractFlushingEventListener.java:134 LINE) AbstractFlushingEventListener.prepareEntityFlushes -> processing flush-time cascades
2015-11-24 14:48:47,37115-11-24 14:48:47 DEBUG (AbstractFlushingEventListener.java:177 LINE) AbstractFlushingEventListener.prepareCollectionFlushes -> dirty checking collections
2015-11-24 14:48:47,37115-11-24 14:48:47 DEBUG (AbstractFlushingEventListener.java:108 LINE) AbstractFlushingEventListener.flushEverythingToExecutions -> Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2015-11-24 14:48:47,37115-11-24 14:48:47 DEBUG (AbstractFlushingEventListener.java:114 LINE) AbstractFlushingEventListener.flushEverythingToExecutions -> Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-11-24 14:48:47,37115-11-24 14:48:47 DEBUG (Printer.java:106 LINE) Printer.toString -> listing entities:
2015-11-24 14:48:47,37115-11-24 14:48:47 DEBUG (Printer.java:113 LINE) Printer.toString -> com.fx.mobile.model.UserOperate{createTime=null, birthday=null, sex=null, accessToken=1e2df3961168a7fefb4f1e1218c389e3, openqq=null, userPassword=e10adc3949ba59abbe56e057, opensina=null, userEmail=null, userinfo=null, openKey=null, userType=null, city=null, id=1, isChecked=null, province=null, userName=, expireseIn=2015-10-22 11:25:50, opensinainfo=null, figureurl=null, lastLoginTime=null, updateTime=null, nickname=null, userPhoneNumb=18251901681, phicommId=123, openqqinfo=null, devinfo=null, openId=null}
2015-11-24 14:48:47,37115-11-24 14:48:47 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 14:48:47,37115-11-24 14:48:47 DEBUG (SessionFactoryUtils.java:800 LINE) SessionFactoryUtils.closeSession -> Closing Hibernate Session
2015-11-24 14:48:47,40215-11-24 14:48:47 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@7dac14dd testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@2c8df9a0, testMethod = getListTest@UserOperateDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 14:48:47,40215-11-24 14:48:47 DEBUG (DirtiesContextTestExecutionListener.java:138 LINE) DirtiesContextTestExecutionListener.afterTestClass -> After test class: context [[TestContext@7dac14dd testClass = UserOperateDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
2015-11-24 14:48:47,40215-11-24 14:48:47  INFO (AbstractApplicationContext.java:1042 LINE) AbstractApplicationContext.doClose -> Closing org.springframework.context.support.GenericApplicationContext@683bf9ff: startup date [Tue Nov 24 14:48:44 CST 2015]; root of context hierarchy
2015-11-24 14:48:47,40215-11-24 14:48:47 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:48:47,40215-11-24 14:48:47  INFO (DefaultSingletonBeanRegistry.java:444 LINE) DefaultSingletonBeanRegistry.destroySingletons -> Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@51e54d36: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:48:47,40215-11-24 14:48:47 DEBUG (DefaultSingletonBeanRegistry.java:500 LINE) DefaultSingletonBeanRegistry.destroyBean -> Retrieved dependent beans for bean 'userOperateDao': [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:48:47,40215-11-24 14:48:47 DEBUG (DisposableBeanAdapter.java:219 LINE) DisposableBeanAdapter.destroy -> Invoking destroy() on bean with name 'sessionFactory'
2015-11-24 14:48:47,40215-11-24 14:48:47  INFO (AbstractSessionFactoryBean.java:223 LINE) AbstractSessionFactoryBean.destroy -> Closing Hibernate SessionFactory
2015-11-24 14:48:47,40215-11-24 14:48:47  INFO (SessionFactoryImpl.java:927 LINE) SessionFactoryImpl.close -> closing
2015-11-24 14:48:47,41815-11-24 14:48:47 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:48:47,43415-11-24 14:48:47 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 14:48:47,43415-11-24 14:48:47 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:48:47,43415-11-24 14:48:47 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 14:48:47,46515-11-24 14:48:47 DEBUG (DiskStorePathManager.java:371 LINE) DiskStorePathManager$DiskStorePath.unlock -> Deleted directory ehcache_auto_created547793724389078085diskstore
2015-11-24 14:48:47,46515-11-24 14:48:47 DEBUG (DisposableBeanAdapter.java:295 LINE) DisposableBeanAdapter.invokeCustomDestroyMethod -> Invoking destroy method 'close' on bean with name 'dataSource'
2015-11-24 14:49:08,22615-11-24 14:49:08 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 14:49:08,27315-11-24 14:49:08 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@d1735f5 declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 14:49:08,27315-11-24 14:49:08 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:49:08,27315-11-24 14:49:08 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 14:49:08,28815-11-24 14:49:08 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:49:08,28815-11-24 14:49:08 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:49:08,28815-11-24 14:49:08 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:49:08,30415-11-24 14:49:08 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:49:08,30415-11-24 14:49:08 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:49:08,30415-11-24 14:49:08 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:49:08,30415-11-24 14:49:08 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:49:08,30415-11-24 14:49:08 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:49:08,30415-11-24 14:49:08 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:49:08,30415-11-24 14:49:08 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:49:08,30415-11-24 14:49:08 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:49:08,30415-11-24 14:49:08 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:49:08,30415-11-24 14:49:08 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@4dd290b5 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@3b1a82fd, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 14:49:08,30415-11-24 14:49:08 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 14:49:08,30415-11-24 14:49:08 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:49:08,39815-11-24 14:49:08 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:49:08,39815-11-24 14:49:08 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:49:08,39815-11-24 14:49:08 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:49:08,39815-11-24 14:49:08 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:49:08,39815-11-24 14:49:08 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:49:08,39815-11-24 14:49:08 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:49:08,39815-11-24 14:49:08 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:49:08,39815-11-24 14:49:08 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:49:08,41315-11-24 14:49:08 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 14:49:08,41315-11-24 14:49:08 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 14:49:08,41315-11-24 14:49:08 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 14:49:08,41315-11-24 14:49:08  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 14:49:08,41315-11-24 14:49:08 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:49:08,44415-11-24 14:49:08 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 14:49:08,44415-11-24 14:49:08 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 14:49:08,44415-11-24 14:49:08 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:49:08,49115-11-24 14:49:08 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:49:08,49115-11-24 14:49:08  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 14:49:08,49115-11-24 14:49:08 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:49:08,50715-11-24 14:49:08 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:49:08,52315-11-24 14:49:08 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:49:08,53815-11-24 14:49:08  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 14:49:08,53815-11-24 14:49:08 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:49:08,55415-11-24 14:49:08 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:49:08,58515-11-24 14:49:08 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 14:49:08,58515-11-24 14:49:08 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:49:08,58515-11-24 14:49:08 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:49:08,58515-11-24 14:49:08 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 14:49:08,61615-11-24 14:49:08  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 14:49:08,61615-11-24 14:49:08 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:49:08,61615-11-24 14:49:08 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:49:08,63215-11-24 14:49:08 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 14:49:08,63215-11-24 14:49:08 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:49:08,64815-11-24 14:49:08 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:49:08,67915-11-24 14:49:08  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 14:49:08,67915-11-24 14:49:08  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 14:49:08,67915-11-24 14:49:08 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 14:49:08,67915-11-24 14:49:08 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:49:08,69415-11-24 14:49:08 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:49:08,69415-11-24 14:49:08 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 14:49:08,72615-11-24 14:49:08 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 14:49:08,72615-11-24 14:49:08 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 14:49:08,72615-11-24 14:49:08 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 14:49:08,72615-11-24 14:49:08 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 14:49:08,74115-11-24 14:49:08  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 14:49:08,74115-11-24 14:49:08  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 14:49:08,74115-11-24 14:49:08 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:49:08,74115-11-24 14:49:08 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:49:08,75715-11-24 14:49:08 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:49:08,75715-11-24 14:49:08 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 14:49:08,77315-11-24 14:49:08  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@4ad9cb27: startup date [Tue Nov 24 14:49:08 CST 2015]; root of context hierarchy
2015-11-24 14:49:08,77315-11-24 14:49:08 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@4ad9cb27: org.springframework.beans.factory.support.DefaultListableBeanFactory@2aba391a: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 14:49:08,80415-11-24 14:49:08 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:49:08,80415-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:49:08,81915-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:49:08,81915-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:49:08,88315-11-24 14:49:08 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:49:08,88315-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:49:08,88315-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 14:49:08,94515-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:49:08,94515-11-24 14:49:08  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 14:49:08,94515-11-24 14:49:08  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 14:49:08,94515-11-24 14:49:08  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 14:49:08,96115-11-24 14:49:08 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:49:08,96115-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:49:08,96115-11-24 14:49:08  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 14:49:08,96115-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:49:08,96115-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:49:08,96115-11-24 14:49:08 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:49:08,96115-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:49:08,96115-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:49:08,96115-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:49:08,96115-11-24 14:49:08 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:49:08,96115-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:49:08,97715-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:49:08,97715-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:49:08,97715-11-24 14:49:08 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:49:08,97715-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:49:08,97715-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:49:08,97715-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:49:08,97715-11-24 14:49:08 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:49:08,97715-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:49:08,97715-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 14:49:08,97715-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:49:08,97715-11-24 14:49:08 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:49:08,97715-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:49:08,99215-11-24 14:49:08 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 14:49:09,00815-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:49:09,00815-11-24 14:49:09 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@48ec350d]
2015-11-24 14:49:09,02415-11-24 14:49:09 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@3dd1d4b8]
2015-11-24 14:49:09,02415-11-24 14:49:09  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2aba391a: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:49:09,02415-11-24 14:49:09 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 14:49:09,02415-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 14:49:09,03915-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 14:49:09,03915-11-24 14:49:09 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 14:49:09,03915-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 14:49:09,05515-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 14:49:09,07015-11-24 14:49:09 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 14:49:09,07015-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 14:49:09,13315-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 14:49:09,14915-11-24 14:49:09 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:49:09,14915-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:49:09,14915-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:49:09,14915-11-24 14:49:09 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:49:09,14915-11-24 14:49:09 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:49:09,14915-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:49:09,14915-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:49:09,14915-11-24 14:49:09 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:49:09,14915-11-24 14:49:09 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:49:09,14915-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:49:09,14915-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:49:09,14915-11-24 14:49:09 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:49:09,16415-11-24 14:49:09 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:49:09,16415-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:49:09,16415-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:49:09,16415-11-24 14:49:09 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:49:09,16415-11-24 14:49:09 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:49:09,16415-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:49:09,16415-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:49:09,16415-11-24 14:49:09 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:49:09,16415-11-24 14:49:09 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:09,16415-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:09,18015-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 14:49:09,19515-11-24 14:49:09 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:49:09,19515-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:49:09,19515-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 14:49:09,19515-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:49:09,19515-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:49:09,21115-11-24 14:49:09 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 14:49:09,25815-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 14:49:09,25815-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 14:49:09,25815-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 14:49:09,25815-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1ffaade5
2015-11-24 14:49:09,25815-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@7377b6fc
2015-11-24 14:49:09,25815-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@1a89ebe0
2015-11-24 14:49:09,25815-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 14:49:09,25815-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 14:49:09,25815-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 14:49:09,25815-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@2008473d
2015-11-24 14:49:09,25815-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@2008473d
2015-11-24 14:49:09,25815-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2008473d
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 14:49:09,27415-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 14:49:09,28915-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@14b89cc2
2015-11-24 14:49:09,28915-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@14b89cc2
2015-11-24 14:49:09,28915-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f3080df
2015-11-24 14:49:09,28915-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f3080df
2015-11-24 14:49:09,28915-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@4564886c
2015-11-24 14:49:09,28915-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@4564886c
2015-11-24 14:49:09,28915-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@6d293c5e
2015-11-24 14:49:09,28915-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d293c5e
2015-11-24 14:49:09,28915-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@405d65c3
2015-11-24 14:49:09,28915-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@405d65c3
2015-11-24 14:49:09,30515-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@297d1d8b
2015-11-24 14:49:09,30515-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@297d1d8b
2015-11-24 14:49:09,30515-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@121812f9
2015-11-24 14:49:09,30515-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@121812f9
2015-11-24 14:49:09,30515-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@121812f9
2015-11-24 14:49:09,30515-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6221a993
2015-11-24 14:49:09,30515-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 14:49:09,30515-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 14:49:09,30515-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 14:49:09,30515-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ab50384
2015-11-24 14:49:09,32015-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@56c3b8b6
2015-11-24 14:49:09,32015-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@56c3b8b6
2015-11-24 14:49:09,32015-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@6ce18074
2015-11-24 14:49:09,32015-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ce18074
2015-11-24 14:49:09,32015-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b73c65e
2015-11-24 14:49:09,32015-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b73c65e
2015-11-24 14:49:09,32015-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@6f7e20ff
2015-11-24 14:49:09,32015-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f7e20ff
2015-11-24 14:49:09,32015-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@38430e80
2015-11-24 14:49:09,32015-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@38430e80
2015-11-24 14:49:09,32015-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@75c4d215
2015-11-24 14:49:09,32015-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@23e5fd87
2015-11-24 14:49:09,33615-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 14:49:09,33615-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 14:49:09,33615-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 14:49:09,33615-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 14:49:09,33615-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 14:49:09,33615-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 14:49:09,33615-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@663d80c9
2015-11-24 14:49:09,33615-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@18f9a7a8
2015-11-24 14:49:09,33615-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@18f9a7a8
2015-11-24 14:49:09,33615-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@18f9a7a8
2015-11-24 14:49:09,33615-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a8a8b1e
2015-11-24 14:49:09,33615-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a8a8b1e
2015-11-24 14:49:09,33615-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a8a8b1e
2015-11-24 14:49:09,33615-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@70ea9f38
2015-11-24 14:49:09,35215-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@597e9be9
2015-11-24 14:49:09,35215-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@597e9be9
2015-11-24 14:49:09,35215-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3948166e
2015-11-24 14:49:09,35215-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1f4f53dd
2015-11-24 14:49:09,36715-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@36162346
2015-11-24 14:49:09,36715-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@36162346
2015-11-24 14:49:09,36715-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@278a1cfb
2015-11-24 14:49:09,36715-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@6f6c1fb0
2015-11-24 14:49:09,36715-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1e78a60e
2015-11-24 14:49:09,36715-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@5c9c2f98
2015-11-24 14:49:09,36715-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@76f294c5
2015-11-24 14:49:09,36715-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76f294c5
2015-11-24 14:49:09,38315-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@609912f5
2015-11-24 14:49:09,38315-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61abc45e
2015-11-24 14:49:09,38315-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@53e9296a
2015-11-24 14:49:09,38315-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@709e192f
2015-11-24 14:49:09,38315-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b87966c
2015-11-24 14:49:09,38315-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62a49a92
2015-11-24 14:49:09,38315-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@24a019d6
2015-11-24 14:49:09,38315-11-24 14:49:09 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b004363
2015-11-24 14:49:09,39915-11-24 14:49:09  INFO (Version.java:37 LINE) Version.<clinit> -> Hibernate Commons Annotations 3.2.0.Final
2015-11-24 14:49:09,41415-11-24 14:49:09  INFO (Environment.java:603 LINE) Environment.<clinit> -> Hibernate 3.6.8.Final
2015-11-24 14:49:09,41415-11-24 14:49:09  INFO (Environment.java:636 LINE) Environment.<clinit> -> hibernate.properties not found
2015-11-24 14:49:09,41415-11-24 14:49:09  INFO (Environment.java:814 LINE) Environment.buildBytecodeProvider -> Bytecode provider name : javassist
2015-11-24 14:49:09,41415-11-24 14:49:09  INFO (Environment.java:695 LINE) Environment.<clinit> -> using JDK 1.4 java.sql.Timestamp handling
2015-11-24 14:49:09,49215-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2015-11-24 14:49:09,49215-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2015-11-24 14:49:09,49215-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:49:09,49215-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:49:09,50815-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2015-11-24 14:49:09,50815-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2015-11-24 14:49:09,50815-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2015-11-24 14:49:09,50815-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2015-11-24 14:49:09,50815-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2015-11-24 14:49:09,50815-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2015-11-24 14:49:09,50815-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2015-11-24 14:49:09,50815-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2015-11-24 14:49:09,50815-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2015-11-24 14:49:09,50815-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-11-24 14:49:09,50815-11-24 14:49:09 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2015-11-24 14:49:09,55515-11-24 14:49:09 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:49:09,55515-11-24 14:49:09  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:49:09,55515-11-24 14:49:09 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:49:09,55515-11-24 14:49:09 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:49:09,60215-11-24 14:49:09 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:49:09,60215-11-24 14:49:09  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:49:09,60215-11-24 14:49:09 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:49:09,60215-11-24 14:49:09 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:49:09,63315-11-24 14:49:09 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:49:09,63315-11-24 14:49:09  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:49:09,63315-11-24 14:49:09 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:49:09,63315-11-24 14:49:09 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:49:09,74215-11-24 14:49:09 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:49:09,75815-11-24 14:49:09  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.UserOperate -> user_operate
2015-11-24 14:49:09,77415-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:49:09,77415-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userName -> userName
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPassword -> userPassword
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: phicommId -> phicomm_id
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userEmail -> userEmail
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPhoneNumb -> user_PhoneNumb
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userType -> userType
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: isChecked -> isChecked
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nickname -> nickname
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: figureurl -> figureurl
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: sex -> sex
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: province -> province
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: city -> city
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: birthday -> birthday
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openId -> open_id
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openKey -> open_key
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: accessToken -> access_token
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: expireseIn -> expirese_in
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: devinfo -> devinfo
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userinfo -> userinfo
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqq -> openqq
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqqinfo -> openqqinfo
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensina -> opensina
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensinainfo -> opensinainfo
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: createTime -> createTime
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: updateTime -> updateTime
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: lastLoginTime -> lastLoginTime
2015-11-24 14:49:09,78915-11-24 14:49:09  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.NoteNumbRecord -> note_numb_record
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nodeNumb -> node_numb
2015-11-24 14:49:09,78915-11-24 14:49:09  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.CrashLog -> crash_log
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: url -> url
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: describes -> describes
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: addDate -> addDate
2015-11-24 14:49:09,78915-11-24 14:49:09 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:49:09,80515-11-24 14:49:09 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:49:09,80515-11-24 14:49:09 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:49:09,80515-11-24 14:49:09 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:49:09,80515-11-24 14:49:09 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:49:09,80515-11-24 14:49:09 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:49:09,80515-11-24 14:49:09 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:49:09,80515-11-24 14:49:09 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:49:09,80515-11-24 14:49:09  INFO (Configuration.java:1676 LINE) Configuration.applyHibernateValidatorLegacyConstraintsOnDDL -> Hibernate Validator not found: ignoring
2015-11-24 14:49:09,85215-11-24 14:49:09 DEBUG (LoggerFactory.java:29 LINE) LoggerFactory.make -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-11-24 14:49:09,85215-11-24 14:49:09  INFO (Version.java:27 LINE) Version.<clinit> -> HV000001: Hibernate Validator 5.0.0.Final
2015-11-24 14:49:09,86815-11-24 14:49:09 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:49:09,88415-11-24 14:49:09 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:49:09,90015-11-24 14:49:09 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:49:10,00915-11-24 14:49:10  INFO (LocalSessionFactoryBean.java:780 LINE) LocalSessionFactoryBean.buildSessionFactory -> Building new Hibernate SessionFactory
2015-11-24 14:49:10,00915-11-24 14:49:10 DEBUG (Configuration.java:1854 LINE) Configuration.buildSessionFactory -> Preparing to build session factory with filters : {}
2015-11-24 14:49:10,00915-11-24 14:49:10 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:49:10,00915-11-24 14:49:10 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:49:10,00915-11-24 14:49:10 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:49:10,00915-11-24 14:49:10 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:49:10,00915-11-24 14:49:10 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:49:10,00915-11-24 14:49:10 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:49:10,00915-11-24 14:49:10 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:49:10,00915-11-24 14:49:10 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:49:10,00915-11-24 14:49:10 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:49:10,00915-11-24 14:49:10 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:49:10,00915-11-24 14:49:10 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:49:10,00915-11-24 14:49:10 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:49:10,04015-11-24 14:49:10 DEBUG (Configuration.java:1896 LINE) Configuration.enableLegacyHibernateValidator -> Legacy Validator not present in classpath, ignoring event listener registration
2015-11-24 14:49:10,04015-11-24 14:49:10 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:49:10,04015-11-24 14:49:10 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:49:10,04015-11-24 14:49:10 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:49:10,04015-11-24 14:49:10 DEBUG (HibernateSearchEventListenerRegister.java:231 LINE) HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener -> Search not present in classpath, ignoring event listener registration.
2015-11-24 14:49:10,04015-11-24 14:49:10  INFO (HibernateSearchEventListenerRegister.java:75 LINE) HibernateSearchEventListenerRegister.enableHibernateSearch -> Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2015-11-24 14:49:10,04015-11-24 14:49:10  INFO (ConnectionProviderFactory.java:173 LINE) ConnectionProviderFactory.initializeConnectionProviderFromConfig -> Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2015-11-24 14:49:10,29015-11-24 14:49:10  INFO (Dialect.java:135 LINE) Dialect.<init> -> Using dialect: org.hibernate.dialect.MySQLDialect
2015-11-24 14:49:10,30615-11-24 14:49:10  INFO (SettingsFactory.java:126 LINE) SettingsFactory.buildSettings -> Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-11-24 14:49:10,30615-11-24 14:49:10  INFO (SettingsFactory.java:132 LINE) SettingsFactory.buildSettings -> Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.25 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2015-11-24 14:49:10,30615-11-24 14:49:10  INFO (TransactionFactoryFactory.java:65 LINE) TransactionFactoryFactory.buildTransactionFactory -> Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (TransactionManagerLookupFactory.java:83 LINE) TransactionManagerLookupFactory.getTransactionManagerLookup -> No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:179 LINE) SettingsFactory.buildSettings -> Automatic flush during beforeCompletion(): disabled
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:183 LINE) SettingsFactory.buildSettings -> Automatic session close at end of transaction: disabled
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:190 LINE) SettingsFactory.buildSettings -> JDBC batch size: 25
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:193 LINE) SettingsFactory.buildSettings -> JDBC batch updates for versioned data: disabled
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:198 LINE) SettingsFactory.buildSettings -> Scrollable result sets: enabled
2015-11-24 14:49:10,32115-11-24 14:49:10 DEBUG (SettingsFactory.java:202 LINE) SettingsFactory.buildSettings -> Wrap result sets: disabled
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:206 LINE) SettingsFactory.buildSettings -> JDBC3 getGeneratedKeys(): enabled
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:210 LINE) SettingsFactory.buildSettings -> JDBC result set fetch size: 50
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:214 LINE) SettingsFactory.buildSettings -> Connection release mode: after_transaction
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:238 LINE) SettingsFactory.buildSettings -> Maximum outer join fetch depth: 2
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:241 LINE) SettingsFactory.buildSettings -> Default batch fetch size: 1
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:245 LINE) SettingsFactory.buildSettings -> Generate SQL with comments: disabled
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:249 LINE) SettingsFactory.buildSettings -> Order SQL updates by primary key: disabled
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:253 LINE) SettingsFactory.buildSettings -> Order SQL inserts for batching: disabled
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:431 LINE) SettingsFactory.createQueryTranslatorFactory -> Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (ASTQueryTranslatorFactory.java:47 LINE) ASTQueryTranslatorFactory.<init> -> Using ASTQueryTranslatorFactory
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:261 LINE) SettingsFactory.buildSettings -> Query language substitutions: {false='N', true='Y'}
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:266 LINE) SettingsFactory.buildSettings -> JPA-QL strict compliance: disabled
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:271 LINE) SettingsFactory.buildSettings -> Second-level cache: enabled
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:275 LINE) SettingsFactory.buildSettings -> Query cache: enabled
2015-11-24 14:49:10,32115-11-24 14:49:10  INFO (SettingsFactory.java:406 LINE) SettingsFactory.createRegionFactory -> Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
2015-11-24 14:49:10,33715-11-24 14:49:10  INFO (RegionFactoryCacheProviderBridge.java:61 LINE) RegionFactoryCacheProviderBridge.<init> -> Cache provider: org.hibernate.cache.EhCacheProvider
2015-11-24 14:49:10,33715-11-24 14:49:10  INFO (SettingsFactory.java:285 LINE) SettingsFactory.buildSettings -> Optimize cache for minimal puts: disabled
2015-11-24 14:49:10,33715-11-24 14:49:10  INFO (SettingsFactory.java:294 LINE) SettingsFactory.buildSettings -> Structured second-level cache entries: disabled
2015-11-24 14:49:10,33715-11-24 14:49:10  INFO (SettingsFactory.java:385 LINE) SettingsFactory.createQueryCacheFactory -> Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
2015-11-24 14:49:10,33715-11-24 14:49:10  INFO (SettingsFactory.java:314 LINE) SettingsFactory.buildSettings -> Echoing all SQL to stdout
2015-11-24 14:49:10,33715-11-24 14:49:10  INFO (SettingsFactory.java:323 LINE) SettingsFactory.buildSettings -> Statistics: disabled
2015-11-24 14:49:10,33715-11-24 14:49:10  INFO (SettingsFactory.java:327 LINE) SettingsFactory.buildSettings -> Deleted entity synthetic identifier rollback: disabled
2015-11-24 14:49:10,33715-11-24 14:49:10  INFO (SettingsFactory.java:343 LINE) SettingsFactory.buildSettings -> Default entity-mode: pojo
2015-11-24 14:49:10,33715-11-24 14:49:10  INFO (SettingsFactory.java:347 LINE) SettingsFactory.buildSettings -> Named query checking : enabled
2015-11-24 14:49:10,33715-11-24 14:49:10  INFO (SettingsFactory.java:351 LINE) SettingsFactory.buildSettings -> Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2015-11-24 14:49:10,35315-11-24 14:49:10  INFO (SessionFactoryImpl.java:202 LINE) SessionFactoryImpl.<init> -> building session factory
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (SessionFactoryImpl.java:206 LINE) SessionFactoryImpl.<init> -> Statistics initialized [enabled=false]}
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1ffaade5
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@7377b6fc
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@1a89ebe0
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@2008473d
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@2008473d
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2008473d
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@14b89cc2
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@14b89cc2
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f3080df
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f3080df
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@4564886c
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@4564886c
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@6d293c5e
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d293c5e
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@405d65c3
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@405d65c3
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@297d1d8b
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@297d1d8b
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@121812f9
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@121812f9
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@121812f9
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6221a993
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ab50384
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@56c3b8b6
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@56c3b8b6
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@6ce18074
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ce18074
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b73c65e
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b73c65e
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@6f7e20ff
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f7e20ff
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@38430e80
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@38430e80
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@75c4d215
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@23e5fd87
2015-11-24 14:49:10,36815-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@663d80c9
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@18f9a7a8
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@18f9a7a8
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@18f9a7a8
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a8a8b1e
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a8a8b1e
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a8a8b1e
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@70ea9f38
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@597e9be9
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@597e9be9
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3948166e
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1f4f53dd
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@36162346
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@36162346
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@278a1cfb
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@6f6c1fb0
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1e78a60e
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@5c9c2f98
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@76f294c5
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76f294c5
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@b0a9ac0
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6535b8e9
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@29fefce8
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@238df8e2
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3dcecfaa
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54a3c199
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4afb4f38
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@390e0bfd
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@3d818704
2015-11-24 14:49:10,38415-11-24 14:49:10  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@1e78a60e
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@437af558
2015-11-24 14:49:10,38415-11-24 14:49:10  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@6f6c1fb0
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1928dc07
2015-11-24 14:49:10,38415-11-24 14:49:10  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@1f4f53dd
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@522f63e7
2015-11-24 14:49:10,38415-11-24 14:49:10  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [blob] overrides previous : org.hibernate.type.BlobType@597e9be9
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@522f63e7
2015-11-24 14:49:10,38415-11-24 14:49:10  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@597e9be9
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2547fcd8
2015-11-24 14:49:10,38415-11-24 14:49:10  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@3948166e
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5279effd
2015-11-24 14:49:10,38415-11-24 14:49:10  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@278a1cfb
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@49855c78
2015-11-24 14:49:10,38415-11-24 14:49:10  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [clob] overrides previous : org.hibernate.type.ClobType@36162346
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@49855c78
2015-11-24 14:49:10,38415-11-24 14:49:10  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@36162346
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (SessionFactoryImpl.java:228 LINE) SessionFactoryImpl.<init> -> Session factory constructed with filter configurations : {}
2015-11-24 14:49:10,38415-11-24 14:49:10 DEBUG (SessionFactoryImpl.java:232 LINE) SessionFactoryImpl.<init> -> instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, sun.boot.library.path=E:\JDK1.7\bin, java.vm.version=23.7-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.cache.use_query_cache=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\workspace\mobile-user, java.runtime.version=1.7.0_17-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=E:\JDK1.7\lib\endorsed, os.arch=amd64, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\gqy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, hibernate.cache.use_second_level_cache=true, sun.jnu.encoding=GBK, hibernate.jdbc.fetch_size=50, java.library.path=E:\JDK1.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\ProgramData\Lenovo\ReadyApps;E:\JDK\bin;E:\JDK\jre\bin;E:\Go\bin;E:\winscp\WinSCP\;E:\maven\apache-maven-3.2.3\bin;C:\Program Files (x86)\DBank\ClickUp;C:\Program Files (x86)\DBank\ClickUp;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\gqy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=after_transaction, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=gqy, java.class.path=G:\workspace\mobile-user\target\test-classes;G:\workspace\mobile-user\target\classes;H:\Respositories2\repository\com\alibaba\fastjson\1.2.4\fastjson-1.2.4.jar;H:\Respositories2\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;H:\Respositories2\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;H:\Respositories2\repository\io\netty\netty\4.0.0.Alpha8\netty-4.0.0.Alpha8.jar;H:\Respositories2\repository\jstl\jstl\1.2\jstl-1.2.jar;H:\Respositories2\repository\org\springframework\spring-aop\3.2.0.RELEASE\spring-aop-3.2.0.RELEASE.jar;H:\Respositories2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;H:\Respositories2\repository\org\springframework\spring-beans\3.2.0.RELEASE\spring-beans-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context\3.2.0.RELEASE\spring-context-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-expression\3.2.0.RELEASE\spring-expression-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context-support\3.2.0.RELEASE\spring-context-support-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-core\3.2.0.RELEASE\spring-core-3.2.0.RELEASE.jar;H:\Respositories2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;H:\Respositories2\repository\org\springframework\spring-jdbc\3.2.0.RELEASE\spring-jdbc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-orm\3.2.0.RELEASE\spring-orm-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-tx\3.2.0.RELEASE\spring-tx-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-web\3.2.0.RELEASE\spring-web-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-webmvc\3.2.0.RELEASE\spring-webmvc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\amqp\spring-amqp\1.2.0.RELEASE\spring-amqp-1.2.0.RELEASE.jar;H:\Respositories2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;H:\Respositories2\repository\com\fasterxml\jackson\core\jackson-core\2.1.0\jackson-core-2.1.0.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.13\jackson-jaxrs-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-xc\1.9.13\jackson-xc-1.9.13.jar;H:\Respositories2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;H:\Respositories2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;H:\Respositories2\repository\mysql\mysql-connector-java\5.1.25\mysql-connector-java-5.1.25.jar;H:\Respositories2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;H:\Respositories2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;H:\Respositories2\repository\org\aspectj\aspectjweaver\1.6.4\aspectjweaver-1.6.4.jar;H:\Respositories2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;H:\Respositories2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;H:\Respositories2\repository\commons-beanutils\commons-beanutils\1.9.0\commons-beanutils-1.9.0.jar;H:\Respositories2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;H:\Respositories2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;H:\Respositories2\repository\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;H:\Respositories2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;H:\Respositories2\repository\org\mybatis\mybatis-spring\1.2.0\mybatis-spring-1.2.0.jar;H:\Respositories2\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;H:\Respositories2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar;H:\Respositories2\repository\org\json\json\20090211\json-20090211.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-lgpl\1.8.1\jackson-core-lgpl-1.8.1.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-lgpl\1.8.1\jackson-mapper-lgpl-1.8.1.jar;H:\Respositories2\repository\org\freemarker\freemarker\2.3.16\freemarker-2.3.16.jar;H:\Respositories2\repository\opensymphony\sitemesh\2.4.2\sitemesh-2.4.2.jar;H:\Respositories2\repository\org\testng\testng\5.9\testng-5.9-jdk15.jar;H:\Respositories2\repository\junit\junit\4.7\junit-4.7.jar;H:\Respositories2\repository\cglib\cglib-asm\1.0\cglib-asm-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-core\1.0\jxls-core-1.0.jar;H:\Respositories2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;H:\Respositories2\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml\3.7\poi-ooxml-3.7.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml-schemas\3.7\poi-ooxml-schemas-3.7.jar;H:\Respositories2\repository\org\apache\xmlbeans\xmlbeans\2.3.0\xmlbeans-2.3.0.jar;H:\Respositories2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;H:\Respositories2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-reader\1.0\jxls-reader-1.0.jar;H:\Respositories2\repository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient\4.3.2\httpclient-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient-cache\4.3.2\httpclient-cache-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpmime\4.3.2\httpmime-4.3.2.jar;H:\Respositories2\repository\org\quartz-scheduler\quartz\1.8.6\quartz-1.8.6.jar;H:\Respositories2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;H:\Respositories2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;H:\Respositories2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;H:\Respositories2\repository\net\coobird\thumbnailator\0.4.7\thumbnailator-0.4.7.jar;H:\Respositories2\repository\jcifs\jcifs\1.3.17\jcifs-1.3.17.jar;H:\Respositories2\repository\org\apache\poi\poi\3.10.1\poi-3.10.1.jar;H:\Respositories2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;H:\Respositories2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;H:\Respositories2\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;H:\Respositories2\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;H:\Respositories2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;H:\Respositories2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;H:\Respositories2\repository\net\sf\supercsv\super-csv\2.2.0\super-csv-2.2.0.jar;H:\Respositories2\repository\org\bouncycastle\bcprov-jdk16\1.45\bcprov-jdk16-1.45.jar;H:\Respositories2\repository\jdom\jdom\1.0\jdom-1.0.jar;H:\Respositories2\repository\com\belerweb\pinyin4j\2.5.0\pinyin4j-2.5.0.jar;H:\Respositories2\repository\org\glassfish\jersey\ext\jersey-spring3\2.4.1\jersey-spring3-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-server\2.4.1\jersey-server-2.4.1.jar;H:\Respositories2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-api\2.2.0-b21\hk2-api-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\javax.inject\2.2.0-b21\javax.inject-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-locator\2.2.0-b21\hk2-locator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\asm-all-repackaged\2.2.0-b21\asm-all-repackaged-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\cglib\2.2.0-b21\cglib-2.2.0-b21.jar;H:\Respositories2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;H:\Respositories2\repository\org\glassfish\jersey\containers\jersey-container-servlet-core\2.4.1\jersey-container-servlet-core-2.4.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2\2.2.0-b21\hk2-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-utils\2.2.0-b21\hk2-utils-2.2.0-b21.jar;H:\Respositories2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;H:\Respositories2\repository\org\glassfish\hk2\config-types\2.2.0-b21\config-types-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\core\2.2.0-b21\core-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-config\2.2.0-b21\hk2-config-2.2.0-b21.jar;H:\Respositories2\repository\org\jvnet\tiger-types\1.4\tiger-types-1.4.jar;H:\Respositories2\repository\org\glassfish\hk2\external\bean-validator\2.2.0-b21\bean-validator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-runlevel\2.2.0-b21\hk2-runlevel-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\class-model\2.2.0-b21\class-model-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\spring-bridge\2.2.0-b21\spring-bridge-2.2.0-b21.jar;H:\Respositories2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\2.4.1\jersey-media-json-jackson-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-common\2.4.1\jersey-common-2.4.1.jar;H:\Respositories2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;H:\Respositories2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.1\osgi-resource-locator-1.0.1.jar;H:\Respositories2\repository\org\codehaus\groovy\groovy-all\2.2.0\groovy-all-2.2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\providers\jersey-test-framework-provider-external\2.5.1\jersey-test-framework-provider-external-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\jersey-test-framework-core\2.5.1\jersey-test-framework-core-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-client\2.5.1\jersey-client-2.5.1.jar;H:\Respositories2\repository\org\springframework\spring-test\3.2.6.RELEASE\spring-test-3.2.6.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session\1.0.1.RELEASE\spring-session-1.0.1.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session-data-redis\1.0.0.RELEASE\spring-session-data-redis-1.0.0.RELEASE.jar;H:\Respositories2\repository\org\apache\commons\commons-pool2\2.2\commons-pool2-2.2.jar;H:\Respositories2\repository\redis\clients\jedis\2.6.0\jedis-2.6.0.jar;H:\Respositories2\repository\org\springframework\data\spring-data-redis\1.4.1.RELEASE\spring-data-redis-1.4.1.RELEASE.jar;H:\Respositories2\repository\net\sf\ehcache\ehcache-core\2.6.11\ehcache-core-2.6.11.jar;H:\Respositories2\repository\org\hibernate3\hibernate3\3.0.0\hibernate3-3.0.0.jar;H:\Respositories2\repository\com\google\code\gson\gson\2.1\gson-2.1.jar;H:\Respositories2\repository\org\apache\openejb\javaee-api\5.0-1\javaee-api-5.0-1.jar;H:\Respositories2\repository\com\alibaba\druid\1.0.2\druid-1.0.2.jar;H:\Respositories2\repository\javax\faces\jsf-impl\1.2_04\jsf-impl-1.2_04.jar;H:\Respositories2\repository\javax\faces\jsf-api\1.2_04\jsf-api-1.2_04.jar;H:\Respositories2\repository\javax\transaction\jta\1.1\jta-1.1.jar;H:\Respositories2\repository\org\apache\ws\wss4j\1.5.1\wss4j-1.5.1.jar;H:\Respositories2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;H:\Respositories2\repository\hibernate\antlr\2.7.5H3\antlr-2.7.5H3.jar;H:\Respositories2\repository\javassist\javassist\3.9.0.GA\javassist-3.9.0.GA.jar;H:\Respositories2\repository\com\fx\mobile\mobile-model\0.0.1-SNAPSHOT\mobile-model-0.0.1-SNAPSHOT.jar;H:\Respositories2\repository\com\fx\mobile\mobile-core\0.0.1\mobile-core-0.0.1.jar;H:\Respositories2\repository\Decoder\sun.misc.BASE64Decoder\1.0.0\sun.misc.BASE64Decoder-1.0.0.jar;H:\Respositories2\repository\marketingFile\marketingFile\0.0.1\marketingFile-0.0.1.jar;H:\Respositories2\repository\com\qq\connect\Sdk4J\1.0\Sdk4J-1.0.jar;H:\Respositories2\repository\org\apache\commons\commons-io\1.3.2\commons-io-1.3.2.jar;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.query.substitutions=true 'Y', false 'N', hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=E:\JDK1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60081 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.fx.mobile.junit.UserOperateDaoImplTest, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_17, java.ext.dirs=E:\JDK1.7\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=E:\JDK1.7\lib\resources.jar;E:\JDK1.7\lib\rt.jar;E:\JDK1.7\lib\sunrsasign.jar;E:\JDK1.7\lib\jsse.jar;E:\JDK1.7\lib\jce.jar;E:\JDK1.7\lib\charsets.jar;E:\JDK1.7\lib\jfr.jar;E:\JDK1.7\classes, java.vendor=Oracle Corporation, hibernate.jdbc.batch_size=25, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-11-24 14:49:10,40015-11-24 14:49:10 DEBUG (CacheManager.java:684 LINE) CacheManager.parseConfiguration -> Configuring ehcache from classpath.
2015-11-24 14:49:10,40015-11-24 14:49:10 DEBUG (ConfigurationFactory.java:132 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from ehcache.xml found in the classpath: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:49:10,40015-11-24 14:49:10 DEBUG (ConfigurationFactory.java:98 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from URL: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:49:10,40015-11-24 14:49:10 DEBUG (ConfigurationFactory.java:150 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from InputStream
2015-11-24 14:49:10,43115-11-24 14:49:10 DEBUG (DiskStoreConfiguration.java:141 LINE) DiskStoreConfiguration.translatePath -> Disk Store Path: C:\Users\gqy\AppData\Local\Temp\
2015-11-24 14:49:10,44615-11-24 14:49:10 DEBUG (PropertyUtil.java:88 LINE) PropertyUtil.parseProperties -> propertiesString is null.
2015-11-24 14:49:10,46215-11-24 14:49:10 DEBUG (ConfigurationHelper.java:185 LINE) ConfigurationHelper.createCacheManagerEventListener -> No CacheManagerEventListenerFactory class specified. Skipping...
2015-11-24 14:49:10,47815-11-24 14:49:10 DEBUG (Cache.java:955 LINE) Cache.createBootstrapCacheLoader -> No BootstrapCacheLoaderFactory class specified. Skipping...
2015-11-24 14:49:10,47815-11-24 14:49:10 DEBUG (Cache.java:929 LINE) Cache.createCacheWriter -> CacheWriter factory not configured. Skipping...
2015-11-24 14:49:10,49315-11-24 14:49:10 DEBUG (ConfigurationHelper.java:96 LINE) ConfigurationHelper.createCacheExceptionHandler -> No CacheExceptionHandlerFactory class specified. Skipping...
2015-11-24 14:49:10,49315-11-24 14:49:10 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:49:10,49315-11-24 14:49:10 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:49:10,49315-11-24 14:49:10 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:49:10,60315-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.NoteNumbRecord
2015-11-24 14:49:10,60315-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from note_numb_record where id =?
2015-11-24 14:49:10,60315-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select notenumbre_.id, notenumbre_.node_numb as node2_1_ from note_numb_record notenumbre_ where notenumbre_.id=?
2015-11-24 14:49:10,60315-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into note_numb_record (node_numb, id) values (?, ?)
2015-11-24 14:49:10,60315-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update note_numb_record set node_numb=? where id=?
2015-11-24 14:49:10,60315-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from note_numb_record where id=?
2015-11-24 14:49:10,60315-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into note_numb_record (node_numb) values (?)
2015-11-24 14:49:10,60315-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.CrashLog
2015-11-24 14:49:10,60315-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from marketing1.crash_log where id =?
2015-11-24 14:49:10,60315-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select crashlog_.id, crashlog_.url as url2_, crashlog_.describes as describes2_, crashlog_.addDate as addDate2_ from marketing1.crash_log crashlog_ where crashlog_.id=?
2015-11-24 14:49:10,60315-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into marketing1.crash_log (url, describes, addDate, id) values (?, ?, ?, ?)
2015-11-24 14:49:10,60315-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update marketing1.crash_log set url=?, describes=?, addDate=? where id=?
2015-11-24 14:49:10,60315-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from marketing1.crash_log where id=?
2015-11-24 14:49:10,60315-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into marketing1.crash_log (url, describes, addDate) values (?, ?, ?)
2015-11-24 14:49:10,61815-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.UserOperate
2015-11-24 14:49:10,61815-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from user_operate where id =?
2015-11-24 14:49:10,61815-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select useroperat_.id, useroperat_.userName as userName0_, useroperat_.userPassword as userPass3_0_, useroperat_.phicomm_id as phicomm4_0_, useroperat_.userEmail as userEmail0_, useroperat_.user_PhoneNumb as user6_0_, useroperat_.userType as userType0_, useroperat_.isChecked as isChecked0_, useroperat_.nickname as nickname0_, useroperat_.figureurl as figureurl0_, useroperat_.sex as sex0_, useroperat_.province as province0_, useroperat_.city as city0_, useroperat_.birthday as birthday0_, useroperat_.open_id as open15_0_, useroperat_.open_key as open16_0_, useroperat_.access_token as access17_0_, useroperat_.expirese_in as expirese18_0_, useroperat_.devinfo as devinfo0_, useroperat_.userinfo as userinfo0_, useroperat_.openqq as openqq0_, useroperat_.openqqinfo as openqqinfo0_, useroperat_.opensina as opensina0_, useroperat_.opensinainfo as opensin24_0_, useroperat_.createTime as createTime0_, useroperat_.updateTime as updateTime0_, useroperat_.lastLoginTime as lastLog27_0_ from user_operate useroperat_ where useroperat_.id=?
2015-11-24 14:49:10,61815-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:49:10,61815-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update user_operate set userName=?, userPassword=?, phicomm_id=?, userEmail=?, user_PhoneNumb=?, userType=?, isChecked=?, nickname=?, figureurl=?, sex=?, province=?, city=?, birthday=?, open_id=?, open_key=?, access_token=?, expirese_in=?, devinfo=?, userinfo=?, openqq=?, openqqinfo=?, opensina=?, opensinainfo=?, createTime=?, updateTime=?, lastLoginTime=? where id=?
2015-11-24 14:49:10,61815-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from user_operate where id=?
2015-11-24 14:49:10,61815-11-24 14:49:10 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:49:10,63415-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [NONE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:49:10,63415-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:49:10,63415-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:49:10,63415-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE_NOWAIT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:49:10,63415-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [FORCE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:49:10,63415-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? lock in share mode
2015-11-24 14:49:10,63415-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_WRITE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:49:10,63415-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:49:10,63415-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:49:10,63415-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [NONE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE_NOWAIT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [FORCE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? lock in share mode
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_WRITE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [NONE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE_NOWAIT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [FORCE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? lock in share mode
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_WRITE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:49:10,65015-11-24 14:49:10 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (SessionFactoryObjectFactory.java:61 LINE) SessionFactoryObjectFactory.<clinit> -> initializing class SessionFactoryObjectFactory
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (SessionFactoryObjectFactory.java:99 LINE) SessionFactoryObjectFactory.addInstance -> registered: 48583282-c1b2-4059-ae12-35f89c7680fd (unnamed)
2015-11-24 14:49:10,66515-11-24 14:49:10  INFO (SessionFactoryObjectFactory.java:105 LINE) SessionFactoryObjectFactory.addInstance -> Not binding factory to JNDI, no JNDI name configured
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (SessionFactoryImpl.java:369 LINE) SessionFactoryImpl.<init> -> instantiated session factory
2015-11-24 14:49:10,66515-11-24 14:49:10  INFO (SchemaUpdate.java:155 LINE) SchemaUpdate.execute -> Running hbm2ddl schema update
2015-11-24 14:49:10,66515-11-24 14:49:10  INFO (SchemaUpdate.java:167 LINE) SchemaUpdate.execute -> fetching database metadata
2015-11-24 14:49:10,66515-11-24 14:49:10  INFO (SchemaUpdate.java:179 LINE) SchemaUpdate.execute -> updating schema
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:49:10,66515-11-24 14:49:10 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:49:10,69615-11-24 14:49:10  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:49:10,69615-11-24 14:49:10 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:49:10,72815-11-24 14:49:10  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.note_numb_record
2015-11-24 14:49:10,72815-11-24 14:49:10  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [id, node_numb]
2015-11-24 14:49:10,72815-11-24 14:49:10  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:49:10,72815-11-24 14:49:10  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:49:10,75915-11-24 14:49:10  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.user_operate
2015-11-24 14:49:10,75915-11-24 14:49:10  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [birthday, sex, updatetime, open_id, openqq, opensina, userinfo, user_phonenumb, city, createtime, id, userpassword, username, lastlogintime, province, opensinainfo, figureurl, phicomm_id, open_key, access_token, nickname, usertype, ischecked, openqqinfo, useremail, devinfo, expirese_in]
2015-11-24 14:49:10,75915-11-24 14:49:10  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:49:10,75915-11-24 14:49:10  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:49:10,75915-11-24 14:49:10  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:49:10,75915-11-24 14:49:10 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:49:10,75915-11-24 14:49:10 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:49:10,75915-11-24 14:49:10 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:49:10,75915-11-24 14:49:10 DEBUG (SchemaUpdate.java:203 LINE) SchemaUpdate.execute -> create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:49:10,75915-11-24 14:49:10 ERROR (SchemaUpdate.java:212 LINE) SchemaUpdate.execute -> Unsuccessful: create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:49:10,75915-11-24 14:49:10 ERROR (SchemaUpdate.java:213 LINE) SchemaUpdate.execute -> Unknown database 'marketing1'
2015-11-24 14:49:10,75915-11-24 14:49:10  INFO (SchemaUpdate.java:217 LINE) SchemaUpdate.execute -> schema update complete
2015-11-24 14:49:10,75915-11-24 14:49:10  INFO (UpdateTimestampsCache.java:57 LINE) UpdateTimestampsCache.<init> -> starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:49:10,77515-11-24 14:49:10  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
2015-11-24 14:49:10,79015-11-24 14:49:10 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:49:10,79015-11-24 14:49:10  WARN (DiskStorePathManager.java:162 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> diskStorePath 'C:\Users\gqy\AppData\Local\Temp' is already used by an existing CacheManager either in the same VM or in a different process.
The diskStore path for this CacheManager will be set to C:\Users\gqy\AppData\Local\Temp\ehcache_auto_created7718230423916281277diskstore.
To avoid this warning consider using the CacheManager factory methods to create a singleton CacheManager or specifying a separate ehcache configuration (ehcache.xml) for each CacheManager instance.
2015-11-24 14:49:10,80615-11-24 14:49:10 DEBUG (DiskStorePathManager.java:169 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Using diskstore path C:\Users\gqy\AppData\Local\Temp\ehcache_auto_created7718230423916281277diskstore
2015-11-24 14:49:10,80615-11-24 14:49:10 DEBUG (DiskStorePathManager.java:170 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Holding exclusive lock on C:\Users\gqy\AppData\Local\Temp\ehcache_auto_created7718230423916281277diskstore\.ehcache-diskstore.lock
2015-11-24 14:49:10,80615-11-24 14:49:10 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 14:49:10,80615-11-24 14:49:10 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:49:10,80615-11-24 14:49:10 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\ehcache_auto_created7718230423916281277diskstore\org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:49:10,80615-11-24 14:49:10 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.UpdateTimestampsCache'.
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:49:10,82115-11-24 14:49:10  INFO (StandardQueryCache.java:76 LINE) StandardQueryCache.<init> -> starting query cache at region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:49:10,82115-11-24 14:49:10  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.StandardQueryCache
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\ehcache_auto_created7718230423916281277diskstore\org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.StandardQueryCache
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.StandardQueryCache'.
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (SessionFactoryImpl.java:539 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named HQL queries
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (SessionFactoryImpl.java:559 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named SQL queries
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'sessionFactory'
2015-11-24 14:49:10,82115-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userOperateDao'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userOperateDao'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userInterfaceDao'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userInterfaceDao'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userInterfaceDao' to allow for resolving potential circular references
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userInterfaceDao'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userInterfaceDao'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'noteNumRecordDao'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'noteNumRecordDao'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'noteNumRecordDao' to allow for resolving potential circular references
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'noteNumRecordDao'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'noteNumRecordDao'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'crashLogDao'
2015-11-24 14:49:10,83715-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'crashLogDao'
2015-11-24 14:49:10,85315-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'crashLogDao' to allow for resolving potential circular references
2015-11-24 14:49:10,85315-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:49:10,85315-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'crashLogDao'
2015-11-24 14:49:10,85315-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:10,85315-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'crashLogDao'
2015-11-24 14:49:10,85315-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'dataSource'
2015-11-24 14:49:10,85315-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:49:10,85315-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:49:10,85315-11-24 14:49:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:49:10,85315-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:49:10,86915-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2015-11-24 14:49:10,86915-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:49:10,86915-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:49:10,86915-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:49:10,86915-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:10,86915-11-24 14:49:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'transactionManager'
2015-11-24 14:49:10,86915-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'transactionManager'
2015-11-24 14:49:10,88515-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-11-24 14:49:10,88515-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:49:10,88515-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-11-24 14:49:10,88515-11-24 14:49:10  INFO (HibernateTransactionManager.java:415 LINE) HibernateTransactionManager.afterPropertiesSet -> Using DataSource [org.apache.commons.dbcp.BasicDataSource@760d4992] of Hibernate SessionFactory for HibernateTransactionManager
2015-11-24 14:49:10,88515-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:10,88515-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'transactionManager'
2015-11-24 14:49:10,88515-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:49:10,88515-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:49:10,88515-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:49:10,88515-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:49:10,88515-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:49:10,88515-11-24 14:49:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'operateService'
2015-11-24 14:49:10,88515-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'operateService'
2015-11-24 14:49:10,90115-11-24 14:49:10 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserOperateServiceImp]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:49:10,90115-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'operateService' to allow for resolving potential circular references
2015-11-24 14:49:10,90115-11-24 14:49:10 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'operateService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:49:10,91615-11-24 14:49:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'fileRemote'
2015-11-24 14:49:10,91615-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'fileRemote'
2015-11-24 14:49:10,91615-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'fileRemote' to allow for resolving potential circular references
2015-11-24 14:49:10,91615-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'fileRemote'
2015-11-24 14:49:10,93215-11-24 14:49:10 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static
2015-11-24 14:49:10,94715-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'fileRemote'
2015-11-24 14:49:10,94715-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:49:10,94715-11-24 14:49:10 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'operateService' to bean named 'userOperateDao'
2015-11-24 14:49:10,94715-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:10,94715-11-24 14:49:10 DEBUG (AbstractFallbackTransactionAttributeSource.java:106 LINE) AbstractFallbackTransactionAttributeSource.getTransactionAttribute -> Adding transactional method 'registAccount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '',-java.lang.Throwable
2015-11-24 14:49:10,94715-11-24 14:49:10 DEBUG (AbstractAutoProxyCreator.java:534 LINE) AbstractAutoProxyCreator.buildAdvisors -> Creating implicit proxy for bean 'operateService' with 0 common interceptors and 1 specific interceptors
2015-11-24 14:49:10,94715-11-24 14:49:10 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.fx.mobile.user.service.impl.UserOperateServiceImp@125fc746]
2015-11-24 14:49:10,94715-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'operateService'
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'SpringContextUtil'
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'SpringContextUtil'
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'SpringContextUtil' to allow for resolving potential circular references
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'SpringContextUtil'
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'fileRemote'
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userinterfaceService'
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userinterfaceService'
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserInterfaceServiceImpl]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userinterfaceService' to allow for resolving potential circular references
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'userinterfaceService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userInterfaceDao'
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'userinterfaceService' to bean named 'userInterfaceDao'
2015-11-24 14:49:10,96315-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:10,97915-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userinterfaceService'
2015-11-24 14:49:10,97915-11-24 14:49:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'urlProperties'
2015-11-24 14:49:10,97915-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'urlProperties'
2015-11-24 14:49:10,97915-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'urlProperties' to allow for resolving potential circular references
2015-11-24 14:49:10,97915-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:10,97915-11-24 14:49:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'urlProperties'
2015-11-24 14:49:10,97915-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:49:10,97915-11-24 14:49:10 DEBUG (AbstractApplicationContext.java:858 LINE) AbstractApplicationContext.initLifecycleProcessor -> Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@a31785a]
2015-11-24 14:49:10,97915-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:49:10,97915-11-24 14:49:10 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-11-24 14:49:10,97915-11-24 14:49:10 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-11-24 14:49:10,97915-11-24 14:49:10 DEBUG (PropertySourcesPropertyResolver.java:93 LINE) PropertySourcesPropertyResolver.getProperty -> Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-11-24 14:49:10,97915-11-24 14:49:10 DEBUG (CacheAwareContextLoaderDelegate.java:93 LINE) CacheAwareContextLoaderDelegate.loadContext -> Storing ApplicationContext in cache under key [[MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:49:10,99415-11-24 14:49:10 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 14:49:10,99415-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:49:10,99415-11-24 14:49:10 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:49:10,99415-11-24 14:49:10 DEBUG (SessionFactoryUtils.java:322 LINE) SessionFactoryUtils.doGetSession -> Opening Hibernate Session
2015-11-24 14:49:11,02615-11-24 14:49:11 DEBUG (SessionImpl.java:265 LINE) SessionImpl.<init> -> opened session at timestamp: 5932432388071424
2015-11-24 14:49:11,08815-11-24 14:49:11 DEBUG (QueryTranslatorImpl.java:274 LINE) QueryTranslatorImpl.parse -> parse() - HQL: from com.fx.mobile.model.UserOperate where userName='18251901' or userPhoneNumb='18251901'  or userEmail='18251901'
2015-11-24 14:49:11,10415-11-24 14:49:11 DEBUG (QueryTranslatorImpl.java:293 LINE) QueryTranslatorImpl.showHqlAst -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'fx'
    |           |  |  \-[IDENT] Node: 'mobile'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'UserOperate'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'userName'
          |  |  \-[QUOTED_STRING] Node: ''18251901''
          |  \-[EQ] Node: '='
          |     +-[IDENT] Node: 'userPhoneNumb'
          |     \-[QUOTED_STRING] Node: ''18251901''
          \-[EQ] Node: '='
             +-[IDENT] Node: 'userEmail'
             \-[QUOTED_STRING] Node: ''18251901''

2015-11-24 14:49:11,10415-11-24 14:49:11 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:49:11,15115-11-24 14:49:11 DEBUG (HqlSqlBaseWalker.java:111 LINE) HqlSqlBaseWalker.beforeStatement -> select << begin [level=1, statement=select]
2015-11-24 14:49:11,16615-11-24 14:49:11 DEBUG (FromElement.java:157 LINE) FromElement.doInitialize -> FromClause{level=1} :  com.fx.mobile.model.UserOperate (no alias) -> useroperat0_
2015-11-24 14:49:11,18215-11-24 14:49:11 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 14:49:11,18215-11-24 14:49:11 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userName -> org.hibernate.type.StringType@4564886c
2015-11-24 14:49:11,18215-11-24 14:49:11 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userName -> useroperat0_.userName
2015-11-24 14:49:11,19715-11-24 14:49:11 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 14:49:11,19715-11-24 14:49:11 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userPhoneNumb -> org.hibernate.type.StringType@4564886c
2015-11-24 14:49:11,19715-11-24 14:49:11 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userPhoneNumb -> useroperat0_.user_PhoneNumb
2015-11-24 14:49:11,19715-11-24 14:49:11 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 14:49:11,19715-11-24 14:49:11 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userEmail -> org.hibernate.type.StringType@4564886c
2015-11-24 14:49:11,19715-11-24 14:49:11 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userEmail -> useroperat0_.userEmail
2015-11-24 14:49:11,19715-11-24 14:49:11 DEBUG (HqlSqlBaseWalker.java:117 LINE) HqlSqlBaseWalker.beforeStatementCompletion -> select : finishing up [level=1, statement=select]
2015-11-24 14:49:11,19715-11-24 14:49:11 DEBUG (HqlSqlWalker.java:625 LINE) HqlSqlWalker.processQuery -> processQuery() :  ( SELECT ( FromClause{level=1} user_operate useroperat0_ ) ( where ( or ( or ( = ( useroperat0_.userName {synthetic-alias} userName ) '18251901' ) ( = ( useroperat0_.user_PhoneNumb {synthetic-alias} userPhoneNumb ) '18251901' ) ) ( = ( useroperat0_.userEmail {synthetic-alias} userEmail ) '18251901' ) ) ) )
2015-11-24 14:49:11,19715-11-24 14:49:11 DEBUG (HqlSqlWalker.java:868 LINE) HqlSqlWalker.createSelectClauseFromFromClause -> Derived SELECT clause created.
2015-11-24 14:49:11,21315-11-24 14:49:11 DEBUG (JoinProcessor.java:179 LINE) JoinProcessor.addJoinNodes -> Using FROM fragment [user_operate useroperat0_]
2015-11-24 14:49:11,21315-11-24 14:49:11 DEBUG (HqlSqlBaseWalker.java:123 LINE) HqlSqlBaseWalker.afterStatementCompletion -> select >> end [level=1, statement=select]
2015-11-24 14:49:11,21315-11-24 14:49:11 DEBUG (QueryTranslatorImpl.java:260 LINE) QueryTranslatorImpl.analyze -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_operate)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'useroperat0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}}
    |  \-[SQL_TOKEN] SqlFragment: 'useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[useroperat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_operate useroperat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'useroperat0_.userName' {propertyName=userName,dereferenceType=ALL,propertyPath=userName,path={synthetic-alias}.userName,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          |  |  \-[QUOTED_STRING] LiteralNode: ''18251901''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'useroperat0_.user_PhoneNumb' {propertyName=userPhoneNumb,dereferenceType=ALL,propertyPath=userPhoneNumb,path={synthetic-alias}.userPhoneNumb,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |  \-[IDENT] IdentNode: 'userPhoneNumb' {originalText=userPhoneNumb}
          |     \-[QUOTED_STRING] LiteralNode: ''18251901''
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'useroperat0_.userEmail' {propertyName=userEmail,dereferenceType=ALL,propertyPath=userEmail,path={synthetic-alias}.userEmail,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'userEmail' {originalText=userEmail}
             \-[QUOTED_STRING] LiteralNode: ''18251901''

2015-11-24 14:49:11,21315-11-24 14:49:11 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:49:11,22915-11-24 14:49:11 DEBUG (QueryTranslatorImpl.java:243 LINE) QueryTranslatorImpl.generate -> HQL: from com.fx.mobile.model.UserOperate where userName='18251901' or userPhoneNumb='18251901'  or userEmail='18251901'
2015-11-24 14:49:11,22915-11-24 14:49:11 DEBUG (QueryTranslatorImpl.java:244 LINE) QueryTranslatorImpl.generate -> SQL: select useroperat0_.id as id0_, useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_ from user_operate useroperat0_ where useroperat0_.userName='18251901' or useroperat0_.user_PhoneNumb='18251901' or useroperat0_.userEmail='18251901'
2015-11-24 14:49:11,22915-11-24 14:49:11 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:49:11,24415-11-24 14:49:11 DEBUG (AbstractBatcher.java:410 LINE) AbstractBatcher.logOpenPreparedStatement -> about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-11-24 14:49:11,24415-11-24 14:49:11 DEBUG (ConnectionManager.java:444 LINE) ConnectionManager.openConnection -> opening JDBC connection
2015-11-24 14:49:11,26015-11-24 14:49:11 DEBUG (SQLStatementLogger.java:111 LINE) SQLStatementLogger.logStatement -> 
    select
        useroperat0_.id as id0_,
        useroperat0_.userName as userName0_,
        useroperat0_.userPassword as userPass3_0_,
        useroperat0_.phicomm_id as phicomm4_0_,
        useroperat0_.userEmail as userEmail0_,
        useroperat0_.user_PhoneNumb as user6_0_,
        useroperat0_.userType as userType0_,
        useroperat0_.isChecked as isChecked0_,
        useroperat0_.nickname as nickname0_,
        useroperat0_.figureurl as figureurl0_,
        useroperat0_.sex as sex0_,
        useroperat0_.province as province0_,
        useroperat0_.city as city0_,
        useroperat0_.birthday as birthday0_,
        useroperat0_.open_id as open15_0_,
        useroperat0_.open_key as open16_0_,
        useroperat0_.access_token as access17_0_,
        useroperat0_.expirese_in as expirese18_0_,
        useroperat0_.devinfo as devinfo0_,
        useroperat0_.userinfo as userinfo0_,
        useroperat0_.openqq as openqq0_,
        useroperat0_.openqqinfo as openqqinfo0_,
        useroperat0_.opensina as opensina0_,
        useroperat0_.opensinainfo as opensin24_0_,
        useroperat0_.createTime as createTime0_,
        useroperat0_.updateTime as updateTime0_,
        useroperat0_.lastLoginTime as lastLog27_0_ 
    from
        user_operate useroperat0_ 
    where
        useroperat0_.userName='18251901' 
        or useroperat0_.user_PhoneNumb='18251901' 
        or useroperat0_.userEmail='18251901'
2015-11-24 14:49:11,27615-11-24 14:49:11 DEBUG (AbstractBatcher.java:426 LINE) AbstractBatcher.logOpenResults -> about to open ResultSet (open ResultSets: 0, globally: 0)
2015-11-24 14:49:11,27615-11-24 14:49:11 DEBUG (AbstractBatcher.java:433 LINE) AbstractBatcher.logCloseResults -> about to close ResultSet (open ResultSets: 1, globally: 1)
2015-11-24 14:49:11,27615-11-24 14:49:11 DEBUG (AbstractBatcher.java:418 LINE) AbstractBatcher.logClosePreparedStatement -> about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-11-24 14:49:11,27615-11-24 14:49:11 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 14:49:11,27615-11-24 14:49:11 DEBUG (ConnectionManager.java:464 LINE) ConnectionManager.closeConnection -> releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-11-24 14:49:11,27615-11-24 14:49:11 DEBUG (StatefulPersistenceContext.java:893 LINE) StatefulPersistenceContext.initializeNonLazyCollections -> initializing non-lazy collections
2015-11-24 14:49:11,27615-11-24 14:49:11 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 14:49:11,27615-11-24 14:49:11 DEBUG (HibernateAccessor.java:389 LINE) HibernateAccessor.flushIfNecessary -> Eagerly flushing Hibernate session
2015-11-24 14:49:11,27615-11-24 14:49:11 DEBUG (SessionFactoryUtils.java:800 LINE) SessionFactoryUtils.closeSession -> Closing Hibernate Session
2015-11-24 14:49:11,29115-11-24 14:49:11 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@4dd290b5 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@3b1a82fd, testMethod = getListTest@UserOperateDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 14:49:11,29115-11-24 14:49:11 DEBUG (DirtiesContextTestExecutionListener.java:138 LINE) DirtiesContextTestExecutionListener.afterTestClass -> After test class: context [[TestContext@4dd290b5 testClass = UserOperateDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
2015-11-24 14:49:11,29115-11-24 14:49:11  INFO (AbstractApplicationContext.java:1042 LINE) AbstractApplicationContext.doClose -> Closing org.springframework.context.support.GenericApplicationContext@4ad9cb27: startup date [Tue Nov 24 14:49:08 CST 2015]; root of context hierarchy
2015-11-24 14:49:11,29115-11-24 14:49:11 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:49:11,29115-11-24 14:49:11  INFO (DefaultSingletonBeanRegistry.java:444 LINE) DefaultSingletonBeanRegistry.destroySingletons -> Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2aba391a: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:49:11,29115-11-24 14:49:11 DEBUG (DefaultSingletonBeanRegistry.java:500 LINE) DefaultSingletonBeanRegistry.destroyBean -> Retrieved dependent beans for bean 'userOperateDao': [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:49:11,29115-11-24 14:49:11 DEBUG (DisposableBeanAdapter.java:219 LINE) DisposableBeanAdapter.destroy -> Invoking destroy() on bean with name 'sessionFactory'
2015-11-24 14:49:11,29115-11-24 14:49:11  INFO (AbstractSessionFactoryBean.java:223 LINE) AbstractSessionFactoryBean.destroy -> Closing Hibernate SessionFactory
2015-11-24 14:49:11,29115-11-24 14:49:11  INFO (SessionFactoryImpl.java:927 LINE) SessionFactoryImpl.close -> closing
2015-11-24 14:49:11,30715-11-24 14:49:11 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:49:11,30715-11-24 14:49:11 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 14:49:11,30715-11-24 14:49:11 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:49:11,30715-11-24 14:49:11 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 14:49:11,32215-11-24 14:49:11 DEBUG (DiskStorePathManager.java:371 LINE) DiskStorePathManager$DiskStorePath.unlock -> Deleted directory ehcache_auto_created7718230423916281277diskstore
2015-11-24 14:49:11,32215-11-24 14:49:11 DEBUG (DisposableBeanAdapter.java:295 LINE) DisposableBeanAdapter.invokeCustomDestroyMethod -> Invoking destroy method 'close' on bean with name 'dataSource'
2015-11-24 16:12:09,01315-11-24 16:12:09 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 16:12:09,14115-11-24 16:12:09 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@10b090ac declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 16:12:09,14415-11-24 16:12:09 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:09,14715-11-24 16:12:09 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 16:12:09,17315-11-24 16:12:09 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:09,17315-11-24 16:12:09 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:09,17615-11-24 16:12:09 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:09,18615-11-24 16:12:09 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:09,19215-11-24 16:12:09 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:09,19315-11-24 16:12:09 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:09,19615-11-24 16:12:09 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:09,19615-11-24 16:12:09 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:09,23015-11-24 16:12:09 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:09,23015-11-24 16:12:09 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:09,23315-11-24 16:12:09 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:09,23315-11-24 16:12:09 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:09,23715-11-24 16:12:09 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@5d0369f2 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@b20be93, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@12bfaa9a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 16:12:09,23815-11-24 16:12:09 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@12bfaa9a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 16:12:09,23815-11-24 16:12:09 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@12bfaa9a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 16:12:09,42615-11-24 16:12:09 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:09,43115-11-24 16:12:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:09,43415-11-24 16:12:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:09,43415-11-24 16:12:09 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:09,44615-11-24 16:12:09 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:09,44715-11-24 16:12:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:09,44715-11-24 16:12:09 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:09,44815-11-24 16:12:09 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:09,46515-11-24 16:12:09 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 16:12:09,46615-11-24 16:12:09 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 16:12:09,48015-11-24 16:12:09 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 16:12:09,48215-11-24 16:12:09  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 16:12:09,49315-11-24 16:12:09 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:12:09,61715-11-24 16:12:09 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 16:12:09,62815-11-24 16:12:09 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 16:12:09,63415-11-24 16:12:09 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:12:09,81815-11-24 16:12:09 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:12:09,83815-11-24 16:12:09  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 16:12:09,85115-11-24 16:12:09 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:12:09,86615-11-24 16:12:09 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:12:09,96215-11-24 16:12:09 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:12:09,97815-11-24 16:12:09  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 16:12:09,98015-11-24 16:12:09 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:12:09,99215-11-24 16:12:09 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:12:10,04715-11-24 16:12:10 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 16:12:10,05115-11-24 16:12:10 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 16:12:10,06615-11-24 16:12:10 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:12:10,11015-11-24 16:12:10 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 16:12:10,14915-11-24 16:12:10  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 16:12:10,15115-11-24 16:12:10 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:12:10,15315-11-24 16:12:10 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:12:10,17115-11-24 16:12:10 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 16:12:10,17715-11-24 16:12:10 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 16:12:10,18515-11-24 16:12:10 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:12:10,24915-11-24 16:12:10  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 16:12:10,28315-11-24 16:12:10  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 16:12:10,30015-11-24 16:12:10 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 16:12:10,30415-11-24 16:12:10 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 16:12:10,31115-11-24 16:12:10 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 16:12:10,31415-11-24 16:12:10 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 16:12:10,34815-11-24 16:12:10 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 16:12:10,35315-11-24 16:12:10 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 16:12:10,35415-11-24 16:12:10 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 16:12:10,35715-11-24 16:12:10 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 16:12:10,36315-11-24 16:12:10  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 16:12:10,36415-11-24 16:12:10  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 16:12:10,36715-11-24 16:12:10 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:12:10,37115-11-24 16:12:10 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:12:10,40015-11-24 16:12:10 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:12:10,40115-11-24 16:12:10 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 16:12:10,40715-11-24 16:12:10  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@873930e: startup date [Tue Nov 24 16:12:10 CST 2015]; root of context hierarchy
2015-11-24 16:12:10,40815-11-24 16:12:10 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@873930e: org.springframework.beans.factory.support.DefaultListableBeanFactory@14356788: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 16:12:10,50415-11-24 16:12:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:12:10,50415-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:12:10,52815-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:12:10,53115-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:12:10,65315-11-24 16:12:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 16:12:10,65415-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 16:12:10,65815-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 16:12:10,71915-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 16:12:10,71915-11-24 16:12:10  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 16:12:10,72015-11-24 16:12:10  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 16:12:10,72115-11-24 16:12:10  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 16:12:10,73815-11-24 16:12:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:12:10,73815-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:12:10,74115-11-24 16:12:10  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 16:12:10,74115-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:12:10,74115-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:12:10,74215-11-24 16:12:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:12:10,74215-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:12:10,74315-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:12:10,74415-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:12:10,74415-11-24 16:12:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:12:10,74415-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:12:10,80515-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:12:10,80515-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:12:10,80515-11-24 16:12:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:12:10,80615-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:12:10,80615-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:12:10,80615-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:12:10,80715-11-24 16:12:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:12:10,80715-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:12:10,80715-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 16:12:10,80715-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:12:10,82315-11-24 16:12:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:12:10,82315-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:12:10,83615-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 16:12:10,85215-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:12:10,85715-11-24 16:12:10 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6769360f]
2015-11-24 16:12:10,86015-11-24 16:12:10 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@78a1068]
2015-11-24 16:12:10,86715-11-24 16:12:10  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14356788: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 16:12:10,86815-11-24 16:12:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 16:12:10,86915-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 16:12:10,87915-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 16:12:10,89415-11-24 16:12:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 16:12:10,89515-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 16:12:10,91615-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 16:12:10,99015-11-24 16:12:10 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 16:12:10,99115-11-24 16:12:10 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 16:12:11,13515-11-24 16:12:11 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 16:12:11,19415-11-24 16:12:11 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:11,19415-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:11,19515-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:11,19615-11-24 16:12:11 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:11,19715-11-24 16:12:11 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:11,19715-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:11,19815-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:11,19815-11-24 16:12:11 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:11,19915-11-24 16:12:11 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:11,20015-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:11,20015-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:11,20115-11-24 16:12:11 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:11,20515-11-24 16:12:11 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:11,20615-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:11,20615-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:11,20715-11-24 16:12:11 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:11,21015-11-24 16:12:11 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:11,21015-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:11,21115-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:11,21215-11-24 16:12:11 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:11,25015-11-24 16:12:11 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:11,25015-11-24 16:12:11 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:11,25315-11-24 16:12:11 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 16:12:11,27815-11-24 16:12:11 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:12:11,28015-11-24 16:12:11 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:12:11,28115-11-24 16:12:11 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 16:12:11,30415-11-24 16:12:11 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:12:11,30615-11-24 16:12:11 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:11,31415-11-24 16:12:11 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 16:12:11,31615-11-24 16:12:11 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:11,31715-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:11,31715-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:11,31815-11-24 16:12:11 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:11,31915-11-24 16:12:11 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:11,32015-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:11,32215-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:11,32315-11-24 16:12:11 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:11,32415-11-24 16:12:11 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:11,32515-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:11,32615-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:11,32615-11-24 16:12:11 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:11,34115-11-24 16:12:11 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:11,34215-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:11,34315-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:11,34415-11-24 16:12:11 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:11,34615-11-24 16:12:11 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:11,34715-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:11,35115-11-24 16:12:11 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:11,35215-11-24 16:12:11 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:11,39715-11-24 16:12:11 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 16:12:11,49715-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7d2a92fb
2015-11-24 16:12:11,49715-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7d2a92fb
2015-11-24 16:12:11,49815-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d2a92fb
2015-11-24 16:12:11,49915-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d79997b
2015-11-24 16:12:11,50115-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@6a59828c
2015-11-24 16:12:11,50215-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@45aa7be7
2015-11-24 16:12:11,50615-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@2ffe55fd
2015-11-24 16:12:11,50615-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@2ffe55fd
2015-11-24 16:12:11,50615-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2ffe55fd
2015-11-24 16:12:11,51015-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@16de9eea
2015-11-24 16:12:11,51115-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@16de9eea
2015-11-24 16:12:11,51115-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@16de9eea
2015-11-24 16:12:11,51615-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@393cb70a
2015-11-24 16:12:11,51715-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@393cb70a
2015-11-24 16:12:11,51715-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@393cb70a
2015-11-24 16:12:11,51915-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@5129607b
2015-11-24 16:12:11,52015-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@5129607b
2015-11-24 16:12:11,52015-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5129607b
2015-11-24 16:12:11,52315-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@44d5ce53
2015-11-24 16:12:11,52415-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@44d5ce53
2015-11-24 16:12:11,52415-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@44d5ce53
2015-11-24 16:12:11,52815-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@68dda0a
2015-11-24 16:12:11,52815-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@68dda0a
2015-11-24 16:12:11,52915-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@68dda0a
2015-11-24 16:12:11,53115-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@7bfaa588
2015-11-24 16:12:11,53215-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@7bfaa588
2015-11-24 16:12:11,53215-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7bfaa588
2015-11-24 16:12:11,53815-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@11fa682c
2015-11-24 16:12:11,53815-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@11fa682c
2015-11-24 16:12:11,56315-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5187850c
2015-11-24 16:12:11,56415-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5187850c
2015-11-24 16:12:11,57215-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@c36d74a
2015-11-24 16:12:11,57315-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@c36d74a
2015-11-24 16:12:11,58315-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@293e2817
2015-11-24 16:12:11,58415-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@293e2817
2015-11-24 16:12:11,67115-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@5bc9b01d
2015-11-24 16:12:11,67115-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@5bc9b01d
2015-11-24 16:12:11,67415-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@2b5cf2a8
2015-11-24 16:12:11,67515-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2b5cf2a8
2015-11-24 16:12:11,67815-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@351672ae
2015-11-24 16:12:11,67915-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@351672ae
2015-11-24 16:12:11,67915-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@351672ae
2015-11-24 16:12:11,68015-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1abb314f
2015-11-24 16:12:11,68215-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@61f9dcce
2015-11-24 16:12:11,68315-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@61f9dcce
2015-11-24 16:12:11,68315-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@61f9dcce
2015-11-24 16:12:11,68515-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3fedae7b
2015-11-24 16:12:11,68615-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@597d93dd
2015-11-24 16:12:11,68715-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@597d93dd
2015-11-24 16:12:11,68815-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@1d8c3d92
2015-11-24 16:12:11,68815-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1d8c3d92
2015-11-24 16:12:11,69015-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@34286ac
2015-11-24 16:12:11,69115-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@34286ac
2015-11-24 16:12:11,69315-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@fd85a26
2015-11-24 16:12:11,69315-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fd85a26
2015-11-24 16:12:11,69715-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@65e45708
2015-11-24 16:12:11,69715-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@65e45708
2015-11-24 16:12:11,69915-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@8e2ff75
2015-11-24 16:12:11,70115-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@18fd5fc0
2015-11-24 16:12:11,70415-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@6130786a
2015-11-24 16:12:11,70415-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@6130786a
2015-11-24 16:12:11,70415-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@6130786a
2015-11-24 16:12:11,70715-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@544f4ab4
2015-11-24 16:12:11,70715-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@544f4ab4
2015-11-24 16:12:11,70815-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@544f4ab4
2015-11-24 16:12:11,71115-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@233c779c
2015-11-24 16:12:11,71415-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@6a168fc1
2015-11-24 16:12:11,71415-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@6a168fc1
2015-11-24 16:12:11,71515-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@6a168fc1
2015-11-24 16:12:11,71715-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@228c94a
2015-11-24 16:12:11,71815-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@228c94a
2015-11-24 16:12:11,71815-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@228c94a
2015-11-24 16:12:11,72115-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@24d662b9
2015-11-24 16:12:11,73315-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@5f05c0eb
2015-11-24 16:12:11,73315-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f05c0eb
2015-11-24 16:12:11,73415-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4036917e
2015-11-24 16:12:11,73515-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@6d36df08
2015-11-24 16:12:11,74315-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@3fabb84d
2015-11-24 16:12:11,74415-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fabb84d
2015-11-24 16:12:11,74515-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1bf5df6a
2015-11-24 16:12:11,74615-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@6b9b9f57
2015-11-24 16:12:11,74715-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@48e24332
2015-11-24 16:12:11,75015-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@5ac4c508
2015-11-24 16:12:11,77015-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@5c9c7177
2015-11-24 16:12:11,77115-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5c9c7177
2015-11-24 16:12:11,80715-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@62a49a92
2015-11-24 16:12:11,80715-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@24a019d6
2015-11-24 16:12:11,80715-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@b004363
2015-11-24 16:12:11,80815-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e481e39
2015-11-24 16:12:11,82415-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@70b85020
2015-11-24 16:12:11,83215-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@54949eb0
2015-11-24 16:12:11,83215-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@693e6031
2015-11-24 16:12:11,83315-11-24 16:12:11 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7e1d66f1
2015-11-24 16:12:11,87115-11-24 16:12:11  INFO (Version.java:37 LINE) Version.<clinit> -> Hibernate Commons Annotations 3.2.0.Final
2015-11-24 16:12:11,87915-11-24 16:12:11  INFO (Environment.java:603 LINE) Environment.<clinit> -> Hibernate 3.6.8.Final
2015-11-24 16:12:11,88315-11-24 16:12:11  INFO (Environment.java:636 LINE) Environment.<clinit> -> hibernate.properties not found
2015-11-24 16:12:11,88715-11-24 16:12:11  INFO (Environment.java:814 LINE) Environment.buildBytecodeProvider -> Bytecode provider name : javassist
2015-11-24 16:12:11,89115-11-24 16:12:11  INFO (Environment.java:695 LINE) Environment.<clinit> -> using JDK 1.4 java.sql.Timestamp handling
2015-11-24 16:12:12,01015-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2015-11-24 16:12:12,01115-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2015-11-24 16:12:12,01315-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 16:12:12,01315-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 16:12:12,01615-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2015-11-24 16:12:12,01615-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2015-11-24 16:12:12,01815-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2015-11-24 16:12:12,01815-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2015-11-24 16:12:12,01915-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2015-11-24 16:12:12,02015-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2015-11-24 16:12:12,02115-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2015-11-24 16:12:12,02215-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2015-11-24 16:12:12,02215-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2015-11-24 16:12:12,02315-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-11-24 16:12:12,02415-11-24 16:12:12 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2015-11-24 16:12:12,11815-11-24 16:12:12 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:12:12,11815-11-24 16:12:12  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:12:12,11815-11-24 16:12:12 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:12:12,11915-11-24 16:12:12 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:12:12,18215-11-24 16:12:12 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:12:12,18315-11-24 16:12:12  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:12:12,18315-11-24 16:12:12 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:12:12,18415-11-24 16:12:12 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:12:12,21515-11-24 16:12:12 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:12:12,21515-11-24 16:12:12  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:12:12,21515-11-24 16:12:12 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:12:12,21615-11-24 16:12:12 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:12:12,40715-11-24 16:12:12 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:12:12,43115-11-24 16:12:12  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.UserOperate -> user_operate
2015-11-24 16:12:12,43815-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:12:12,44715-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userName -> userName
2015-11-24 16:12:12,46215-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPassword -> userPassword
2015-11-24 16:12:12,46315-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: phicommId -> phicomm_id
2015-11-24 16:12:12,46315-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userEmail -> userEmail
2015-11-24 16:12:12,46515-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPhoneNumb -> user_PhoneNumb
2015-11-24 16:12:12,46615-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userType -> userType
2015-11-24 16:12:12,46615-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: isChecked -> isChecked
2015-11-24 16:12:12,46715-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nickname -> nickname
2015-11-24 16:12:12,46915-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: figureurl -> figureurl
2015-11-24 16:12:12,46915-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: sex -> sex
2015-11-24 16:12:12,46915-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: province -> province
2015-11-24 16:12:12,47015-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: city -> city
2015-11-24 16:12:12,47015-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: birthday -> birthday
2015-11-24 16:12:12,47215-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openId -> open_id
2015-11-24 16:12:12,47315-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openKey -> open_key
2015-11-24 16:12:12,49115-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: accessToken -> access_token
2015-11-24 16:12:12,49115-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: expireseIn -> expirese_in
2015-11-24 16:12:12,49215-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: devinfo -> devinfo
2015-11-24 16:12:12,49315-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userinfo -> userinfo
2015-11-24 16:12:12,49415-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqq -> openqq
2015-11-24 16:12:12,50515-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqqinfo -> openqqinfo
2015-11-24 16:12:12,50615-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensina -> opensina
2015-11-24 16:12:12,50615-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensinainfo -> opensinainfo
2015-11-24 16:12:12,50715-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: createTime -> createTime
2015-11-24 16:12:12,50715-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: updateTime -> updateTime
2015-11-24 16:12:12,50815-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: lastLoginTime -> lastLoginTime
2015-11-24 16:12:12,50915-11-24 16:12:12  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.NoteNumbRecord -> note_numb_record
2015-11-24 16:12:12,51015-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:12:12,51015-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nodeNumb -> node_numb
2015-11-24 16:12:12,51115-11-24 16:12:12  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.CrashLog -> crash_log
2015-11-24 16:12:12,51115-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:12:12,51215-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: url -> url
2015-11-24 16:12:12,51215-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: describes -> describes
2015-11-24 16:12:12,51315-11-24 16:12:12 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: addDate -> addDate
2015-11-24 16:12:12,51315-11-24 16:12:12 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:12:12,51615-11-24 16:12:12 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:12:12,51815-11-24 16:12:12 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:12:12,51815-11-24 16:12:12 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:12:12,51915-11-24 16:12:12 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:12:12,51915-11-24 16:12:12 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:12:12,52015-11-24 16:12:12 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:12:12,52015-11-24 16:12:12 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:12:12,52815-11-24 16:12:12  INFO (Configuration.java:1676 LINE) Configuration.applyHibernateValidatorLegacyConstraintsOnDDL -> Hibernate Validator not found: ignoring
2015-11-24 16:12:12,57315-11-24 16:12:12 DEBUG (LoggerFactory.java:29 LINE) LoggerFactory.make -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-11-24 16:12:12,57415-11-24 16:12:12  INFO (Version.java:27 LINE) Version.<clinit> -> HV000001: Hibernate Validator 5.0.0.Final
2015-11-24 16:12:12,59715-11-24 16:12:12 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:12:12,60615-11-24 16:12:12 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:12:12,63115-11-24 16:12:12 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:12:12,86515-11-24 16:12:12  INFO (LocalSessionFactoryBean.java:780 LINE) LocalSessionFactoryBean.buildSessionFactory -> Building new Hibernate SessionFactory
2015-11-24 16:12:12,86615-11-24 16:12:12 DEBUG (Configuration.java:1854 LINE) Configuration.buildSessionFactory -> Preparing to build session factory with filters : {}
2015-11-24 16:12:12,86615-11-24 16:12:12 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:12:12,86615-11-24 16:12:12 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:12:12,86615-11-24 16:12:12 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:12:12,86715-11-24 16:12:12 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:12:12,86715-11-24 16:12:12 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:12:12,86815-11-24 16:12:12 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:12:12,86815-11-24 16:12:12 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:12:12,86815-11-24 16:12:12 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:12:12,86815-11-24 16:12:12 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:12:12,87015-11-24 16:12:12 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:12:12,87015-11-24 16:12:12 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:12:12,87115-11-24 16:12:12 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:12:12,90815-11-24 16:12:12 DEBUG (Configuration.java:1896 LINE) Configuration.enableLegacyHibernateValidator -> Legacy Validator not present in classpath, ignoring event listener registration
2015-11-24 16:12:12,90915-11-24 16:12:12 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:12:12,90915-11-24 16:12:12 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:12:12,91015-11-24 16:12:12 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:12:12,95515-11-24 16:12:12 DEBUG (HibernateSearchEventListenerRegister.java:231 LINE) HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener -> Search not present in classpath, ignoring event listener registration.
2015-11-24 16:12:12,95615-11-24 16:12:12  INFO (HibernateSearchEventListenerRegister.java:75 LINE) HibernateSearchEventListenerRegister.enableHibernateSearch -> Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2015-11-24 16:12:12,96215-11-24 16:12:12  INFO (ConnectionProviderFactory.java:173 LINE) ConnectionProviderFactory.initializeConnectionProviderFromConfig -> Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2015-11-24 16:12:13,44315-11-24 16:12:13  INFO (Dialect.java:135 LINE) Dialect.<init> -> Using dialect: org.hibernate.dialect.MySQLDialect
2015-11-24 16:12:13,49815-11-24 16:12:13  INFO (SettingsFactory.java:126 LINE) SettingsFactory.buildSettings -> Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-11-24 16:12:13,49815-11-24 16:12:13  INFO (SettingsFactory.java:132 LINE) SettingsFactory.buildSettings -> Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.25 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2015-11-24 16:12:13,50315-11-24 16:12:13  INFO (TransactionFactoryFactory.java:65 LINE) TransactionFactoryFactory.buildTransactionFactory -> Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2015-11-24 16:12:13,50615-11-24 16:12:13  INFO (TransactionManagerLookupFactory.java:83 LINE) TransactionManagerLookupFactory.getTransactionManagerLookup -> No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2015-11-24 16:12:13,50615-11-24 16:12:13  INFO (SettingsFactory.java:179 LINE) SettingsFactory.buildSettings -> Automatic flush during beforeCompletion(): disabled
2015-11-24 16:12:13,50715-11-24 16:12:13  INFO (SettingsFactory.java:183 LINE) SettingsFactory.buildSettings -> Automatic session close at end of transaction: disabled
2015-11-24 16:12:13,50715-11-24 16:12:13  INFO (SettingsFactory.java:190 LINE) SettingsFactory.buildSettings -> JDBC batch size: 25
2015-11-24 16:12:13,52515-11-24 16:12:13  INFO (SettingsFactory.java:193 LINE) SettingsFactory.buildSettings -> JDBC batch updates for versioned data: disabled
2015-11-24 16:12:13,53115-11-24 16:12:13  INFO (SettingsFactory.java:198 LINE) SettingsFactory.buildSettings -> Scrollable result sets: enabled
2015-11-24 16:12:13,53215-11-24 16:12:13 DEBUG (SettingsFactory.java:202 LINE) SettingsFactory.buildSettings -> Wrap result sets: disabled
2015-11-24 16:12:13,53215-11-24 16:12:13  INFO (SettingsFactory.java:206 LINE) SettingsFactory.buildSettings -> JDBC3 getGeneratedKeys(): enabled
2015-11-24 16:12:13,53215-11-24 16:12:13  INFO (SettingsFactory.java:210 LINE) SettingsFactory.buildSettings -> JDBC result set fetch size: 50
2015-11-24 16:12:13,53315-11-24 16:12:13  INFO (SettingsFactory.java:214 LINE) SettingsFactory.buildSettings -> Connection release mode: after_transaction
2015-11-24 16:12:13,53715-11-24 16:12:13  INFO (SettingsFactory.java:238 LINE) SettingsFactory.buildSettings -> Maximum outer join fetch depth: 2
2015-11-24 16:12:13,53715-11-24 16:12:13  INFO (SettingsFactory.java:241 LINE) SettingsFactory.buildSettings -> Default batch fetch size: 1
2015-11-24 16:12:13,53815-11-24 16:12:13  INFO (SettingsFactory.java:245 LINE) SettingsFactory.buildSettings -> Generate SQL with comments: disabled
2015-11-24 16:12:13,53815-11-24 16:12:13  INFO (SettingsFactory.java:249 LINE) SettingsFactory.buildSettings -> Order SQL updates by primary key: disabled
2015-11-24 16:12:13,53815-11-24 16:12:13  INFO (SettingsFactory.java:253 LINE) SettingsFactory.buildSettings -> Order SQL inserts for batching: disabled
2015-11-24 16:12:13,53915-11-24 16:12:13  INFO (SettingsFactory.java:431 LINE) SettingsFactory.createQueryTranslatorFactory -> Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2015-11-24 16:12:13,54415-11-24 16:12:13  INFO (ASTQueryTranslatorFactory.java:47 LINE) ASTQueryTranslatorFactory.<init> -> Using ASTQueryTranslatorFactory
2015-11-24 16:12:13,54515-11-24 16:12:13  INFO (SettingsFactory.java:261 LINE) SettingsFactory.buildSettings -> Query language substitutions: {false='N', true='Y'}
2015-11-24 16:12:13,54515-11-24 16:12:13  INFO (SettingsFactory.java:266 LINE) SettingsFactory.buildSettings -> JPA-QL strict compliance: disabled
2015-11-24 16:12:13,54515-11-24 16:12:13  INFO (SettingsFactory.java:271 LINE) SettingsFactory.buildSettings -> Second-level cache: enabled
2015-11-24 16:12:13,55115-11-24 16:12:13  INFO (SettingsFactory.java:275 LINE) SettingsFactory.buildSettings -> Query cache: enabled
2015-11-24 16:12:13,57615-11-24 16:12:13  INFO (SettingsFactory.java:406 LINE) SettingsFactory.createRegionFactory -> Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
2015-11-24 16:12:13,58115-11-24 16:12:13  INFO (RegionFactoryCacheProviderBridge.java:61 LINE) RegionFactoryCacheProviderBridge.<init> -> Cache provider: org.hibernate.cache.EhCacheProvider
2015-11-24 16:12:13,61415-11-24 16:12:13  INFO (SettingsFactory.java:285 LINE) SettingsFactory.buildSettings -> Optimize cache for minimal puts: disabled
2015-11-24 16:12:13,61415-11-24 16:12:13  INFO (SettingsFactory.java:294 LINE) SettingsFactory.buildSettings -> Structured second-level cache entries: disabled
2015-11-24 16:12:13,61415-11-24 16:12:13  INFO (SettingsFactory.java:385 LINE) SettingsFactory.createQueryCacheFactory -> Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
2015-11-24 16:12:13,62315-11-24 16:12:13  INFO (SettingsFactory.java:314 LINE) SettingsFactory.buildSettings -> Echoing all SQL to stdout
2015-11-24 16:12:13,62415-11-24 16:12:13  INFO (SettingsFactory.java:323 LINE) SettingsFactory.buildSettings -> Statistics: disabled
2015-11-24 16:12:13,63415-11-24 16:12:13  INFO (SettingsFactory.java:327 LINE) SettingsFactory.buildSettings -> Deleted entity synthetic identifier rollback: disabled
2015-11-24 16:12:13,64015-11-24 16:12:13  INFO (SettingsFactory.java:343 LINE) SettingsFactory.buildSettings -> Default entity-mode: pojo
2015-11-24 16:12:13,64015-11-24 16:12:13  INFO (SettingsFactory.java:347 LINE) SettingsFactory.buildSettings -> Named query checking : enabled
2015-11-24 16:12:13,64015-11-24 16:12:13  INFO (SettingsFactory.java:351 LINE) SettingsFactory.buildSettings -> Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2015-11-24 16:12:13,66415-11-24 16:12:13  INFO (SessionFactoryImpl.java:202 LINE) SessionFactoryImpl.<init> -> building session factory
2015-11-24 16:12:13,67115-11-24 16:12:13 DEBUG (SessionFactoryImpl.java:206 LINE) SessionFactoryImpl.<init> -> Statistics initialized [enabled=false]}
2015-11-24 16:12:13,67315-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7d2a92fb
2015-11-24 16:12:13,67315-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7d2a92fb
2015-11-24 16:12:13,67415-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7d2a92fb
2015-11-24 16:12:13,67515-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1d79997b
2015-11-24 16:12:13,67515-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@6a59828c
2015-11-24 16:12:13,67515-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@45aa7be7
2015-11-24 16:12:13,67615-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@2ffe55fd
2015-11-24 16:12:13,67615-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@2ffe55fd
2015-11-24 16:12:13,67615-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2ffe55fd
2015-11-24 16:12:13,67615-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@16de9eea
2015-11-24 16:12:13,67615-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@16de9eea
2015-11-24 16:12:13,67715-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@16de9eea
2015-11-24 16:12:13,67715-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@393cb70a
2015-11-24 16:12:13,67715-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@393cb70a
2015-11-24 16:12:13,67715-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@393cb70a
2015-11-24 16:12:13,67815-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@5129607b
2015-11-24 16:12:13,67815-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@5129607b
2015-11-24 16:12:13,67815-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5129607b
2015-11-24 16:12:13,67915-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@44d5ce53
2015-11-24 16:12:13,67915-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@44d5ce53
2015-11-24 16:12:13,67915-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@44d5ce53
2015-11-24 16:12:13,68015-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@68dda0a
2015-11-24 16:12:13,68015-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@68dda0a
2015-11-24 16:12:13,68015-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@68dda0a
2015-11-24 16:12:13,68115-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@7bfaa588
2015-11-24 16:12:13,68115-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@7bfaa588
2015-11-24 16:12:13,68215-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7bfaa588
2015-11-24 16:12:13,68215-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@11fa682c
2015-11-24 16:12:13,68315-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@11fa682c
2015-11-24 16:12:13,68315-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5187850c
2015-11-24 16:12:13,68415-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5187850c
2015-11-24 16:12:13,68415-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@c36d74a
2015-11-24 16:12:13,68415-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@c36d74a
2015-11-24 16:12:13,68515-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@293e2817
2015-11-24 16:12:13,68515-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@293e2817
2015-11-24 16:12:13,68515-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@5bc9b01d
2015-11-24 16:12:13,68615-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@5bc9b01d
2015-11-24 16:12:13,68615-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@2b5cf2a8
2015-11-24 16:12:13,68615-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2b5cf2a8
2015-11-24 16:12:13,68715-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@351672ae
2015-11-24 16:12:13,68715-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@351672ae
2015-11-24 16:12:13,68715-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@351672ae
2015-11-24 16:12:13,68815-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1abb314f
2015-11-24 16:12:13,68815-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@61f9dcce
2015-11-24 16:12:13,68815-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@61f9dcce
2015-11-24 16:12:13,68915-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@61f9dcce
2015-11-24 16:12:13,68915-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3fedae7b
2015-11-24 16:12:13,69015-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@597d93dd
2015-11-24 16:12:13,69015-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@597d93dd
2015-11-24 16:12:13,69015-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@1d8c3d92
2015-11-24 16:12:13,69115-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1d8c3d92
2015-11-24 16:12:13,69115-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@34286ac
2015-11-24 16:12:13,69115-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@34286ac
2015-11-24 16:12:13,69215-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@fd85a26
2015-11-24 16:12:13,69215-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fd85a26
2015-11-24 16:12:13,69315-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@65e45708
2015-11-24 16:12:13,69415-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@65e45708
2015-11-24 16:12:13,69415-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@8e2ff75
2015-11-24 16:12:13,69415-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@18fd5fc0
2015-11-24 16:12:13,69515-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@6130786a
2015-11-24 16:12:13,69515-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@6130786a
2015-11-24 16:12:13,69515-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@6130786a
2015-11-24 16:12:13,69615-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@544f4ab4
2015-11-24 16:12:13,69615-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@544f4ab4
2015-11-24 16:12:13,69615-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@544f4ab4
2015-11-24 16:12:13,69715-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@233c779c
2015-11-24 16:12:13,69715-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@6a168fc1
2015-11-24 16:12:13,69715-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@6a168fc1
2015-11-24 16:12:13,69715-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@6a168fc1
2015-11-24 16:12:13,69815-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@228c94a
2015-11-24 16:12:13,69815-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@228c94a
2015-11-24 16:12:13,69815-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@228c94a
2015-11-24 16:12:13,69815-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@24d662b9
2015-11-24 16:12:13,69815-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@5f05c0eb
2015-11-24 16:12:13,69915-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5f05c0eb
2015-11-24 16:12:13,69915-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4036917e
2015-11-24 16:12:13,69915-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@6d36df08
2015-11-24 16:12:13,69915-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@3fabb84d
2015-11-24 16:12:13,70015-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fabb84d
2015-11-24 16:12:13,70015-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1bf5df6a
2015-11-24 16:12:13,70015-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@6b9b9f57
2015-11-24 16:12:13,70015-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@48e24332
2015-11-24 16:12:13,70015-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@5ac4c508
2015-11-24 16:12:13,70115-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@5c9c7177
2015-11-24 16:12:13,70115-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5c9c7177
2015-11-24 16:12:13,70115-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1fb7482a
2015-11-24 16:12:13,70115-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@39e2cdaa
2015-11-24 16:12:13,70215-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@592c7196
2015-11-24 16:12:13,70215-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74d55c96
2015-11-24 16:12:13,70215-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63b1b7c6
2015-11-24 16:12:13,70215-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28985b4c
2015-11-24 16:12:13,70215-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2a91ef66
2015-11-24 16:12:13,70315-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52fc275f
2015-11-24 16:12:13,70315-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@31c7141c
2015-11-24 16:12:13,70415-11-24 16:12:13  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@1bf5df6a
2015-11-24 16:12:13,70415-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@27ac9928
2015-11-24 16:12:13,70415-11-24 16:12:13  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@4036917e
2015-11-24 16:12:13,70415-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@d738a2
2015-11-24 16:12:13,70515-11-24 16:12:13  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [clob] overrides previous : org.hibernate.type.ClobType@3fabb84d
2015-11-24 16:12:13,70515-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@d738a2
2015-11-24 16:12:13,70515-11-24 16:12:13  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@3fabb84d
2015-11-24 16:12:13,70515-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@cec78a1
2015-11-24 16:12:13,70615-11-24 16:12:13  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@48e24332
2015-11-24 16:12:13,70615-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@4f953cc
2015-11-24 16:12:13,70615-11-24 16:12:13  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@6b9b9f57
2015-11-24 16:12:13,70615-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@347b2571
2015-11-24 16:12:13,70615-11-24 16:12:13  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@6d36df08
2015-11-24 16:12:13,70715-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@49d88b78
2015-11-24 16:12:13,70715-11-24 16:12:13  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [blob] overrides previous : org.hibernate.type.BlobType@5f05c0eb
2015-11-24 16:12:13,70715-11-24 16:12:13 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@49d88b78
2015-11-24 16:12:13,70815-11-24 16:12:13  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@5f05c0eb
2015-11-24 16:12:13,71115-11-24 16:12:13 DEBUG (SessionFactoryImpl.java:228 LINE) SessionFactoryImpl.<init> -> Session factory constructed with filter configurations : {}
2015-11-24 16:12:13,71115-11-24 16:12:13 DEBUG (SessionFactoryImpl.java:232 LINE) SessionFactoryImpl.<init> -> instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, sun.boot.library.path=E:\JDK1.7\bin, java.vm.version=23.7-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.cache.use_query_cache=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\workspace\mobile-user, java.runtime.version=1.7.0_17-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=E:\JDK1.7\lib\endorsed, os.arch=amd64, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\gqy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, hibernate.cache.use_second_level_cache=true, sun.jnu.encoding=GBK, hibernate.jdbc.fetch_size=50, java.library.path=E:\JDK1.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\ProgramData\Lenovo\ReadyApps;E:\JDK\bin;E:\JDK\jre\bin;E:\Go\bin;E:\winscp\WinSCP\;E:\maven\apache-maven-3.2.3\bin;C:\Program Files (x86)\DBank\ClickUp;C:\Program Files (x86)\DBank\ClickUp;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\gqy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=after_transaction, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=gqy, java.class.path=G:\workspace\mobile-user\target\test-classes;G:\workspace\mobile-user\target\classes;H:\Respositories2\repository\com\alibaba\fastjson\1.2.4\fastjson-1.2.4.jar;H:\Respositories2\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;H:\Respositories2\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;H:\Respositories2\repository\io\netty\netty\4.0.0.Alpha8\netty-4.0.0.Alpha8.jar;H:\Respositories2\repository\jstl\jstl\1.2\jstl-1.2.jar;H:\Respositories2\repository\org\springframework\spring-aop\3.2.0.RELEASE\spring-aop-3.2.0.RELEASE.jar;H:\Respositories2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;H:\Respositories2\repository\org\springframework\spring-beans\3.2.0.RELEASE\spring-beans-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context\3.2.0.RELEASE\spring-context-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-expression\3.2.0.RELEASE\spring-expression-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context-support\3.2.0.RELEASE\spring-context-support-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-core\3.2.0.RELEASE\spring-core-3.2.0.RELEASE.jar;H:\Respositories2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;H:\Respositories2\repository\org\springframework\spring-jdbc\3.2.0.RELEASE\spring-jdbc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-orm\3.2.0.RELEASE\spring-orm-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-tx\3.2.0.RELEASE\spring-tx-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-web\3.2.0.RELEASE\spring-web-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-webmvc\3.2.0.RELEASE\spring-webmvc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\amqp\spring-amqp\1.2.0.RELEASE\spring-amqp-1.2.0.RELEASE.jar;H:\Respositories2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;H:\Respositories2\repository\com\fasterxml\jackson\core\jackson-core\2.1.0\jackson-core-2.1.0.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.13\jackson-jaxrs-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-xc\1.9.13\jackson-xc-1.9.13.jar;H:\Respositories2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;H:\Respositories2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;H:\Respositories2\repository\mysql\mysql-connector-java\5.1.25\mysql-connector-java-5.1.25.jar;H:\Respositories2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;H:\Respositories2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;H:\Respositories2\repository\org\aspectj\aspectjweaver\1.6.4\aspectjweaver-1.6.4.jar;H:\Respositories2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;H:\Respositories2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;H:\Respositories2\repository\commons-beanutils\commons-beanutils\1.9.0\commons-beanutils-1.9.0.jar;H:\Respositories2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;H:\Respositories2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;H:\Respositories2\repository\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;H:\Respositories2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;H:\Respositories2\repository\org\mybatis\mybatis-spring\1.2.0\mybatis-spring-1.2.0.jar;H:\Respositories2\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;H:\Respositories2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar;H:\Respositories2\repository\org\json\json\20090211\json-20090211.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-lgpl\1.8.1\jackson-core-lgpl-1.8.1.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-lgpl\1.8.1\jackson-mapper-lgpl-1.8.1.jar;H:\Respositories2\repository\org\freemarker\freemarker\2.3.16\freemarker-2.3.16.jar;H:\Respositories2\repository\opensymphony\sitemesh\2.4.2\sitemesh-2.4.2.jar;H:\Respositories2\repository\org\testng\testng\5.9\testng-5.9-jdk15.jar;H:\Respositories2\repository\junit\junit\4.7\junit-4.7.jar;H:\Respositories2\repository\cglib\cglib-asm\1.0\cglib-asm-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-core\1.0\jxls-core-1.0.jar;H:\Respositories2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;H:\Respositories2\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml\3.7\poi-ooxml-3.7.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml-schemas\3.7\poi-ooxml-schemas-3.7.jar;H:\Respositories2\repository\org\apache\xmlbeans\xmlbeans\2.3.0\xmlbeans-2.3.0.jar;H:\Respositories2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;H:\Respositories2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-reader\1.0\jxls-reader-1.0.jar;H:\Respositories2\repository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient\4.3.2\httpclient-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient-cache\4.3.2\httpclient-cache-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpmime\4.3.2\httpmime-4.3.2.jar;H:\Respositories2\repository\org\quartz-scheduler\quartz\1.8.6\quartz-1.8.6.jar;H:\Respositories2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;H:\Respositories2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;H:\Respositories2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;H:\Respositories2\repository\net\coobird\thumbnailator\0.4.7\thumbnailator-0.4.7.jar;H:\Respositories2\repository\jcifs\jcifs\1.3.17\jcifs-1.3.17.jar;H:\Respositories2\repository\org\apache\poi\poi\3.10.1\poi-3.10.1.jar;H:\Respositories2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;H:\Respositories2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;H:\Respositories2\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;H:\Respositories2\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;H:\Respositories2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;H:\Respositories2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;H:\Respositories2\repository\net\sf\supercsv\super-csv\2.2.0\super-csv-2.2.0.jar;H:\Respositories2\repository\org\bouncycastle\bcprov-jdk16\1.45\bcprov-jdk16-1.45.jar;H:\Respositories2\repository\jdom\jdom\1.0\jdom-1.0.jar;H:\Respositories2\repository\com\belerweb\pinyin4j\2.5.0\pinyin4j-2.5.0.jar;H:\Respositories2\repository\org\glassfish\jersey\ext\jersey-spring3\2.4.1\jersey-spring3-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-server\2.4.1\jersey-server-2.4.1.jar;H:\Respositories2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-api\2.2.0-b21\hk2-api-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\javax.inject\2.2.0-b21\javax.inject-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-locator\2.2.0-b21\hk2-locator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\asm-all-repackaged\2.2.0-b21\asm-all-repackaged-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\cglib\2.2.0-b21\cglib-2.2.0-b21.jar;H:\Respositories2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;H:\Respositories2\repository\org\glassfish\jersey\containers\jersey-container-servlet-core\2.4.1\jersey-container-servlet-core-2.4.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2\2.2.0-b21\hk2-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-utils\2.2.0-b21\hk2-utils-2.2.0-b21.jar;H:\Respositories2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;H:\Respositories2\repository\org\glassfish\hk2\config-types\2.2.0-b21\config-types-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\core\2.2.0-b21\core-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-config\2.2.0-b21\hk2-config-2.2.0-b21.jar;H:\Respositories2\repository\org\jvnet\tiger-types\1.4\tiger-types-1.4.jar;H:\Respositories2\repository\org\glassfish\hk2\external\bean-validator\2.2.0-b21\bean-validator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-runlevel\2.2.0-b21\hk2-runlevel-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\class-model\2.2.0-b21\class-model-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\spring-bridge\2.2.0-b21\spring-bridge-2.2.0-b21.jar;H:\Respositories2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\2.4.1\jersey-media-json-jackson-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-common\2.4.1\jersey-common-2.4.1.jar;H:\Respositories2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;H:\Respositories2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.1\osgi-resource-locator-1.0.1.jar;H:\Respositories2\repository\org\codehaus\groovy\groovy-all\2.2.0\groovy-all-2.2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\providers\jersey-test-framework-provider-external\2.5.1\jersey-test-framework-provider-external-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\jersey-test-framework-core\2.5.1\jersey-test-framework-core-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-client\2.5.1\jersey-client-2.5.1.jar;H:\Respositories2\repository\org\springframework\spring-test\3.2.6.RELEASE\spring-test-3.2.6.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session\1.0.1.RELEASE\spring-session-1.0.1.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session-data-redis\1.0.0.RELEASE\spring-session-data-redis-1.0.0.RELEASE.jar;H:\Respositories2\repository\org\apache\commons\commons-pool2\2.2\commons-pool2-2.2.jar;H:\Respositories2\repository\redis\clients\jedis\2.6.0\jedis-2.6.0.jar;H:\Respositories2\repository\org\springframework\data\spring-data-redis\1.4.1.RELEASE\spring-data-redis-1.4.1.RELEASE.jar;H:\Respositories2\repository\net\sf\ehcache\ehcache-core\2.6.11\ehcache-core-2.6.11.jar;H:\Respositories2\repository\org\hibernate3\hibernate3\3.0.0\hibernate3-3.0.0.jar;H:\Respositories2\repository\com\google\code\gson\gson\2.1\gson-2.1.jar;H:\Respositories2\repository\org\apache\openejb\javaee-api\5.0-1\javaee-api-5.0-1.jar;H:\Respositories2\repository\com\alibaba\druid\1.0.2\druid-1.0.2.jar;H:\Respositories2\repository\javax\faces\jsf-impl\1.2_04\jsf-impl-1.2_04.jar;H:\Respositories2\repository\javax\faces\jsf-api\1.2_04\jsf-api-1.2_04.jar;H:\Respositories2\repository\javax\transaction\jta\1.1\jta-1.1.jar;H:\Respositories2\repository\org\apache\ws\wss4j\1.5.1\wss4j-1.5.1.jar;H:\Respositories2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;H:\Respositories2\repository\hibernate\antlr\2.7.5H3\antlr-2.7.5H3.jar;H:\Respositories2\repository\javassist\javassist\3.9.0.GA\javassist-3.9.0.GA.jar;H:\Respositories2\repository\com\fx\mobile\mobile-model\0.0.1-SNAPSHOT\mobile-model-0.0.1-SNAPSHOT.jar;H:\Respositories2\repository\com\fx\mobile\mobile-core\0.0.1\mobile-core-0.0.1.jar;H:\Respositories2\repository\Decoder\sun.misc.BASE64Decoder\1.0.0\sun.misc.BASE64Decoder-1.0.0.jar;H:\Respositories2\repository\marketingFile\marketingFile\0.0.1\marketingFile-0.0.1.jar;H:\Respositories2\repository\com\qq\connect\Sdk4J\1.0\Sdk4J-1.0.jar;H:\Respositories2\repository\org\apache\commons\commons-io\1.3.2\commons-io-1.3.2.jar;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.query.substitutions=true 'Y', false 'N', hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=E:\JDK1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60819 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.fx.mobile.junit.UserOperateDaoImplTest, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_17, java.ext.dirs=E:\JDK1.7\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=E:\JDK1.7\lib\resources.jar;E:\JDK1.7\lib\rt.jar;E:\JDK1.7\lib\sunrsasign.jar;E:\JDK1.7\lib\jsse.jar;E:\JDK1.7\lib\jce.jar;E:\JDK1.7\lib\charsets.jar;E:\JDK1.7\lib\jfr.jar;E:\JDK1.7\classes, java.vendor=Oracle Corporation, hibernate.jdbc.batch_size=25, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
