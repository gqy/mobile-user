2015-11-24 16:12:13,79915-11-24 16:12:13 DEBUG (CacheManager.java:684 LINE) CacheManager.parseConfiguration -> Configuring ehcache from classpath.
2015-11-24 16:12:13,80915-11-24 16:12:13 DEBUG (ConfigurationFactory.java:132 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from ehcache.xml found in the classpath: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 16:12:13,81015-11-24 16:12:13 DEBUG (ConfigurationFactory.java:98 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from URL: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 16:12:13,81015-11-24 16:12:13 DEBUG (ConfigurationFactory.java:150 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from InputStream
2015-11-24 16:12:13,85915-11-24 16:12:13 DEBUG (DiskStoreConfiguration.java:141 LINE) DiskStoreConfiguration.translatePath -> Disk Store Path: C:\Users\gqy\AppData\Local\Temp\
2015-11-24 16:12:13,89815-11-24 16:12:13 DEBUG (PropertyUtil.java:88 LINE) PropertyUtil.parseProperties -> propertiesString is null.
2015-11-24 16:12:13,95115-11-24 16:12:13 DEBUG (ConfigurationHelper.java:185 LINE) ConfigurationHelper.createCacheManagerEventListener -> No CacheManagerEventListenerFactory class specified. Skipping...
2015-11-24 16:12:14,00215-11-24 16:12:14 DEBUG (Cache.java:955 LINE) Cache.createBootstrapCacheLoader -> No BootstrapCacheLoaderFactory class specified. Skipping...
2015-11-24 16:12:14,00315-11-24 16:12:14 DEBUG (Cache.java:929 LINE) Cache.createCacheWriter -> CacheWriter factory not configured. Skipping...
2015-11-24 16:12:14,00615-11-24 16:12:14 DEBUG (ConfigurationHelper.java:96 LINE) ConfigurationHelper.createCacheExceptionHandler -> No CacheExceptionHandlerFactory class specified. Skipping...
2015-11-24 16:12:14,04515-11-24 16:12:14 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:12:14,04615-11-24 16:12:14 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:12:14,04715-11-24 16:12:14 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:12:14,29715-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.NoteNumbRecord
2015-11-24 16:12:14,29815-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from note_numb_record where id =?
2015-11-24 16:12:14,29815-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select notenumbre_.id, notenumbre_.node_numb as node2_1_ from note_numb_record notenumbre_ where notenumbre_.id=?
2015-11-24 16:12:14,29815-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into note_numb_record (node_numb, id) values (?, ?)
2015-11-24 16:12:14,29915-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update note_numb_record set node_numb=? where id=?
2015-11-24 16:12:14,29915-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from note_numb_record where id=?
2015-11-24 16:12:14,29915-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into note_numb_record (node_numb) values (?)
2015-11-24 16:12:14,30315-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.CrashLog
2015-11-24 16:12:14,30415-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from marketing1.crash_log where id =?
2015-11-24 16:12:14,30415-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select crashlog_.id, crashlog_.url as url2_, crashlog_.describes as describes2_, crashlog_.addDate as addDate2_ from marketing1.crash_log crashlog_ where crashlog_.id=?
2015-11-24 16:12:14,30415-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into marketing1.crash_log (url, describes, addDate, id) values (?, ?, ?, ?)
2015-11-24 16:12:14,30515-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update marketing1.crash_log set url=?, describes=?, addDate=? where id=?
2015-11-24 16:12:14,30515-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from marketing1.crash_log where id=?
2015-11-24 16:12:14,30515-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into marketing1.crash_log (url, describes, addDate) values (?, ?, ?)
2015-11-24 16:12:14,32415-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.UserOperate
2015-11-24 16:12:14,32415-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from user_operate where id =?
2015-11-24 16:12:14,32615-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select useroperat_.id, useroperat_.userName as userName0_, useroperat_.userPassword as userPass3_0_, useroperat_.phicomm_id as phicomm4_0_, useroperat_.userEmail as userEmail0_, useroperat_.user_PhoneNumb as user6_0_, useroperat_.userType as userType0_, useroperat_.isChecked as isChecked0_, useroperat_.nickname as nickname0_, useroperat_.figureurl as figureurl0_, useroperat_.sex as sex0_, useroperat_.province as province0_, useroperat_.city as city0_, useroperat_.birthday as birthday0_, useroperat_.open_id as open15_0_, useroperat_.open_key as open16_0_, useroperat_.access_token as access17_0_, useroperat_.expirese_in as expirese18_0_, useroperat_.devinfo as devinfo0_, useroperat_.userinfo as userinfo0_, useroperat_.openqq as openqq0_, useroperat_.openqqinfo as openqqinfo0_, useroperat_.opensina as opensina0_, useroperat_.opensinainfo as opensin24_0_, useroperat_.createTime as createTime0_, useroperat_.updateTime as updateTime0_, useroperat_.lastLoginTime as lastLog27_0_ from user_operate useroperat_ where useroperat_.id=?
2015-11-24 16:12:14,32615-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 16:12:14,32615-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update user_operate set userName=?, userPassword=?, phicomm_id=?, userEmail=?, user_PhoneNumb=?, userType=?, isChecked=?, nickname=?, figureurl=?, sex=?, province=?, city=?, birthday=?, open_id=?, open_key=?, access_token=?, expirese_in=?, devinfo=?, userinfo=?, openqq=?, openqqinfo=?, opensina=?, opensinainfo=?, createTime=?, updateTime=?, lastLoginTime=? where id=?
2015-11-24 16:12:14,32615-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from user_operate where id=?
2015-11-24 16:12:14,32715-11-24 16:12:14 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 16:12:14,40015-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [NONE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:12:14,40015-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:12:14,40115-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:12:14,40115-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE_NOWAIT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:12:14,40115-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [FORCE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:12:14,40215-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? lock in share mode
2015-11-24 16:12:14,40215-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_WRITE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:12:14,40215-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:12:14,40315-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:12:14,40315-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:12:14,41715-11-24 16:12:14 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:12:14,41815-11-24 16:12:14 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:12:14,42015-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [NONE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:12:14,42115-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:12:14,42115-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:12:14,42115-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE_NOWAIT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:12:14,42215-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [FORCE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:12:14,42215-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? lock in share mode
2015-11-24 16:12:14,42215-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_WRITE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:12:14,42315-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:12:14,42315-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:12:14,42315-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:12:14,42415-11-24 16:12:14 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:12:14,42415-11-24 16:12:14 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:12:14,42515-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [NONE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:12:14,42515-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:12:14,42615-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:12:14,42615-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE_NOWAIT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:12:14,42715-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [FORCE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:12:14,42715-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? lock in share mode
2015-11-24 16:12:14,42815-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_WRITE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:12:14,42815-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:12:14,42915-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:12:14,42915-11-24 16:12:14 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:12:14,43015-11-24 16:12:14 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:12:14,43015-11-24 16:12:14 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:12:14,43215-11-24 16:12:14 DEBUG (SessionFactoryObjectFactory.java:61 LINE) SessionFactoryObjectFactory.<clinit> -> initializing class SessionFactoryObjectFactory
2015-11-24 16:12:14,43415-11-24 16:12:14 DEBUG (SessionFactoryObjectFactory.java:99 LINE) SessionFactoryObjectFactory.addInstance -> registered: 46b46160-24de-40dc-8092-bce915dd955d (unnamed)
2015-11-24 16:12:14,43415-11-24 16:12:14  INFO (SessionFactoryObjectFactory.java:105 LINE) SessionFactoryObjectFactory.addInstance -> Not binding factory to JNDI, no JNDI name configured
2015-11-24 16:12:14,43415-11-24 16:12:14 DEBUG (SessionFactoryImpl.java:369 LINE) SessionFactoryImpl.<init> -> instantiated session factory
2015-11-24 16:12:14,43915-11-24 16:12:14  INFO (SchemaUpdate.java:155 LINE) SchemaUpdate.execute -> Running hbm2ddl schema update
2015-11-24 16:12:14,44015-11-24 16:12:14  INFO (SchemaUpdate.java:167 LINE) SchemaUpdate.execute -> fetching database metadata
2015-11-24 16:12:14,44215-11-24 16:12:14  INFO (SchemaUpdate.java:179 LINE) SchemaUpdate.execute -> updating schema
2015-11-24 16:12:14,44315-11-24 16:12:14 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:12:14,44315-11-24 16:12:14 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:12:14,44415-11-24 16:12:14 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:12:14,44415-11-24 16:12:14 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:12:14,44415-11-24 16:12:14 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:12:14,44515-11-24 16:12:14 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:12:14,44515-11-24 16:12:14 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:12:14,44515-11-24 16:12:14 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:12:14,44615-11-24 16:12:14 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:12:14,44715-11-24 16:12:14 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:12:14,44815-11-24 16:12:14 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:12:14,44915-11-24 16:12:14 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:12:14,53615-11-24 16:12:14  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 16:12:14,53715-11-24 16:12:14 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:12:14,59315-11-24 16:12:14  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.note_numb_record
2015-11-24 16:12:14,59315-11-24 16:12:14  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [id, node_numb]
2015-11-24 16:12:14,59415-11-24 16:12:14  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 16:12:14,59415-11-24 16:12:14  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 16:12:14,61115-11-24 16:12:14  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.user_operate
2015-11-24 16:12:14,61215-11-24 16:12:14  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [birthday, sex, updatetime, open_id, openqq, opensina, userinfo, user_phonenumb, city, createtime, id, userpassword, username, lastlogintime, province, opensinainfo, figureurl, phicomm_id, open_key, access_token, nickname, usertype, ischecked, openqqinfo, useremail, devinfo, expirese_in]
2015-11-24 16:12:14,61215-11-24 16:12:14  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 16:12:14,61215-11-24 16:12:14  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 16:12:14,61415-11-24 16:12:14  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 16:12:14,61415-11-24 16:12:14 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:12:14,61515-11-24 16:12:14 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:12:14,61615-11-24 16:12:14 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:12:14,61615-11-24 16:12:14 DEBUG (SchemaUpdate.java:203 LINE) SchemaUpdate.execute -> create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 16:12:14,61815-11-24 16:12:14 ERROR (SchemaUpdate.java:212 LINE) SchemaUpdate.execute -> Unsuccessful: create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 16:12:14,61815-11-24 16:12:14 ERROR (SchemaUpdate.java:213 LINE) SchemaUpdate.execute -> Unknown database 'marketing1'
2015-11-24 16:12:14,61915-11-24 16:12:14  INFO (SchemaUpdate.java:217 LINE) SchemaUpdate.execute -> schema update complete
2015-11-24 16:12:14,62215-11-24 16:12:14  INFO (UpdateTimestampsCache.java:57 LINE) UpdateTimestampsCache.<init> -> starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:12:14,62415-11-24 16:12:14  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
2015-11-24 16:12:14,65015-11-24 16:12:14 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:12:14,66115-11-24 16:12:14 DEBUG (DiskStorePathManager.java:169 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Using diskstore path C:\Users\gqy\AppData\Local\Temp
2015-11-24 16:12:14,66115-11-24 16:12:14 DEBUG (DiskStorePathManager.java:170 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Holding exclusive lock on C:\Users\gqy\AppData\Local\Temp\.ehcache-diskstore.lock
2015-11-24 16:12:14,66215-11-24 16:12:14 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 16:12:14,66315-11-24 16:12:14 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:12:14,67615-11-24 16:12:14 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:12:14,67715-11-24 16:12:14 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:12:14,68615-11-24 16:12:14 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:12:14,68715-11-24 16:12:14 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.UpdateTimestampsCache'.
2015-11-24 16:12:14,68715-11-24 16:12:14 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:12:14,69015-11-24 16:12:14  INFO (StandardQueryCache.java:76 LINE) StandardQueryCache.<init> -> starting query cache at region: org.hibernate.cache.StandardQueryCache
2015-11-24 16:12:14,69115-11-24 16:12:14  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
2015-11-24 16:12:14,69215-11-24 16:12:14 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.StandardQueryCache
2015-11-24 16:12:14,69415-11-24 16:12:14 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 16:12:14,70515-11-24 16:12:14 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:12:14,70615-11-24 16:12:14 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:12:14,70715-11-24 16:12:14 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:12:14,70815-11-24 16:12:14 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.StandardQueryCache
2015-11-24 16:12:14,70915-11-24 16:12:14 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.StandardQueryCache'.
2015-11-24 16:12:14,70915-11-24 16:12:14 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.StandardQueryCache
2015-11-24 16:12:14,71015-11-24 16:12:14 DEBUG (SessionFactoryImpl.java:539 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named HQL queries
2015-11-24 16:12:14,71015-11-24 16:12:14 DEBUG (SessionFactoryImpl.java:559 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named SQL queries
2015-11-24 16:12:14,71115-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:14,74415-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'sessionFactory'
2015-11-24 16:12:14,74615-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:14,75615-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userOperateDao'
2015-11-24 16:12:14,75715-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:14,75815-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userOperateDao'
2015-11-24 16:12:14,75915-11-24 16:12:14 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userInterfaceDao'
2015-11-24 16:12:14,75915-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userInterfaceDao'
2015-11-24 16:12:14,76015-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userInterfaceDao' to allow for resolving potential circular references
2015-11-24 16:12:14,76815-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:12:14,76915-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userInterfaceDao'
2015-11-24 16:12:14,76915-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:14,77015-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userInterfaceDao'
2015-11-24 16:12:14,77115-11-24 16:12:14 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'noteNumRecordDao'
2015-11-24 16:12:14,77115-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'noteNumRecordDao'
2015-11-24 16:12:14,77215-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'noteNumRecordDao' to allow for resolving potential circular references
2015-11-24 16:12:14,77815-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:12:14,77915-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'noteNumRecordDao'
2015-11-24 16:12:14,77915-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:14,78015-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'noteNumRecordDao'
2015-11-24 16:12:14,78015-11-24 16:12:14 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'crashLogDao'
2015-11-24 16:12:14,78015-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'crashLogDao'
2015-11-24 16:12:14,78115-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'crashLogDao' to allow for resolving potential circular references
2015-11-24 16:12:14,78715-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:12:14,78815-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'crashLogDao'
2015-11-24 16:12:14,78915-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:14,79015-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'crashLogDao'
2015-11-24 16:12:14,79015-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'dataSource'
2015-11-24 16:12:14,79015-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:12:14,79015-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:12:14,79015-11-24 16:12:14 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:12:14,79115-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:12:14,79315-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2015-11-24 16:12:14,79815-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:12:14,79915-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:12:14,79915-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:12:14,79915-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:14,79915-11-24 16:12:14 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'transactionManager'
2015-11-24 16:12:14,79915-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'transactionManager'
2015-11-24 16:12:14,80915-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-11-24 16:12:14,81515-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:12:14,81615-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-11-24 16:12:14,82215-11-24 16:12:14  INFO (HibernateTransactionManager.java:415 LINE) HibernateTransactionManager.afterPropertiesSet -> Using DataSource [org.apache.commons.dbcp.BasicDataSource@2b54a721] of Hibernate SessionFactory for HibernateTransactionManager
2015-11-24 16:12:14,82215-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:14,82315-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'transactionManager'
2015-11-24 16:12:14,82415-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:12:14,82415-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:12:14,82415-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:12:14,82415-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:12:14,82415-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:12:14,82415-11-24 16:12:14 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'operateService'
2015-11-24 16:12:14,82415-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'operateService'
2015-11-24 16:12:14,83115-11-24 16:12:14 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserOperateServiceImp]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 16:12:14,83215-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'operateService' to allow for resolving potential circular references
2015-11-24 16:12:14,83515-11-24 16:12:14 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'operateService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 16:12:14,90215-11-24 16:12:14 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'fileRemote'
2015-11-24 16:12:14,90315-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'fileRemote'
2015-11-24 16:12:14,90615-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'fileRemote' to allow for resolving potential circular references
2015-11-24 16:12:14,92015-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'fileRemote'
2015-11-24 16:12:14,93215-11-24 16:12:14 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static
2015-11-24 16:12:14,93715-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'fileRemote'
2015-11-24 16:12:14,93815-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 16:12:14,93915-11-24 16:12:14 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'operateService' to bean named 'userOperateDao'
2015-11-24 16:12:14,94015-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:14,94815-11-24 16:12:14 DEBUG (AbstractFallbackTransactionAttributeSource.java:106 LINE) AbstractFallbackTransactionAttributeSource.getTransactionAttribute -> Adding transactional method 'registAccount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '',-java.lang.Throwable
2015-11-24 16:12:14,95015-11-24 16:12:14 DEBUG (AbstractAutoProxyCreator.java:534 LINE) AbstractAutoProxyCreator.buildAdvisors -> Creating implicit proxy for bean 'operateService' with 0 common interceptors and 1 specific interceptors
2015-11-24 16:12:14,95015-11-24 16:12:14 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.fx.mobile.user.service.impl.UserOperateServiceImp@74e0da2d]
2015-11-24 16:12:14,95515-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'operateService'
2015-11-24 16:12:14,95615-11-24 16:12:14 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'SpringContextUtil'
2015-11-24 16:12:14,95615-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'SpringContextUtil'
2015-11-24 16:12:14,95715-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'SpringContextUtil' to allow for resolving potential circular references
2015-11-24 16:12:14,96615-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:14,97115-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'SpringContextUtil'
2015-11-24 16:12:14,97115-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'fileRemote'
2015-11-24 16:12:14,97215-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'corePropertyConfigurer'
2015-11-24 16:12:14,97315-11-24 16:12:14 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userinterfaceService'
2015-11-24 16:12:14,97315-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userinterfaceService'
2015-11-24 16:12:14,97415-11-24 16:12:14 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserInterfaceServiceImpl]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 16:12:14,97415-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userinterfaceService' to allow for resolving potential circular references
2015-11-24 16:12:14,97715-11-24 16:12:14 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'userinterfaceService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 16:12:14,97815-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userInterfaceDao'
2015-11-24 16:12:14,97815-11-24 16:12:14 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'userinterfaceService' to bean named 'userInterfaceDao'
2015-11-24 16:12:14,97815-11-24 16:12:14 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:14,97915-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userinterfaceService'
2015-11-24 16:12:14,98015-11-24 16:12:14 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'urlProperties'
2015-11-24 16:12:14,98015-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'urlProperties'
2015-11-24 16:12:14,98015-11-24 16:12:14 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'urlProperties' to allow for resolving potential circular references
2015-11-24 16:12:15,00115-11-24 16:12:15 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:15,00215-11-24 16:12:15 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'urlProperties'
2015-11-24 16:12:15,00215-11-24 16:12:15 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:12:15,03115-11-24 16:12:15 DEBUG (AbstractApplicationContext.java:858 LINE) AbstractApplicationContext.initLifecycleProcessor -> Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@60dac573]
2015-11-24 16:12:15,03315-11-24 16:12:15 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 16:12:15,03515-11-24 16:12:15 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-11-24 16:12:15,03615-11-24 16:12:15 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-11-24 16:12:15,03615-11-24 16:12:15 DEBUG (PropertySourcesPropertyResolver.java:93 LINE) PropertySourcesPropertyResolver.getProperty -> Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-11-24 16:12:15,03715-11-24 16:12:15 DEBUG (CacheAwareContextLoaderDelegate.java:93 LINE) CacheAwareContextLoaderDelegate.loadContext -> Storing ApplicationContext in cache under key [[MergedContextConfiguration@12bfaa9a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 16:12:15,04515-11-24 16:12:15 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 16:12:15,04515-11-24 16:12:15 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 16:12:15,04615-11-24 16:12:15 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:15,06015-11-24 16:12:15 DEBUG (SessionFactoryUtils.java:322 LINE) SessionFactoryUtils.doGetSession -> Opening Hibernate Session
2015-11-24 16:12:15,11115-11-24 16:12:15 DEBUG (SessionImpl.java:265 LINE) SessionImpl.<init> -> opened session at timestamp: 5932452802809856
2015-11-24 16:12:15,21715-11-24 16:12:15 DEBUG (QueryTranslatorImpl.java:274 LINE) QueryTranslatorImpl.parse -> parse() - HQL: from com.fx.mobile.model.UserOperate where (userPhoneNumb=? or userName=?  or userEmail=?)  and userPassword=?
2015-11-24 16:12:15,23515-11-24 16:12:15 DEBUG (QueryTranslatorImpl.java:293 LINE) QueryTranslatorImpl.showHqlAst -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'fx'
    |           |  |  \-[IDENT] Node: 'mobile'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'UserOperate'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[OR] Node: 'or'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'userPhoneNumb'
          |  |  |  \-[PARAM] Node: '?'
          |  |  \-[EQ] Node: '='
          |  |     +-[IDENT] Node: 'userName'
          |  |     \-[PARAM] Node: '?'
          |  \-[EQ] Node: '='
          |     +-[IDENT] Node: 'userEmail'
          |     \-[PARAM] Node: '?'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'userPassword'
             \-[PARAM] Node: '?'

2015-11-24 16:12:15,23515-11-24 16:12:15 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:12:15,29215-11-24 16:12:15 DEBUG (HqlSqlBaseWalker.java:111 LINE) HqlSqlBaseWalker.beforeStatement -> select << begin [level=1, statement=select]
2015-11-24 16:12:15,31315-11-24 16:12:15 DEBUG (FromElement.java:157 LINE) FromElement.doInitialize -> FromClause{level=1} :  com.fx.mobile.model.UserOperate (no alias) -> useroperat0_
2015-11-24 16:12:15,31715-11-24 16:12:15 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:12:15,33215-11-24 16:12:15 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userPhoneNumb -> org.hibernate.type.StringType@c36d74a
2015-11-24 16:12:15,33515-11-24 16:12:15 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userPhoneNumb -> useroperat0_.user_PhoneNumb
2015-11-24 16:12:15,38715-11-24 16:12:15 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:12:15,38815-11-24 16:12:15 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userName -> org.hibernate.type.StringType@c36d74a
2015-11-24 16:12:15,38815-11-24 16:12:15 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userName -> useroperat0_.userName
2015-11-24 16:12:15,38915-11-24 16:12:15 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:12:15,38915-11-24 16:12:15 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userEmail -> org.hibernate.type.StringType@c36d74a
2015-11-24 16:12:15,39015-11-24 16:12:15 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userEmail -> useroperat0_.userEmail
2015-11-24 16:12:15,39015-11-24 16:12:15 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:12:15,39015-11-24 16:12:15 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userPassword -> org.hibernate.type.StringType@c36d74a
2015-11-24 16:12:15,39015-11-24 16:12:15 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userPassword -> useroperat0_.userPassword
2015-11-24 16:12:15,39115-11-24 16:12:15 DEBUG (HqlSqlBaseWalker.java:117 LINE) HqlSqlBaseWalker.beforeStatementCompletion -> select : finishing up [level=1, statement=select]
2015-11-24 16:12:15,39115-11-24 16:12:15 DEBUG (HqlSqlWalker.java:625 LINE) HqlSqlWalker.processQuery -> processQuery() :  ( SELECT ( FromClause{level=1} user_operate useroperat0_ ) ( where ( and ( or ( or ( = ( useroperat0_.user_PhoneNumb {synthetic-alias} userPhoneNumb ) ? ) ( = ( useroperat0_.userName {synthetic-alias} userName ) ? ) ) ( = ( useroperat0_.userEmail {synthetic-alias} userEmail ) ? ) ) ( = ( useroperat0_.userPassword {synthetic-alias} userPassword ) ? ) ) ) )
2015-11-24 16:12:15,39815-11-24 16:12:15 DEBUG (HqlSqlWalker.java:868 LINE) HqlSqlWalker.createSelectClauseFromFromClause -> Derived SELECT clause created.
2015-11-24 16:12:15,40315-11-24 16:12:15 DEBUG (JoinProcessor.java:179 LINE) JoinProcessor.addJoinNodes -> Using FROM fragment [user_operate useroperat0_]
2015-11-24 16:12:15,40315-11-24 16:12:15 DEBUG (HqlSqlBaseWalker.java:123 LINE) HqlSqlBaseWalker.afterStatementCompletion -> select >> end [level=1, statement=select]
2015-11-24 16:12:15,40415-11-24 16:12:15 DEBUG (QueryTranslatorImpl.java:260 LINE) QueryTranslatorImpl.analyze -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_operate)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'useroperat0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}}
    |  \-[SQL_TOKEN] SqlFragment: 'useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[useroperat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_operate useroperat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[OR] SqlNode: 'or'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'useroperat0_.user_PhoneNumb' {propertyName=userPhoneNumb,dereferenceType=ALL,propertyPath=userPhoneNumb,path={synthetic-alias}.userPhoneNumb,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'userPhoneNumb' {originalText=userPhoneNumb}
          |  |  |  \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.StringType@c36d74a}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'useroperat0_.userName' {propertyName=userName,dereferenceType=ALL,propertyPath=userName,path={synthetic-alias}.userName,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |  |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          |  |     \-[PARAM] ParameterNode: '?' {ordinal=1, expectedType=org.hibernate.type.StringType@c36d74a}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'useroperat0_.userEmail' {propertyName=userEmail,dereferenceType=ALL,propertyPath=userEmail,path={synthetic-alias}.userEmail,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |  \-[IDENT] IdentNode: 'userEmail' {originalText=userEmail}
          |     \-[PARAM] ParameterNode: '?' {ordinal=2, expectedType=org.hibernate.type.StringType@c36d74a}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'useroperat0_.userPassword' {propertyName=userPassword,dereferenceType=ALL,propertyPath=userPassword,path={synthetic-alias}.userPassword,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'userPassword' {originalText=userPassword}
             \-[PARAM] ParameterNode: '?' {ordinal=3, expectedType=org.hibernate.type.StringType@c36d74a}

2015-11-24 16:12:15,40515-11-24 16:12:15 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:12:15,41715-11-24 16:12:15 DEBUG (QueryTranslatorImpl.java:243 LINE) QueryTranslatorImpl.generate -> HQL: from com.fx.mobile.model.UserOperate where (userPhoneNumb=? or userName=?  or userEmail=?)  and userPassword=?
2015-11-24 16:12:15,41815-11-24 16:12:15 DEBUG (QueryTranslatorImpl.java:244 LINE) QueryTranslatorImpl.generate -> SQL: select useroperat0_.id as id0_, useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_ from user_operate useroperat0_ where (useroperat0_.user_PhoneNumb=? or useroperat0_.userName=? or useroperat0_.userEmail=?) and useroperat0_.userPassword=?
2015-11-24 16:12:15,41815-11-24 16:12:15 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:12:15,43115-11-24 16:12:15 DEBUG (AbstractBatcher.java:410 LINE) AbstractBatcher.logOpenPreparedStatement -> about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-11-24 16:12:15,43115-11-24 16:12:15 DEBUG (ConnectionManager.java:444 LINE) ConnectionManager.openConnection -> opening JDBC connection
2015-11-24 16:12:15,43315-11-24 16:12:15 DEBUG (SQLStatementLogger.java:111 LINE) SQLStatementLogger.logStatement -> 
    select
        useroperat0_.id as id0_,
        useroperat0_.userName as userName0_,
        useroperat0_.userPassword as userPass3_0_,
        useroperat0_.phicomm_id as phicomm4_0_,
        useroperat0_.userEmail as userEmail0_,
        useroperat0_.user_PhoneNumb as user6_0_,
        useroperat0_.userType as userType0_,
        useroperat0_.isChecked as isChecked0_,
        useroperat0_.nickname as nickname0_,
        useroperat0_.figureurl as figureurl0_,
        useroperat0_.sex as sex0_,
        useroperat0_.province as province0_,
        useroperat0_.city as city0_,
        useroperat0_.birthday as birthday0_,
        useroperat0_.open_id as open15_0_,
        useroperat0_.open_key as open16_0_,
        useroperat0_.access_token as access17_0_,
        useroperat0_.expirese_in as expirese18_0_,
        useroperat0_.devinfo as devinfo0_,
        useroperat0_.userinfo as userinfo0_,
        useroperat0_.openqq as openqq0_,
        useroperat0_.openqqinfo as openqqinfo0_,
        useroperat0_.opensina as opensina0_,
        useroperat0_.opensinainfo as opensin24_0_,
        useroperat0_.createTime as createTime0_,
        useroperat0_.updateTime as updateTime0_,
        useroperat0_.lastLoginTime as lastLog27_0_ 
    from
        user_operate useroperat0_ 
    where
        (
            useroperat0_.user_PhoneNumb=? 
            or useroperat0_.userName=? 
            or useroperat0_.userEmail=?
        ) 
        and useroperat0_.userPassword=?
2015-11-24 16:12:15,49115-11-24 16:12:15 DEBUG (AbstractBatcher.java:426 LINE) AbstractBatcher.logOpenResults -> about to open ResultSet (open ResultSets: 0, globally: 0)
2015-11-24 16:12:15,49715-11-24 16:12:15 DEBUG (Loader.java:1322 LINE) Loader.getRow -> result row: EntityKey[com.fx.mobile.model.UserOperate#2]
2015-11-24 16:12:15,50515-11-24 16:12:15 DEBUG (AbstractBatcher.java:433 LINE) AbstractBatcher.logCloseResults -> about to close ResultSet (open ResultSets: 1, globally: 1)
2015-11-24 16:12:15,50615-11-24 16:12:15 DEBUG (AbstractBatcher.java:418 LINE) AbstractBatcher.logClosePreparedStatement -> about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-11-24 16:12:15,50615-11-24 16:12:15 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 16:12:15,50615-11-24 16:12:15 DEBUG (ConnectionManager.java:464 LINE) ConnectionManager.closeConnection -> releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-11-24 16:12:15,50915-11-24 16:12:15 DEBUG (TwoPhaseLoad.java:130 LINE) TwoPhaseLoad.initializeEntity -> resolving associations for [com.fx.mobile.model.UserOperate#2]
2015-11-24 16:12:15,51315-11-24 16:12:15 DEBUG (TwoPhaseLoad.java:255 LINE) TwoPhaseLoad.initializeEntity -> done materializing entity [com.fx.mobile.model.UserOperate#2]
2015-11-24 16:12:15,51315-11-24 16:12:15 DEBUG (StatefulPersistenceContext.java:893 LINE) StatefulPersistenceContext.initializeNonLazyCollections -> initializing non-lazy collections
2015-11-24 16:12:15,51515-11-24 16:12:15 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 16:12:15,51515-11-24 16:12:15 DEBUG (HibernateAccessor.java:389 LINE) HibernateAccessor.flushIfNecessary -> Eagerly flushing Hibernate session
2015-11-24 16:12:15,51615-11-24 16:12:15 DEBUG (AbstractFlushingEventListener.java:134 LINE) AbstractFlushingEventListener.prepareEntityFlushes -> processing flush-time cascades
2015-11-24 16:12:15,51915-11-24 16:12:15 DEBUG (AbstractFlushingEventListener.java:177 LINE) AbstractFlushingEventListener.prepareCollectionFlushes -> dirty checking collections
2015-11-24 16:12:15,52215-11-24 16:12:15 DEBUG (AbstractFlushingEventListener.java:108 LINE) AbstractFlushingEventListener.flushEverythingToExecutions -> Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2015-11-24 16:12:15,52315-11-24 16:12:15 DEBUG (AbstractFlushingEventListener.java:114 LINE) AbstractFlushingEventListener.flushEverythingToExecutions -> Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-11-24 16:12:15,52415-11-24 16:12:15 DEBUG (Printer.java:106 LINE) Printer.toString -> listing entities:
2015-11-24 16:12:15,52515-11-24 16:12:15 DEBUG (Printer.java:113 LINE) Printer.toString -> com.fx.mobile.model.UserOperate{createTime=null, birthday=null, sex=null, accessToken=a75e2666765d54ebe5cfcd8f919d4a40, openqq=null, userPassword=e10adc3949ba59abbe56e057, opensina=null, userEmail=null, userinfo=null, openKey=dbd2a27b2d6b4e0754b8539448fb3377, userType=userSrc, city=null, id=2, isChecked=null, province=null, userName=芳草碧连天, expireseIn=2015-11-23 15:21:49, opensinainfo=null, figureurl=null, lastLoginTime=null, updateTime=null, nickname=null, userPhoneNumb=18251901682, phicommId=124, openqqinfo=null, devinfo=null, openId=6f06d7f4-89ec-47ce-8cc2-7075223f6feb}
2015-11-24 16:12:15,52515-11-24 16:12:15 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 16:12:15,52515-11-24 16:12:15 DEBUG (SessionFactoryUtils.java:800 LINE) SessionFactoryUtils.closeSession -> Closing Hibernate Session
2015-11-24 16:12:15,55115-11-24 16:12:15 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@5d0369f2 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@b20be93, testMethod = getUserByNameAndPass@UserOperateDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@12bfaa9a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 16:12:15,55215-11-24 16:12:15 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:15,55215-11-24 16:12:15 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:15,55215-11-24 16:12:15 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@5d0369f2 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@85646e5, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@12bfaa9a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 16:12:15,55315-11-24 16:12:15 DEBUG (CacheAwareContextLoaderDelegate.java:104 LINE) CacheAwareContextLoaderDelegate.loadContext -> Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@12bfaa9a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 16:12:15,55315-11-24 16:12:15 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 16:12:15,55315-11-24 16:12:15 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 16:12:15,55415-11-24 16:12:15 DEBUG (SessionFactoryUtils.java:322 LINE) SessionFactoryUtils.doGetSession -> Opening Hibernate Session
2015-11-24 16:12:15,55415-11-24 16:12:15 DEBUG (SessionImpl.java:265 LINE) SessionImpl.<init> -> opened session at timestamp: 5932452804829184
2015-11-24 16:12:15,55515-11-24 16:12:15 DEBUG (QueryTranslatorImpl.java:274 LINE) QueryTranslatorImpl.parse -> parse() - HQL: from com.fx.mobile.model.UserOperate where userName='18251901' or userPhoneNumb='18251901'  or userEmail='18251901'
2015-11-24 16:12:15,55715-11-24 16:12:15 DEBUG (QueryTranslatorImpl.java:293 LINE) QueryTranslatorImpl.showHqlAst -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'fx'
    |           |  |  \-[IDENT] Node: 'mobile'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'UserOperate'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'userName'
          |  |  \-[QUOTED_STRING] Node: ''18251901''
          |  \-[EQ] Node: '='
          |     +-[IDENT] Node: 'userPhoneNumb'
          |     \-[QUOTED_STRING] Node: ''18251901''
          \-[EQ] Node: '='
             +-[IDENT] Node: 'userEmail'
             \-[QUOTED_STRING] Node: ''18251901''

2015-11-24 16:12:15,55815-11-24 16:12:15 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:12:15,55815-11-24 16:12:15 DEBUG (HqlSqlBaseWalker.java:111 LINE) HqlSqlBaseWalker.beforeStatement -> select << begin [level=1, statement=select]
2015-11-24 16:12:15,55915-11-24 16:12:15 DEBUG (FromElement.java:157 LINE) FromElement.doInitialize -> FromClause{level=1} :  com.fx.mobile.model.UserOperate (no alias) -> useroperat0_
2015-11-24 16:12:15,56015-11-24 16:12:15 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:12:15,56015-11-24 16:12:15 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userName -> org.hibernate.type.StringType@c36d74a
2015-11-24 16:12:15,56015-11-24 16:12:15 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userName -> useroperat0_.userName
2015-11-24 16:12:15,56115-11-24 16:12:15 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:12:15,56215-11-24 16:12:15 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userPhoneNumb -> org.hibernate.type.StringType@c36d74a
2015-11-24 16:12:15,56215-11-24 16:12:15 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userPhoneNumb -> useroperat0_.user_PhoneNumb
2015-11-24 16:12:15,56215-11-24 16:12:15 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:12:15,56215-11-24 16:12:15 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userEmail -> org.hibernate.type.StringType@c36d74a
2015-11-24 16:12:15,56315-11-24 16:12:15 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userEmail -> useroperat0_.userEmail
2015-11-24 16:12:15,56315-11-24 16:12:15 DEBUG (HqlSqlBaseWalker.java:117 LINE) HqlSqlBaseWalker.beforeStatementCompletion -> select : finishing up [level=1, statement=select]
2015-11-24 16:12:15,56315-11-24 16:12:15 DEBUG (HqlSqlWalker.java:625 LINE) HqlSqlWalker.processQuery -> processQuery() :  ( SELECT ( FromClause{level=1} user_operate useroperat0_ ) ( where ( or ( or ( = ( useroperat0_.userName {synthetic-alias} userName ) '18251901' ) ( = ( useroperat0_.user_PhoneNumb {synthetic-alias} userPhoneNumb ) '18251901' ) ) ( = ( useroperat0_.userEmail {synthetic-alias} userEmail ) '18251901' ) ) ) )
2015-11-24 16:12:15,56315-11-24 16:12:15 DEBUG (HqlSqlWalker.java:868 LINE) HqlSqlWalker.createSelectClauseFromFromClause -> Derived SELECT clause created.
2015-11-24 16:12:15,56415-11-24 16:12:15 DEBUG (JoinProcessor.java:179 LINE) JoinProcessor.addJoinNodes -> Using FROM fragment [user_operate useroperat0_]
2015-11-24 16:12:15,56415-11-24 16:12:15 DEBUG (HqlSqlBaseWalker.java:123 LINE) HqlSqlBaseWalker.afterStatementCompletion -> select >> end [level=1, statement=select]
2015-11-24 16:12:15,56515-11-24 16:12:15 DEBUG (QueryTranslatorImpl.java:260 LINE) QueryTranslatorImpl.analyze -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_operate)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'useroperat0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}}
    |  \-[SQL_TOKEN] SqlFragment: 'useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[useroperat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_operate useroperat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'useroperat0_.userName' {propertyName=userName,dereferenceType=ALL,propertyPath=userName,path={synthetic-alias}.userName,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          |  |  \-[QUOTED_STRING] LiteralNode: ''18251901''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'useroperat0_.user_PhoneNumb' {propertyName=userPhoneNumb,dereferenceType=ALL,propertyPath=userPhoneNumb,path={synthetic-alias}.userPhoneNumb,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |  \-[IDENT] IdentNode: 'userPhoneNumb' {originalText=userPhoneNumb}
          |     \-[QUOTED_STRING] LiteralNode: ''18251901''
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'useroperat0_.userEmail' {propertyName=userEmail,dereferenceType=ALL,propertyPath=userEmail,path={synthetic-alias}.userEmail,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'userEmail' {originalText=userEmail}
             \-[QUOTED_STRING] LiteralNode: ''18251901''

2015-11-24 16:12:15,56515-11-24 16:12:15 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:12:15,56615-11-24 16:12:15 DEBUG (QueryTranslatorImpl.java:243 LINE) QueryTranslatorImpl.generate -> HQL: from com.fx.mobile.model.UserOperate where userName='18251901' or userPhoneNumb='18251901'  or userEmail='18251901'
2015-11-24 16:12:15,56615-11-24 16:12:15 DEBUG (QueryTranslatorImpl.java:244 LINE) QueryTranslatorImpl.generate -> SQL: select useroperat0_.id as id0_, useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_ from user_operate useroperat0_ where useroperat0_.userName='18251901' or useroperat0_.user_PhoneNumb='18251901' or useroperat0_.userEmail='18251901'
2015-11-24 16:12:15,56615-11-24 16:12:15 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:12:15,56715-11-24 16:12:15 DEBUG (AbstractBatcher.java:410 LINE) AbstractBatcher.logOpenPreparedStatement -> about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-11-24 16:12:15,56715-11-24 16:12:15 DEBUG (ConnectionManager.java:444 LINE) ConnectionManager.openConnection -> opening JDBC connection
2015-11-24 16:12:15,56915-11-24 16:12:15 DEBUG (SQLStatementLogger.java:111 LINE) SQLStatementLogger.logStatement -> 
    select
        useroperat0_.id as id0_,
        useroperat0_.userName as userName0_,
        useroperat0_.userPassword as userPass3_0_,
        useroperat0_.phicomm_id as phicomm4_0_,
        useroperat0_.userEmail as userEmail0_,
        useroperat0_.user_PhoneNumb as user6_0_,
        useroperat0_.userType as userType0_,
        useroperat0_.isChecked as isChecked0_,
        useroperat0_.nickname as nickname0_,
        useroperat0_.figureurl as figureurl0_,
        useroperat0_.sex as sex0_,
        useroperat0_.province as province0_,
        useroperat0_.city as city0_,
        useroperat0_.birthday as birthday0_,
        useroperat0_.open_id as open15_0_,
        useroperat0_.open_key as open16_0_,
        useroperat0_.access_token as access17_0_,
        useroperat0_.expirese_in as expirese18_0_,
        useroperat0_.devinfo as devinfo0_,
        useroperat0_.userinfo as userinfo0_,
        useroperat0_.openqq as openqq0_,
        useroperat0_.openqqinfo as openqqinfo0_,
        useroperat0_.opensina as opensina0_,
        useroperat0_.opensinainfo as opensin24_0_,
        useroperat0_.createTime as createTime0_,
        useroperat0_.updateTime as updateTime0_,
        useroperat0_.lastLoginTime as lastLog27_0_ 
    from
        user_operate useroperat0_ 
    where
        useroperat0_.userName='18251901' 
        or useroperat0_.user_PhoneNumb='18251901' 
        or useroperat0_.userEmail='18251901'
2015-11-24 16:12:15,57315-11-24 16:12:15 DEBUG (AbstractBatcher.java:426 LINE) AbstractBatcher.logOpenResults -> about to open ResultSet (open ResultSets: 0, globally: 0)
2015-11-24 16:12:15,57315-11-24 16:12:15 DEBUG (AbstractBatcher.java:433 LINE) AbstractBatcher.logCloseResults -> about to close ResultSet (open ResultSets: 1, globally: 1)
2015-11-24 16:12:15,57315-11-24 16:12:15 DEBUG (AbstractBatcher.java:418 LINE) AbstractBatcher.logClosePreparedStatement -> about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-11-24 16:12:15,57515-11-24 16:12:15 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 16:12:15,57615-11-24 16:12:15 DEBUG (ConnectionManager.java:464 LINE) ConnectionManager.closeConnection -> releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-11-24 16:12:15,57615-11-24 16:12:15 DEBUG (StatefulPersistenceContext.java:893 LINE) StatefulPersistenceContext.initializeNonLazyCollections -> initializing non-lazy collections
2015-11-24 16:12:15,57615-11-24 16:12:15 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 16:12:15,57715-11-24 16:12:15 DEBUG (HibernateAccessor.java:389 LINE) HibernateAccessor.flushIfNecessary -> Eagerly flushing Hibernate session
2015-11-24 16:12:15,57715-11-24 16:12:15 DEBUG (SessionFactoryUtils.java:800 LINE) SessionFactoryUtils.closeSession -> Closing Hibernate Session
2015-11-24 16:12:15,57715-11-24 16:12:15 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@5d0369f2 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@85646e5, testMethod = getListTest@UserOperateDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@12bfaa9a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 16:12:15,57815-11-24 16:12:15 DEBUG (DirtiesContextTestExecutionListener.java:138 LINE) DirtiesContextTestExecutionListener.afterTestClass -> After test class: context [[TestContext@5d0369f2 testClass = UserOperateDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@12bfaa9a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
2015-11-24 16:12:15,60415-11-24 16:12:15  INFO (AbstractApplicationContext.java:1042 LINE) AbstractApplicationContext.doClose -> Closing org.springframework.context.support.GenericApplicationContext@873930e: startup date [Tue Nov 24 16:12:10 CST 2015]; root of context hierarchy
2015-11-24 16:12:15,62615-11-24 16:12:15 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 16:12:15,62715-11-24 16:12:15  INFO (DefaultSingletonBeanRegistry.java:444 LINE) DefaultSingletonBeanRegistry.destroySingletons -> Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@14356788: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 16:12:15,63115-11-24 16:12:15 DEBUG (DefaultSingletonBeanRegistry.java:500 LINE) DefaultSingletonBeanRegistry.destroyBean -> Retrieved dependent beans for bean 'userOperateDao': [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:15,63115-11-24 16:12:15 DEBUG (DisposableBeanAdapter.java:219 LINE) DisposableBeanAdapter.destroy -> Invoking destroy() on bean with name 'sessionFactory'
2015-11-24 16:12:15,63115-11-24 16:12:15  INFO (AbstractSessionFactoryBean.java:223 LINE) AbstractSessionFactoryBean.destroy -> Closing Hibernate SessionFactory
2015-11-24 16:12:15,63115-11-24 16:12:15  INFO (SessionFactoryImpl.java:927 LINE) SessionFactoryImpl.close -> closing
2015-11-24 16:12:15,64915-11-24 16:12:15 DEBUG (DisposableBeanAdapter.java:295 LINE) DisposableBeanAdapter.invokeCustomDestroyMethod -> Invoking destroy method 'close' on bean with name 'dataSource'
2015-11-24 16:12:51,37015-11-24 16:12:51 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 16:12:51,43015-11-24 16:12:51 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@d1735f5 declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 16:12:51,43215-11-24 16:12:51 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:51,43415-11-24 16:12:51 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 16:12:51,50015-11-24 16:12:51 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:51,50115-11-24 16:12:51 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:51,52815-11-24 16:12:51 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:51,52915-11-24 16:12:51 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:51,53215-11-24 16:12:51 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:51,53315-11-24 16:12:51 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:51,53415-11-24 16:12:51 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:51,53415-11-24 16:12:51 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:51,53515-11-24 16:12:51 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:51,53515-11-24 16:12:51 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:51,53715-11-24 16:12:51 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:51,53815-11-24 16:12:51 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:51,54315-11-24 16:12:51 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@4dd290b5 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@3b1a82fd, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 16:12:51,54415-11-24 16:12:51 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 16:12:51,54415-11-24 16:12:51 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 16:12:51,76115-11-24 16:12:51 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:51,76315-11-24 16:12:51 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:51,76615-11-24 16:12:51 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:51,76815-11-24 16:12:51 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:51,79215-11-24 16:12:51 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:51,79315-11-24 16:12:51 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:51,79315-11-24 16:12:51 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:51,79515-11-24 16:12:51 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:51,84415-11-24 16:12:51 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 16:12:51,84415-11-24 16:12:51 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 16:12:51,84915-11-24 16:12:51 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 16:12:51,85115-11-24 16:12:51  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 16:12:51,85615-11-24 16:12:51 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:12:51,88415-11-24 16:12:51 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 16:12:51,89115-11-24 16:12:51 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 16:12:51,89415-11-24 16:12:51 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:12:52,01015-11-24 16:12:52 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:12:52,01915-11-24 16:12:52  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 16:12:52,02215-11-24 16:12:52 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:12:52,02515-11-24 16:12:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:12:52,06315-11-24 16:12:52 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:12:52,07815-11-24 16:12:52  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 16:12:52,08015-11-24 16:12:52 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:12:52,10015-11-24 16:12:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:12:52,16115-11-24 16:12:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 16:12:52,16715-11-24 16:12:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 16:12:52,17315-11-24 16:12:52 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:12:52,19515-11-24 16:12:52 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 16:12:52,23015-11-24 16:12:52  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 16:12:52,23215-11-24 16:12:52 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:12:52,23515-11-24 16:12:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:12:52,26515-11-24 16:12:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 16:12:52,27215-11-24 16:12:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 16:12:52,28315-11-24 16:12:52 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:12:52,33915-11-24 16:12:52  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 16:12:52,34615-11-24 16:12:52  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 16:12:52,39315-11-24 16:12:52 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 16:12:52,39315-11-24 16:12:52 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 16:12:52,39715-11-24 16:12:52 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 16:12:52,42815-11-24 16:12:52 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 16:12:52,52015-11-24 16:12:52 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 16:12:52,52815-11-24 16:12:52 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 16:12:52,53015-11-24 16:12:52 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 16:12:52,53215-11-24 16:12:52 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 16:12:52,54415-11-24 16:12:52  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 16:12:52,54715-11-24 16:12:52  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 16:12:52,54915-11-24 16:12:52 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:12:52,55315-11-24 16:12:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:12:52,57215-11-24 16:12:52 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:12:52,57215-11-24 16:12:52 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 16:12:52,57815-11-24 16:12:52  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@4ad9cb27: startup date [Tue Nov 24 16:12:52 CST 2015]; root of context hierarchy
2015-11-24 16:12:52,57915-11-24 16:12:52 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@4ad9cb27: org.springframework.beans.factory.support.DefaultListableBeanFactory@245a690: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 16:12:52,63315-11-24 16:12:52 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:12:52,63315-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:12:52,69715-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:12:52,70015-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:12:52,78215-11-24 16:12:52 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 16:12:52,78315-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 16:12:52,78715-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 16:12:52,91915-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 16:12:52,91915-11-24 16:12:52  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 16:12:52,92015-11-24 16:12:52  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 16:12:52,92615-11-24 16:12:52  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 16:12:52,93615-11-24 16:12:52 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:12:52,93615-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:12:52,93715-11-24 16:12:52  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 16:12:52,93815-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:12:52,93815-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:12:52,93915-11-24 16:12:52 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:12:52,93915-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:12:52,93915-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:12:52,94015-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:12:52,94015-11-24 16:12:52 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:12:52,94015-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:12:52,94615-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:12:52,94715-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:12:52,94715-11-24 16:12:52 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:12:52,94715-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:12:52,94815-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:12:52,94815-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:12:52,94815-11-24 16:12:52 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:12:52,94915-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:12:52,94915-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 16:12:52,94915-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:12:52,94915-11-24 16:12:52 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:12:52,95015-11-24 16:12:52 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:12:53,02415-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 16:12:53,04315-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:12:53,04915-11-24 16:12:53 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5cd8765b]
2015-11-24 16:12:53,05315-11-24 16:12:53 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@16aca316]
2015-11-24 16:12:53,06015-11-24 16:12:53  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@245a690: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 16:12:53,06115-11-24 16:12:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 16:12:53,06115-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 16:12:53,07515-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 16:12:53,08415-11-24 16:12:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 16:12:53,08515-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 16:12:53,10715-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 16:12:53,12315-11-24 16:12:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 16:12:53,12315-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 16:12:53,29315-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 16:12:53,30415-11-24 16:12:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:53,30515-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:53,30515-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:53,30615-11-24 16:12:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:53,30715-11-24 16:12:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:53,30815-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:53,30815-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:53,30915-11-24 16:12:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:53,31015-11-24 16:12:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:53,31115-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:53,31115-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:53,31215-11-24 16:12:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:53,31515-11-24 16:12:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:53,31615-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:53,31615-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:53,31715-11-24 16:12:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:53,31815-11-24 16:12:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:53,32015-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:53,32115-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:53,32215-11-24 16:12:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:53,33515-11-24 16:12:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:53,33515-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:53,33715-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 16:12:53,36015-11-24 16:12:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:12:53,36115-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:12:53,36315-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 16:12:53,37515-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:12:53,37615-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:53,38215-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 16:12:53,38415-11-24 16:12:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:53,38415-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:53,38915-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:53,39015-11-24 16:12:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:53,39115-11-24 16:12:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:53,39215-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:53,39515-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:53,39715-11-24 16:12:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:53,39815-11-24 16:12:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:53,39915-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:53,40515-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:53,43415-11-24 16:12:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:53,43515-11-24 16:12:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:53,43615-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:53,43715-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:53,43815-11-24 16:12:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:53,44715-11-24 16:12:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:12:53,44815-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:12:53,44915-11-24 16:12:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:12:53,44915-11-24 16:12:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:12:53,45815-11-24 16:12:53 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 16:12:53,57515-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 16:12:53,57615-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 16:12:53,57615-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 16:12:53,57815-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1ffaade5
2015-11-24 16:12:53,58115-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@7377b6fc
2015-11-24 16:12:53,58315-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@1a89ebe0
2015-11-24 16:12:53,60015-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 16:12:53,60115-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 16:12:53,60115-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 16:12:53,60415-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@2008473d
2015-11-24 16:12:53,60615-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@2008473d
2015-11-24 16:12:53,60615-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2008473d
2015-11-24 16:12:53,61015-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 16:12:53,61015-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 16:12:53,61115-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 16:12:53,61315-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 16:12:53,61415-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 16:12:53,61415-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 16:12:53,61715-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 16:12:53,61715-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 16:12:53,64715-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 16:12:53,65115-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 16:12:53,65215-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 16:12:53,65215-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 16:12:53,65615-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 16:12:53,65715-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 16:12:53,65715-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 16:12:53,66115-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@14b89cc2
2015-11-24 16:12:53,66215-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@14b89cc2
2015-11-24 16:12:53,66515-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f3080df
2015-11-24 16:12:53,66615-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f3080df
2015-11-24 16:12:53,66815-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@4564886c
2015-11-24 16:12:53,66915-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@4564886c
2015-11-24 16:12:53,67115-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@6d293c5e
2015-11-24 16:12:53,67215-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d293c5e
2015-11-24 16:12:53,67815-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@405d65c3
2015-11-24 16:12:53,67915-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@405d65c3
2015-11-24 16:12:53,68415-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@297d1d8b
2015-11-24 16:12:53,68515-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@297d1d8b
2015-11-24 16:12:53,68915-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@121812f9
2015-11-24 16:12:53,69015-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@121812f9
2015-11-24 16:12:53,69015-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@121812f9
2015-11-24 16:12:53,69215-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6221a993
2015-11-24 16:12:53,69515-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 16:12:53,69715-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 16:12:53,69715-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 16:12:53,71015-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ab50384
2015-11-24 16:12:53,71215-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@56c3b8b6
2015-11-24 16:12:53,71315-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@56c3b8b6
2015-11-24 16:12:53,71515-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@6ce18074
2015-11-24 16:12:53,71515-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ce18074
2015-11-24 16:12:53,71815-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b73c65e
2015-11-24 16:12:53,71815-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b73c65e
2015-11-24 16:12:53,72015-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@6f7e20ff
2015-11-24 16:12:53,72015-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f7e20ff
2015-11-24 16:12:53,72515-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@38430e80
2015-11-24 16:12:53,72515-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@38430e80
2015-11-24 16:12:53,72615-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@75c4d215
2015-11-24 16:12:53,72815-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@23e5fd87
2015-11-24 16:12:53,73115-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 16:12:53,73115-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 16:12:53,73115-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 16:12:53,73415-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 16:12:53,73415-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 16:12:53,73415-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 16:12:53,73615-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@663d80c9
2015-11-24 16:12:53,73815-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@18f9a7a8
2015-11-24 16:12:53,73815-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@18f9a7a8
2015-11-24 16:12:53,73815-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@18f9a7a8
2015-11-24 16:12:53,74115-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a8a8b1e
2015-11-24 16:12:53,74215-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a8a8b1e
2015-11-24 16:12:53,74315-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a8a8b1e
2015-11-24 16:12:53,74415-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@70ea9f38
2015-11-24 16:12:53,76115-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@597e9be9
2015-11-24 16:12:53,76415-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@597e9be9
2015-11-24 16:12:53,76815-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3948166e
2015-11-24 16:12:53,77015-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1f4f53dd
2015-11-24 16:12:53,78215-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@36162346
2015-11-24 16:12:53,78215-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@36162346
2015-11-24 16:12:53,78415-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@278a1cfb
2015-11-24 16:12:53,78515-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@6f6c1fb0
2015-11-24 16:12:53,78715-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1e78a60e
2015-11-24 16:12:53,78915-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@5c9c2f98
2015-11-24 16:12:53,79515-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@76f294c5
2015-11-24 16:12:53,79615-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76f294c5
2015-11-24 16:12:53,79715-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@609912f5
2015-11-24 16:12:53,79715-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61abc45e
2015-11-24 16:12:53,79815-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@53e9296a
2015-11-24 16:12:53,79815-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@709e192f
2015-11-24 16:12:53,79815-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b87966c
2015-11-24 16:12:53,79915-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@62a49a92
2015-11-24 16:12:53,79915-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@24a019d6
2015-11-24 16:12:53,79915-11-24 16:12:53 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b004363
2015-11-24 16:12:53,89515-11-24 16:12:53  INFO (Version.java:37 LINE) Version.<clinit> -> Hibernate Commons Annotations 3.2.0.Final
2015-11-24 16:12:53,90315-11-24 16:12:53  INFO (Environment.java:603 LINE) Environment.<clinit> -> Hibernate 3.6.8.Final
2015-11-24 16:12:53,90715-11-24 16:12:53  INFO (Environment.java:636 LINE) Environment.<clinit> -> hibernate.properties not found
2015-11-24 16:12:53,91215-11-24 16:12:53  INFO (Environment.java:814 LINE) Environment.buildBytecodeProvider -> Bytecode provider name : javassist
2015-11-24 16:12:53,91715-11-24 16:12:53  INFO (Environment.java:695 LINE) Environment.<clinit> -> using JDK 1.4 java.sql.Timestamp handling
2015-11-24 16:12:53,99715-11-24 16:12:53 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2015-11-24 16:12:54,00915-11-24 16:12:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2015-11-24 16:12:54,01015-11-24 16:12:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 16:12:54,01015-11-24 16:12:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 16:12:54,01415-11-24 16:12:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2015-11-24 16:12:54,01515-11-24 16:12:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2015-11-24 16:12:54,04015-11-24 16:12:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2015-11-24 16:12:54,04115-11-24 16:12:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2015-11-24 16:12:54,04315-11-24 16:12:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2015-11-24 16:12:54,04415-11-24 16:12:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2015-11-24 16:12:54,05115-11-24 16:12:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2015-11-24 16:12:54,05215-11-24 16:12:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2015-11-24 16:12:54,05315-11-24 16:12:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2015-11-24 16:12:54,05515-11-24 16:12:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-11-24 16:12:54,05715-11-24 16:12:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2015-11-24 16:12:54,10415-11-24 16:12:54 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:12:54,10415-11-24 16:12:54  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:12:54,10515-11-24 16:12:54 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:12:54,10615-11-24 16:12:54 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:12:54,21515-11-24 16:12:54 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:12:54,21615-11-24 16:12:54  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:12:54,21615-11-24 16:12:54 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:12:54,21715-11-24 16:12:54 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:12:54,28315-11-24 16:12:54 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:12:54,28415-11-24 16:12:54  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:12:54,28415-11-24 16:12:54 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:12:54,28515-11-24 16:12:54 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:12:54,37015-11-24 16:12:54 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:12:54,44815-11-24 16:12:54  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.UserOperate -> user_operate
2015-11-24 16:12:54,45415-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:12:54,46215-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userName -> userName
2015-11-24 16:12:54,46215-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPassword -> userPassword
2015-11-24 16:12:54,46315-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: phicommId -> phicomm_id
2015-11-24 16:12:54,46315-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userEmail -> userEmail
2015-11-24 16:12:54,46315-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPhoneNumb -> user_PhoneNumb
2015-11-24 16:12:54,46415-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userType -> userType
2015-11-24 16:12:54,46415-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: isChecked -> isChecked
2015-11-24 16:12:54,46415-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nickname -> nickname
2015-11-24 16:12:54,46515-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: figureurl -> figureurl
2015-11-24 16:12:54,46515-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: sex -> sex
2015-11-24 16:12:54,46615-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: province -> province
2015-11-24 16:12:54,46615-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: city -> city
2015-11-24 16:12:54,46615-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: birthday -> birthday
2015-11-24 16:12:54,46715-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openId -> open_id
2015-11-24 16:12:54,46715-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openKey -> open_key
2015-11-24 16:12:54,46715-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: accessToken -> access_token
2015-11-24 16:12:54,46715-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: expireseIn -> expirese_in
2015-11-24 16:12:54,46815-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: devinfo -> devinfo
2015-11-24 16:12:54,46815-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userinfo -> userinfo
2015-11-24 16:12:54,46815-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqq -> openqq
2015-11-24 16:12:54,46815-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqqinfo -> openqqinfo
2015-11-24 16:12:54,46915-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensina -> opensina
2015-11-24 16:12:54,46915-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensinainfo -> opensinainfo
2015-11-24 16:12:54,46915-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: createTime -> createTime
2015-11-24 16:12:54,47015-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: updateTime -> updateTime
2015-11-24 16:12:54,47015-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: lastLoginTime -> lastLoginTime
2015-11-24 16:12:54,47015-11-24 16:12:54  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.NoteNumbRecord -> note_numb_record
2015-11-24 16:12:54,47115-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:12:54,47115-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nodeNumb -> node_numb
2015-11-24 16:12:54,47115-11-24 16:12:54  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.CrashLog -> crash_log
2015-11-24 16:12:54,47215-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:12:54,47215-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: url -> url
2015-11-24 16:12:54,47315-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: describes -> describes
2015-11-24 16:12:54,47315-11-24 16:12:54 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: addDate -> addDate
2015-11-24 16:12:54,47315-11-24 16:12:54 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:12:54,47815-11-24 16:12:54 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:12:54,48015-11-24 16:12:54 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:12:54,48015-11-24 16:12:54 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:12:54,48115-11-24 16:12:54 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:12:54,48115-11-24 16:12:54 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:12:54,48215-11-24 16:12:54 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:12:54,48315-11-24 16:12:54 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:12:54,49115-11-24 16:12:54  INFO (Configuration.java:1676 LINE) Configuration.applyHibernateValidatorLegacyConstraintsOnDDL -> Hibernate Validator not found: ignoring
2015-11-24 16:12:54,55915-11-24 16:12:54 DEBUG (LoggerFactory.java:29 LINE) LoggerFactory.make -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-11-24 16:12:54,56015-11-24 16:12:54  INFO (Version.java:27 LINE) Version.<clinit> -> HV000001: Hibernate Validator 5.0.0.Final
2015-11-24 16:12:54,58715-11-24 16:12:54 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:12:54,59415-11-24 16:12:54 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:12:54,60015-11-24 16:12:54 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:12:54,82815-11-24 16:12:54  INFO (LocalSessionFactoryBean.java:780 LINE) LocalSessionFactoryBean.buildSessionFactory -> Building new Hibernate SessionFactory
2015-11-24 16:12:54,82915-11-24 16:12:54 DEBUG (Configuration.java:1854 LINE) Configuration.buildSessionFactory -> Preparing to build session factory with filters : {}
2015-11-24 16:12:54,82915-11-24 16:12:54 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:12:54,82915-11-24 16:12:54 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:12:54,82915-11-24 16:12:54 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:12:54,83015-11-24 16:12:54 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:12:54,83115-11-24 16:12:54 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:12:54,83115-11-24 16:12:54 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:12:54,83115-11-24 16:12:54 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:12:54,83115-11-24 16:12:54 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:12:54,83215-11-24 16:12:54 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:12:54,83315-11-24 16:12:54 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:12:54,83315-11-24 16:12:54 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:12:54,85815-11-24 16:12:54 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:12:54,88015-11-24 16:12:54 DEBUG (Configuration.java:1896 LINE) Configuration.enableLegacyHibernateValidator -> Legacy Validator not present in classpath, ignoring event listener registration
2015-11-24 16:12:54,88115-11-24 16:12:54 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:12:54,88115-11-24 16:12:54 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:12:54,88215-11-24 16:12:54 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:12:54,89015-11-24 16:12:54 DEBUG (HibernateSearchEventListenerRegister.java:231 LINE) HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener -> Search not present in classpath, ignoring event listener registration.
2015-11-24 16:12:54,89015-11-24 16:12:54  INFO (HibernateSearchEventListenerRegister.java:75 LINE) HibernateSearchEventListenerRegister.enableHibernateSearch -> Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2015-11-24 16:12:54,89515-11-24 16:12:54  INFO (ConnectionProviderFactory.java:173 LINE) ConnectionProviderFactory.initializeConnectionProviderFromConfig -> Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2015-11-24 16:12:55,32015-11-24 16:12:55  INFO (Dialect.java:135 LINE) Dialect.<init> -> Using dialect: org.hibernate.dialect.MySQLDialect
2015-11-24 16:12:55,33915-11-24 16:12:55  INFO (SettingsFactory.java:126 LINE) SettingsFactory.buildSettings -> Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-11-24 16:12:55,33915-11-24 16:12:55  INFO (SettingsFactory.java:132 LINE) SettingsFactory.buildSettings -> Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.25 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2015-11-24 16:12:55,34415-11-24 16:12:55  INFO (TransactionFactoryFactory.java:65 LINE) TransactionFactoryFactory.buildTransactionFactory -> Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2015-11-24 16:12:55,34715-11-24 16:12:55  INFO (TransactionManagerLookupFactory.java:83 LINE) TransactionManagerLookupFactory.getTransactionManagerLookup -> No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2015-11-24 16:12:55,34715-11-24 16:12:55  INFO (SettingsFactory.java:179 LINE) SettingsFactory.buildSettings -> Automatic flush during beforeCompletion(): disabled
2015-11-24 16:12:55,34815-11-24 16:12:55  INFO (SettingsFactory.java:183 LINE) SettingsFactory.buildSettings -> Automatic session close at end of transaction: disabled
2015-11-24 16:12:55,34815-11-24 16:12:55  INFO (SettingsFactory.java:190 LINE) SettingsFactory.buildSettings -> JDBC batch size: 25
2015-11-24 16:12:55,34815-11-24 16:12:55  INFO (SettingsFactory.java:193 LINE) SettingsFactory.buildSettings -> JDBC batch updates for versioned data: disabled
2015-11-24 16:12:55,35015-11-24 16:12:55  INFO (SettingsFactory.java:198 LINE) SettingsFactory.buildSettings -> Scrollable result sets: enabled
2015-11-24 16:12:55,35115-11-24 16:12:55 DEBUG (SettingsFactory.java:202 LINE) SettingsFactory.buildSettings -> Wrap result sets: disabled
2015-11-24 16:12:55,35115-11-24 16:12:55  INFO (SettingsFactory.java:206 LINE) SettingsFactory.buildSettings -> JDBC3 getGeneratedKeys(): enabled
2015-11-24 16:12:55,35215-11-24 16:12:55  INFO (SettingsFactory.java:210 LINE) SettingsFactory.buildSettings -> JDBC result set fetch size: 50
2015-11-24 16:12:55,35215-11-24 16:12:55  INFO (SettingsFactory.java:214 LINE) SettingsFactory.buildSettings -> Connection release mode: after_transaction
2015-11-24 16:12:55,35415-11-24 16:12:55  INFO (SettingsFactory.java:238 LINE) SettingsFactory.buildSettings -> Maximum outer join fetch depth: 2
2015-11-24 16:12:55,35515-11-24 16:12:55  INFO (SettingsFactory.java:241 LINE) SettingsFactory.buildSettings -> Default batch fetch size: 1
2015-11-24 16:12:55,35515-11-24 16:12:55  INFO (SettingsFactory.java:245 LINE) SettingsFactory.buildSettings -> Generate SQL with comments: disabled
2015-11-24 16:12:55,35515-11-24 16:12:55  INFO (SettingsFactory.java:249 LINE) SettingsFactory.buildSettings -> Order SQL updates by primary key: disabled
2015-11-24 16:12:55,35615-11-24 16:12:55  INFO (SettingsFactory.java:253 LINE) SettingsFactory.buildSettings -> Order SQL inserts for batching: disabled
2015-11-24 16:12:55,35615-11-24 16:12:55  INFO (SettingsFactory.java:431 LINE) SettingsFactory.createQueryTranslatorFactory -> Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2015-11-24 16:12:55,36015-11-24 16:12:55  INFO (ASTQueryTranslatorFactory.java:47 LINE) ASTQueryTranslatorFactory.<init> -> Using ASTQueryTranslatorFactory
2015-11-24 16:12:55,36115-11-24 16:12:55  INFO (SettingsFactory.java:261 LINE) SettingsFactory.buildSettings -> Query language substitutions: {false='N', true='Y'}
2015-11-24 16:12:55,36215-11-24 16:12:55  INFO (SettingsFactory.java:266 LINE) SettingsFactory.buildSettings -> JPA-QL strict compliance: disabled
2015-11-24 16:12:55,36215-11-24 16:12:55  INFO (SettingsFactory.java:271 LINE) SettingsFactory.buildSettings -> Second-level cache: enabled
2015-11-24 16:12:55,36315-11-24 16:12:55  INFO (SettingsFactory.java:275 LINE) SettingsFactory.buildSettings -> Query cache: enabled
2015-11-24 16:12:55,36415-11-24 16:12:55  INFO (SettingsFactory.java:406 LINE) SettingsFactory.createRegionFactory -> Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
2015-11-24 16:12:55,38215-11-24 16:12:55  INFO (RegionFactoryCacheProviderBridge.java:61 LINE) RegionFactoryCacheProviderBridge.<init> -> Cache provider: org.hibernate.cache.EhCacheProvider
2015-11-24 16:12:55,38815-11-24 16:12:55  INFO (SettingsFactory.java:285 LINE) SettingsFactory.buildSettings -> Optimize cache for minimal puts: disabled
2015-11-24 16:12:55,38815-11-24 16:12:55  INFO (SettingsFactory.java:294 LINE) SettingsFactory.buildSettings -> Structured second-level cache entries: disabled
2015-11-24 16:12:55,38915-11-24 16:12:55  INFO (SettingsFactory.java:385 LINE) SettingsFactory.createQueryCacheFactory -> Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
2015-11-24 16:12:55,45315-11-24 16:12:55  INFO (SettingsFactory.java:314 LINE) SettingsFactory.buildSettings -> Echoing all SQL to stdout
2015-11-24 16:12:55,45415-11-24 16:12:55  INFO (SettingsFactory.java:323 LINE) SettingsFactory.buildSettings -> Statistics: disabled
2015-11-24 16:12:55,45515-11-24 16:12:55  INFO (SettingsFactory.java:327 LINE) SettingsFactory.buildSettings -> Deleted entity synthetic identifier rollback: disabled
2015-11-24 16:12:55,45515-11-24 16:12:55  INFO (SettingsFactory.java:343 LINE) SettingsFactory.buildSettings -> Default entity-mode: pojo
2015-11-24 16:12:55,46815-11-24 16:12:55  INFO (SettingsFactory.java:347 LINE) SettingsFactory.buildSettings -> Named query checking : enabled
2015-11-24 16:12:55,46815-11-24 16:12:55  INFO (SettingsFactory.java:351 LINE) SettingsFactory.buildSettings -> Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2015-11-24 16:12:55,50115-11-24 16:12:55  INFO (SessionFactoryImpl.java:202 LINE) SessionFactoryImpl.<init> -> building session factory
2015-11-24 16:12:55,50615-11-24 16:12:55 DEBUG (SessionFactoryImpl.java:206 LINE) SessionFactoryImpl.<init> -> Statistics initialized [enabled=false]}
2015-11-24 16:12:55,50915-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 16:12:55,50915-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 16:12:55,51015-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 16:12:55,51015-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1ffaade5
2015-11-24 16:12:55,51015-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@7377b6fc
2015-11-24 16:12:55,51115-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@1a89ebe0
2015-11-24 16:12:55,51115-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 16:12:55,51215-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 16:12:55,51215-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 16:12:55,51215-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@2008473d
2015-11-24 16:12:55,51315-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@2008473d
2015-11-24 16:12:55,51315-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2008473d
2015-11-24 16:12:55,51315-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 16:12:55,51415-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 16:12:55,51415-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 16:12:55,51415-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 16:12:55,51515-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 16:12:55,51515-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 16:12:55,51515-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 16:12:55,51515-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 16:12:55,51615-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 16:12:55,51615-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 16:12:55,51615-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 16:12:55,51715-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 16:12:55,51715-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 16:12:55,51715-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 16:12:55,51715-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 16:12:55,51815-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@14b89cc2
2015-11-24 16:12:55,51815-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@14b89cc2
2015-11-24 16:12:55,51815-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f3080df
2015-11-24 16:12:55,51915-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f3080df
2015-11-24 16:12:55,51915-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@4564886c
2015-11-24 16:12:55,51915-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@4564886c
2015-11-24 16:12:55,52015-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@6d293c5e
2015-11-24 16:12:55,52015-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d293c5e
2015-11-24 16:12:55,52015-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@405d65c3
2015-11-24 16:12:55,52015-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@405d65c3
2015-11-24 16:12:55,52115-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@297d1d8b
2015-11-24 16:12:55,52215-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@297d1d8b
2015-11-24 16:12:55,52215-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@121812f9
2015-11-24 16:12:55,52215-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@121812f9
2015-11-24 16:12:55,52215-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@121812f9
2015-11-24 16:12:55,52315-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6221a993
2015-11-24 16:12:55,52315-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 16:12:55,52315-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 16:12:55,52315-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 16:12:55,52315-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ab50384
2015-11-24 16:12:55,52415-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@56c3b8b6
2015-11-24 16:12:55,52415-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@56c3b8b6
2015-11-24 16:12:55,52415-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@6ce18074
2015-11-24 16:12:55,52415-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ce18074
2015-11-24 16:12:55,52415-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b73c65e
2015-11-24 16:12:55,52415-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b73c65e
2015-11-24 16:12:55,52515-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@6f7e20ff
2015-11-24 16:12:55,52515-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f7e20ff
2015-11-24 16:12:55,52515-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@38430e80
2015-11-24 16:12:55,52615-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@38430e80
2015-11-24 16:12:55,52615-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@75c4d215
2015-11-24 16:12:55,52615-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@23e5fd87
2015-11-24 16:12:55,52615-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 16:12:55,52715-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 16:12:55,52715-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 16:12:55,52715-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 16:12:55,52715-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 16:12:55,52715-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 16:12:55,52815-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@663d80c9
2015-11-24 16:12:55,52815-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@18f9a7a8
2015-11-24 16:12:55,52815-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@18f9a7a8
2015-11-24 16:12:55,52815-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@18f9a7a8
2015-11-24 16:12:55,52815-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@a8a8b1e
2015-11-24 16:12:55,52915-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@a8a8b1e
2015-11-24 16:12:55,52915-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@a8a8b1e
2015-11-24 16:12:55,52915-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@70ea9f38
2015-11-24 16:12:55,52915-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@597e9be9
2015-11-24 16:12:55,52915-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@597e9be9
2015-11-24 16:12:55,52915-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3948166e
2015-11-24 16:12:55,53015-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1f4f53dd
2015-11-24 16:12:55,53015-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@36162346
2015-11-24 16:12:55,53015-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@36162346
2015-11-24 16:12:55,53015-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@278a1cfb
2015-11-24 16:12:55,53015-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@6f6c1fb0
2015-11-24 16:12:55,53015-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1e78a60e
2015-11-24 16:12:55,53115-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@5c9c2f98
2015-11-24 16:12:55,53115-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@76f294c5
2015-11-24 16:12:55,53115-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@76f294c5
2015-11-24 16:12:55,53115-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@25406d8e
2015-11-24 16:12:55,53115-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@28d898bd
2015-11-24 16:12:55,53215-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2413b53e
2015-11-24 16:12:55,53215-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@9e00bf3
2015-11-24 16:12:55,53215-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@54308395
2015-11-24 16:12:55,53215-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3d0ed661
2015-11-24 16:12:55,53215-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@191c9998
2015-11-24 16:12:55,53215-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@24a7d709
2015-11-24 16:12:55,53315-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@16d99324
2015-11-24 16:12:55,53315-11-24 16:12:55  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@278a1cfb
2015-11-24 16:12:55,53315-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1e3d66e3
2015-11-24 16:12:55,53315-11-24 16:12:55  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@1f4f53dd
2015-11-24 16:12:55,53415-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@21dbab17
2015-11-24 16:12:55,53415-11-24 16:12:55  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [blob] overrides previous : org.hibernate.type.BlobType@597e9be9
2015-11-24 16:12:55,53415-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@21dbab17
2015-11-24 16:12:55,53415-11-24 16:12:55  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@597e9be9
2015-11-24 16:12:55,53415-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@512dd097
2015-11-24 16:12:55,53415-11-24 16:12:55  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [clob] overrides previous : org.hibernate.type.ClobType@36162346
2015-11-24 16:12:55,53515-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@512dd097
2015-11-24 16:12:55,53515-11-24 16:12:55  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@36162346
2015-11-24 16:12:55,53515-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@264b2c34
2015-11-24 16:12:55,53515-11-24 16:12:55  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@6f6c1fb0
2015-11-24 16:12:55,53515-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5cbd845e
2015-11-24 16:12:55,53615-11-24 16:12:55  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@3948166e
2015-11-24 16:12:55,53615-11-24 16:12:55 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@11431d90
2015-11-24 16:12:55,53615-11-24 16:12:55  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@1e78a60e
2015-11-24 16:12:55,53715-11-24 16:12:55 DEBUG (SessionFactoryImpl.java:228 LINE) SessionFactoryImpl.<init> -> Session factory constructed with filter configurations : {}
2015-11-24 16:12:55,53815-11-24 16:12:55 DEBUG (SessionFactoryImpl.java:232 LINE) SessionFactoryImpl.<init> -> instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, sun.boot.library.path=E:\JDK1.7\bin, java.vm.version=23.7-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.cache.use_query_cache=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\workspace\mobile-user, java.runtime.version=1.7.0_17-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=E:\JDK1.7\lib\endorsed, os.arch=amd64, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\gqy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, hibernate.cache.use_second_level_cache=true, sun.jnu.encoding=GBK, hibernate.jdbc.fetch_size=50, java.library.path=E:\JDK1.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\ProgramData\Lenovo\ReadyApps;E:\JDK\bin;E:\JDK\jre\bin;E:\Go\bin;E:\winscp\WinSCP\;E:\maven\apache-maven-3.2.3\bin;C:\Program Files (x86)\DBank\ClickUp;C:\Program Files (x86)\DBank\ClickUp;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\gqy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=after_transaction, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=gqy, java.class.path=G:\workspace\mobile-user\target\test-classes;G:\workspace\mobile-user\target\classes;H:\Respositories2\repository\com\alibaba\fastjson\1.2.4\fastjson-1.2.4.jar;H:\Respositories2\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;H:\Respositories2\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;H:\Respositories2\repository\io\netty\netty\4.0.0.Alpha8\netty-4.0.0.Alpha8.jar;H:\Respositories2\repository\jstl\jstl\1.2\jstl-1.2.jar;H:\Respositories2\repository\org\springframework\spring-aop\3.2.0.RELEASE\spring-aop-3.2.0.RELEASE.jar;H:\Respositories2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;H:\Respositories2\repository\org\springframework\spring-beans\3.2.0.RELEASE\spring-beans-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context\3.2.0.RELEASE\spring-context-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-expression\3.2.0.RELEASE\spring-expression-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context-support\3.2.0.RELEASE\spring-context-support-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-core\3.2.0.RELEASE\spring-core-3.2.0.RELEASE.jar;H:\Respositories2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;H:\Respositories2\repository\org\springframework\spring-jdbc\3.2.0.RELEASE\spring-jdbc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-orm\3.2.0.RELEASE\spring-orm-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-tx\3.2.0.RELEASE\spring-tx-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-web\3.2.0.RELEASE\spring-web-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-webmvc\3.2.0.RELEASE\spring-webmvc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\amqp\spring-amqp\1.2.0.RELEASE\spring-amqp-1.2.0.RELEASE.jar;H:\Respositories2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;H:\Respositories2\repository\com\fasterxml\jackson\core\jackson-core\2.1.0\jackson-core-2.1.0.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.13\jackson-jaxrs-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-xc\1.9.13\jackson-xc-1.9.13.jar;H:\Respositories2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;H:\Respositories2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;H:\Respositories2\repository\mysql\mysql-connector-java\5.1.25\mysql-connector-java-5.1.25.jar;H:\Respositories2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;H:\Respositories2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;H:\Respositories2\repository\org\aspectj\aspectjweaver\1.6.4\aspectjweaver-1.6.4.jar;H:\Respositories2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;H:\Respositories2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;H:\Respositories2\repository\commons-beanutils\commons-beanutils\1.9.0\commons-beanutils-1.9.0.jar;H:\Respositories2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;H:\Respositories2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;H:\Respositories2\repository\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;H:\Respositories2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;H:\Respositories2\repository\org\mybatis\mybatis-spring\1.2.0\mybatis-spring-1.2.0.jar;H:\Respositories2\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;H:\Respositories2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar;H:\Respositories2\repository\org\json\json\20090211\json-20090211.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-lgpl\1.8.1\jackson-core-lgpl-1.8.1.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-lgpl\1.8.1\jackson-mapper-lgpl-1.8.1.jar;H:\Respositories2\repository\org\freemarker\freemarker\2.3.16\freemarker-2.3.16.jar;H:\Respositories2\repository\opensymphony\sitemesh\2.4.2\sitemesh-2.4.2.jar;H:\Respositories2\repository\org\testng\testng\5.9\testng-5.9-jdk15.jar;H:\Respositories2\repository\junit\junit\4.7\junit-4.7.jar;H:\Respositories2\repository\cglib\cglib-asm\1.0\cglib-asm-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-core\1.0\jxls-core-1.0.jar;H:\Respositories2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;H:\Respositories2\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml\3.7\poi-ooxml-3.7.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml-schemas\3.7\poi-ooxml-schemas-3.7.jar;H:\Respositories2\repository\org\apache\xmlbeans\xmlbeans\2.3.0\xmlbeans-2.3.0.jar;H:\Respositories2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;H:\Respositories2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-reader\1.0\jxls-reader-1.0.jar;H:\Respositories2\repository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient\4.3.2\httpclient-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient-cache\4.3.2\httpclient-cache-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpmime\4.3.2\httpmime-4.3.2.jar;H:\Respositories2\repository\org\quartz-scheduler\quartz\1.8.6\quartz-1.8.6.jar;H:\Respositories2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;H:\Respositories2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;H:\Respositories2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;H:\Respositories2\repository\net\coobird\thumbnailator\0.4.7\thumbnailator-0.4.7.jar;H:\Respositories2\repository\jcifs\jcifs\1.3.17\jcifs-1.3.17.jar;H:\Respositories2\repository\org\apache\poi\poi\3.10.1\poi-3.10.1.jar;H:\Respositories2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;H:\Respositories2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;H:\Respositories2\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;H:\Respositories2\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;H:\Respositories2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;H:\Respositories2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;H:\Respositories2\repository\net\sf\supercsv\super-csv\2.2.0\super-csv-2.2.0.jar;H:\Respositories2\repository\org\bouncycastle\bcprov-jdk16\1.45\bcprov-jdk16-1.45.jar;H:\Respositories2\repository\jdom\jdom\1.0\jdom-1.0.jar;H:\Respositories2\repository\com\belerweb\pinyin4j\2.5.0\pinyin4j-2.5.0.jar;H:\Respositories2\repository\org\glassfish\jersey\ext\jersey-spring3\2.4.1\jersey-spring3-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-server\2.4.1\jersey-server-2.4.1.jar;H:\Respositories2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-api\2.2.0-b21\hk2-api-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\javax.inject\2.2.0-b21\javax.inject-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-locator\2.2.0-b21\hk2-locator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\asm-all-repackaged\2.2.0-b21\asm-all-repackaged-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\cglib\2.2.0-b21\cglib-2.2.0-b21.jar;H:\Respositories2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;H:\Respositories2\repository\org\glassfish\jersey\containers\jersey-container-servlet-core\2.4.1\jersey-container-servlet-core-2.4.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2\2.2.0-b21\hk2-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-utils\2.2.0-b21\hk2-utils-2.2.0-b21.jar;H:\Respositories2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;H:\Respositories2\repository\org\glassfish\hk2\config-types\2.2.0-b21\config-types-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\core\2.2.0-b21\core-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-config\2.2.0-b21\hk2-config-2.2.0-b21.jar;H:\Respositories2\repository\org\jvnet\tiger-types\1.4\tiger-types-1.4.jar;H:\Respositories2\repository\org\glassfish\hk2\external\bean-validator\2.2.0-b21\bean-validator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-runlevel\2.2.0-b21\hk2-runlevel-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\class-model\2.2.0-b21\class-model-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\spring-bridge\2.2.0-b21\spring-bridge-2.2.0-b21.jar;H:\Respositories2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\2.4.1\jersey-media-json-jackson-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-common\2.4.1\jersey-common-2.4.1.jar;H:\Respositories2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;H:\Respositories2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.1\osgi-resource-locator-1.0.1.jar;H:\Respositories2\repository\org\codehaus\groovy\groovy-all\2.2.0\groovy-all-2.2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\providers\jersey-test-framework-provider-external\2.5.1\jersey-test-framework-provider-external-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\jersey-test-framework-core\2.5.1\jersey-test-framework-core-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-client\2.5.1\jersey-client-2.5.1.jar;H:\Respositories2\repository\org\springframework\spring-test\3.2.6.RELEASE\spring-test-3.2.6.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session\1.0.1.RELEASE\spring-session-1.0.1.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session-data-redis\1.0.0.RELEASE\spring-session-data-redis-1.0.0.RELEASE.jar;H:\Respositories2\repository\org\apache\commons\commons-pool2\2.2\commons-pool2-2.2.jar;H:\Respositories2\repository\redis\clients\jedis\2.6.0\jedis-2.6.0.jar;H:\Respositories2\repository\org\springframework\data\spring-data-redis\1.4.1.RELEASE\spring-data-redis-1.4.1.RELEASE.jar;H:\Respositories2\repository\net\sf\ehcache\ehcache-core\2.6.11\ehcache-core-2.6.11.jar;H:\Respositories2\repository\org\hibernate3\hibernate3\3.0.0\hibernate3-3.0.0.jar;H:\Respositories2\repository\com\google\code\gson\gson\2.1\gson-2.1.jar;H:\Respositories2\repository\org\apache\openejb\javaee-api\5.0-1\javaee-api-5.0-1.jar;H:\Respositories2\repository\com\alibaba\druid\1.0.2\druid-1.0.2.jar;H:\Respositories2\repository\javax\faces\jsf-impl\1.2_04\jsf-impl-1.2_04.jar;H:\Respositories2\repository\javax\faces\jsf-api\1.2_04\jsf-api-1.2_04.jar;H:\Respositories2\repository\javax\transaction\jta\1.1\jta-1.1.jar;H:\Respositories2\repository\org\apache\ws\wss4j\1.5.1\wss4j-1.5.1.jar;H:\Respositories2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;H:\Respositories2\repository\hibernate\antlr\2.7.5H3\antlr-2.7.5H3.jar;H:\Respositories2\repository\javassist\javassist\3.9.0.GA\javassist-3.9.0.GA.jar;H:\Respositories2\repository\com\fx\mobile\mobile-model\0.0.1-SNAPSHOT\mobile-model-0.0.1-SNAPSHOT.jar;H:\Respositories2\repository\com\fx\mobile\mobile-core\0.0.1\mobile-core-0.0.1.jar;H:\Respositories2\repository\Decoder\sun.misc.BASE64Decoder\1.0.0\sun.misc.BASE64Decoder-1.0.0.jar;H:\Respositories2\repository\marketingFile\marketingFile\0.0.1\marketingFile-0.0.1.jar;H:\Respositories2\repository\com\qq\connect\Sdk4J\1.0\Sdk4J-1.0.jar;H:\Respositories2\repository\org\apache\commons\commons-io\1.3.2\commons-io-1.3.2.jar;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.query.substitutions=true 'Y', false 'N', hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=E:\JDK1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60833 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.fx.mobile.junit.UserOperateDaoImplTest, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_17, java.ext.dirs=E:\JDK1.7\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=E:\JDK1.7\lib\resources.jar;E:\JDK1.7\lib\rt.jar;E:\JDK1.7\lib\sunrsasign.jar;E:\JDK1.7\lib\jsse.jar;E:\JDK1.7\lib\jce.jar;E:\JDK1.7\lib\charsets.jar;E:\JDK1.7\lib\jfr.jar;E:\JDK1.7\classes, java.vendor=Oracle Corporation, hibernate.jdbc.batch_size=25, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-11-24 16:12:55,57215-11-24 16:12:55 DEBUG (CacheManager.java:684 LINE) CacheManager.parseConfiguration -> Configuring ehcache from classpath.
2015-11-24 16:12:55,57715-11-24 16:12:55 DEBUG (ConfigurationFactory.java:132 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from ehcache.xml found in the classpath: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 16:12:55,57715-11-24 16:12:55 DEBUG (ConfigurationFactory.java:98 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from URL: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 16:12:55,57815-11-24 16:12:55 DEBUG (ConfigurationFactory.java:150 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from InputStream
2015-11-24 16:12:55,63715-11-24 16:12:55 DEBUG (DiskStoreConfiguration.java:141 LINE) DiskStoreConfiguration.translatePath -> Disk Store Path: C:\Users\gqy\AppData\Local\Temp\
2015-11-24 16:12:55,66615-11-24 16:12:55 DEBUG (PropertyUtil.java:88 LINE) PropertyUtil.parseProperties -> propertiesString is null.
2015-11-24 16:12:55,68815-11-24 16:12:55 DEBUG (ConfigurationHelper.java:185 LINE) ConfigurationHelper.createCacheManagerEventListener -> No CacheManagerEventListenerFactory class specified. Skipping...
2015-11-24 16:12:55,77015-11-24 16:12:55 DEBUG (Cache.java:955 LINE) Cache.createBootstrapCacheLoader -> No BootstrapCacheLoaderFactory class specified. Skipping...
2015-11-24 16:12:55,77015-11-24 16:12:55 DEBUG (Cache.java:929 LINE) Cache.createCacheWriter -> CacheWriter factory not configured. Skipping...
2015-11-24 16:12:55,77515-11-24 16:12:55 DEBUG (ConfigurationHelper.java:96 LINE) ConfigurationHelper.createCacheExceptionHandler -> No CacheExceptionHandlerFactory class specified. Skipping...
2015-11-24 16:12:55,83615-11-24 16:12:55 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:12:55,83815-11-24 16:12:55 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:12:55,83815-11-24 16:12:55 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:12:56,04315-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.NoteNumbRecord
2015-11-24 16:12:56,04315-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from note_numb_record where id =?
2015-11-24 16:12:56,04315-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select notenumbre_.id, notenumbre_.node_numb as node2_1_ from note_numb_record notenumbre_ where notenumbre_.id=?
2015-11-24 16:12:56,04415-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into note_numb_record (node_numb, id) values (?, ?)
2015-11-24 16:12:56,04615-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update note_numb_record set node_numb=? where id=?
2015-11-24 16:12:56,04615-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from note_numb_record where id=?
2015-11-24 16:12:56,04715-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into note_numb_record (node_numb) values (?)
2015-11-24 16:12:56,05215-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.CrashLog
2015-11-24 16:12:56,05315-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from marketing1.crash_log where id =?
2015-11-24 16:12:56,05315-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select crashlog_.id, crashlog_.url as url2_, crashlog_.describes as describes2_, crashlog_.addDate as addDate2_ from marketing1.crash_log crashlog_ where crashlog_.id=?
2015-11-24 16:12:56,05415-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into marketing1.crash_log (url, describes, addDate, id) values (?, ?, ?, ?)
2015-11-24 16:12:56,05415-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update marketing1.crash_log set url=?, describes=?, addDate=? where id=?
2015-11-24 16:12:56,05415-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from marketing1.crash_log where id=?
2015-11-24 16:12:56,05515-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into marketing1.crash_log (url, describes, addDate) values (?, ?, ?)
2015-11-24 16:12:56,13515-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.UserOperate
2015-11-24 16:12:56,13515-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from user_operate where id =?
2015-11-24 16:12:56,13615-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select useroperat_.id, useroperat_.userName as userName0_, useroperat_.userPassword as userPass3_0_, useroperat_.phicomm_id as phicomm4_0_, useroperat_.userEmail as userEmail0_, useroperat_.user_PhoneNumb as user6_0_, useroperat_.userType as userType0_, useroperat_.isChecked as isChecked0_, useroperat_.nickname as nickname0_, useroperat_.figureurl as figureurl0_, useroperat_.sex as sex0_, useroperat_.province as province0_, useroperat_.city as city0_, useroperat_.birthday as birthday0_, useroperat_.open_id as open15_0_, useroperat_.open_key as open16_0_, useroperat_.access_token as access17_0_, useroperat_.expirese_in as expirese18_0_, useroperat_.devinfo as devinfo0_, useroperat_.userinfo as userinfo0_, useroperat_.openqq as openqq0_, useroperat_.openqqinfo as openqqinfo0_, useroperat_.opensina as opensina0_, useroperat_.opensinainfo as opensin24_0_, useroperat_.createTime as createTime0_, useroperat_.updateTime as updateTime0_, useroperat_.lastLoginTime as lastLog27_0_ from user_operate useroperat_ where useroperat_.id=?
2015-11-24 16:12:56,13615-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 16:12:56,13615-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update user_operate set userName=?, userPassword=?, phicomm_id=?, userEmail=?, user_PhoneNumb=?, userType=?, isChecked=?, nickname=?, figureurl=?, sex=?, province=?, city=?, birthday=?, open_id=?, open_key=?, access_token=?, expirese_in=?, devinfo=?, userinfo=?, openqq=?, openqqinfo=?, opensina=?, opensinainfo=?, createTime=?, updateTime=?, lastLoginTime=? where id=?
2015-11-24 16:12:56,13715-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from user_operate where id=?
2015-11-24 16:12:56,13715-11-24 16:12:56 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 16:12:56,16715-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [NONE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:12:56,16815-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:12:56,16915-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:12:56,16915-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE_NOWAIT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:12:56,16915-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [FORCE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:12:56,17015-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? lock in share mode
2015-11-24 16:12:56,17015-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_WRITE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:12:56,17115-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:12:56,17115-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:12:56,17115-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:12:56,18115-11-24 16:12:56 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:12:56,18115-11-24 16:12:56 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:12:56,18515-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [NONE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:12:56,18615-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:12:56,18615-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:12:56,18715-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE_NOWAIT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:12:56,18715-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [FORCE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:12:56,18715-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? lock in share mode
2015-11-24 16:12:56,18815-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_WRITE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:12:56,18815-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:12:56,18815-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:12:56,18915-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:12:56,18915-11-24 16:12:56 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:12:56,18915-11-24 16:12:56 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:12:56,19015-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [NONE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:12:56,19115-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:12:56,19115-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:12:56,19215-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE_NOWAIT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:12:56,19315-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [FORCE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:12:56,19415-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? lock in share mode
2015-11-24 16:12:56,19515-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_WRITE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:12:56,19515-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:12:56,19615-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:12:56,19715-11-24 16:12:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:12:56,19715-11-24 16:12:56 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:12:56,19815-11-24 16:12:56 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:12:56,20015-11-24 16:12:56 DEBUG (SessionFactoryObjectFactory.java:61 LINE) SessionFactoryObjectFactory.<clinit> -> initializing class SessionFactoryObjectFactory
2015-11-24 16:12:56,20115-11-24 16:12:56 DEBUG (SessionFactoryObjectFactory.java:99 LINE) SessionFactoryObjectFactory.addInstance -> registered: 92ace2bc-803d-4a3c-b728-4b5e6cc69758 (unnamed)
2015-11-24 16:12:56,20215-11-24 16:12:56  INFO (SessionFactoryObjectFactory.java:105 LINE) SessionFactoryObjectFactory.addInstance -> Not binding factory to JNDI, no JNDI name configured
2015-11-24 16:12:56,20215-11-24 16:12:56 DEBUG (SessionFactoryImpl.java:369 LINE) SessionFactoryImpl.<init> -> instantiated session factory
2015-11-24 16:12:56,21115-11-24 16:12:56  INFO (SchemaUpdate.java:155 LINE) SchemaUpdate.execute -> Running hbm2ddl schema update
2015-11-24 16:12:56,21215-11-24 16:12:56  INFO (SchemaUpdate.java:167 LINE) SchemaUpdate.execute -> fetching database metadata
2015-11-24 16:12:56,21515-11-24 16:12:56  INFO (SchemaUpdate.java:179 LINE) SchemaUpdate.execute -> updating schema
2015-11-24 16:12:56,22015-11-24 16:12:56 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:12:56,22015-11-24 16:12:56 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:12:56,22015-11-24 16:12:56 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:12:56,23115-11-24 16:12:56 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:12:56,23115-11-24 16:12:56 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:12:56,23215-11-24 16:12:56 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:12:56,23215-11-24 16:12:56 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:12:56,23215-11-24 16:12:56 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:12:56,23315-11-24 16:12:56 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:12:56,23515-11-24 16:12:56 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:12:56,23515-11-24 16:12:56 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:12:56,23615-11-24 16:12:56 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:12:56,30615-11-24 16:12:56  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 16:12:56,30715-11-24 16:12:56 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:12:56,39615-11-24 16:12:56  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.note_numb_record
2015-11-24 16:12:56,39615-11-24 16:12:56  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [id, node_numb]
2015-11-24 16:12:56,39715-11-24 16:12:56  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 16:12:56,39715-11-24 16:12:56  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 16:12:56,41515-11-24 16:12:56  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.user_operate
2015-11-24 16:12:56,41515-11-24 16:12:56  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [birthday, sex, updatetime, open_id, openqq, opensina, userinfo, user_phonenumb, city, createtime, id, userpassword, username, lastlogintime, province, opensinainfo, figureurl, phicomm_id, open_key, access_token, nickname, usertype, ischecked, openqqinfo, useremail, devinfo, expirese_in]
2015-11-24 16:12:56,41615-11-24 16:12:56  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 16:12:56,41615-11-24 16:12:56  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 16:12:56,41715-11-24 16:12:56  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 16:12:56,41815-11-24 16:12:56 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:12:56,41815-11-24 16:12:56 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:12:56,41915-11-24 16:12:56 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:12:56,41915-11-24 16:12:56 DEBUG (SchemaUpdate.java:203 LINE) SchemaUpdate.execute -> create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 16:12:56,42015-11-24 16:12:56 ERROR (SchemaUpdate.java:212 LINE) SchemaUpdate.execute -> Unsuccessful: create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 16:12:56,42115-11-24 16:12:56 ERROR (SchemaUpdate.java:213 LINE) SchemaUpdate.execute -> Unknown database 'marketing1'
2015-11-24 16:12:56,42115-11-24 16:12:56  INFO (SchemaUpdate.java:217 LINE) SchemaUpdate.execute -> schema update complete
2015-11-24 16:12:56,44515-11-24 16:12:56  INFO (UpdateTimestampsCache.java:57 LINE) UpdateTimestampsCache.<init> -> starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:12:56,44715-11-24 16:12:56  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
2015-11-24 16:12:56,48015-11-24 16:12:56 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:12:56,49215-11-24 16:12:56 DEBUG (DiskStorePathManager.java:169 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Using diskstore path C:\Users\gqy\AppData\Local\Temp
2015-11-24 16:12:56,49215-11-24 16:12:56 DEBUG (DiskStorePathManager.java:170 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Holding exclusive lock on C:\Users\gqy\AppData\Local\Temp\.ehcache-diskstore.lock
2015-11-24 16:12:56,49415-11-24 16:12:56 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 16:12:56,49415-11-24 16:12:56 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:12:56,50915-11-24 16:12:56 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:12:56,51015-11-24 16:12:56 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:12:56,52115-11-24 16:12:56 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:12:56,52115-11-24 16:12:56 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.UpdateTimestampsCache'.
2015-11-24 16:12:56,52115-11-24 16:12:56 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:12:56,52415-11-24 16:12:56  INFO (StandardQueryCache.java:76 LINE) StandardQueryCache.<init> -> starting query cache at region: org.hibernate.cache.StandardQueryCache
2015-11-24 16:12:56,52515-11-24 16:12:56  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
2015-11-24 16:12:56,52615-11-24 16:12:56 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.StandardQueryCache
2015-11-24 16:12:56,52715-11-24 16:12:56 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 16:12:56,52815-11-24 16:12:56 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:12:56,52915-11-24 16:12:56 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:12:56,53015-11-24 16:12:56 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:12:56,53015-11-24 16:12:56 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.StandardQueryCache
2015-11-24 16:12:56,53115-11-24 16:12:56 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.StandardQueryCache'.
2015-11-24 16:12:56,53115-11-24 16:12:56 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.StandardQueryCache
2015-11-24 16:12:56,53115-11-24 16:12:56 DEBUG (SessionFactoryImpl.java:539 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named HQL queries
2015-11-24 16:12:56,53215-11-24 16:12:56 DEBUG (SessionFactoryImpl.java:559 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named SQL queries
2015-11-24 16:12:56,53315-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:56,53515-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'sessionFactory'
2015-11-24 16:12:56,53615-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:56,54415-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userOperateDao'
2015-11-24 16:12:56,54415-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:56,54515-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userOperateDao'
2015-11-24 16:12:56,54615-11-24 16:12:56 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userInterfaceDao'
2015-11-24 16:12:56,54615-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userInterfaceDao'
2015-11-24 16:12:56,54715-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userInterfaceDao' to allow for resolving potential circular references
2015-11-24 16:12:56,56815-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:12:56,56915-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userInterfaceDao'
2015-11-24 16:12:56,56915-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:56,60715-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userInterfaceDao'
2015-11-24 16:12:56,60815-11-24 16:12:56 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'noteNumRecordDao'
2015-11-24 16:12:56,60815-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'noteNumRecordDao'
2015-11-24 16:12:56,60915-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'noteNumRecordDao' to allow for resolving potential circular references
2015-11-24 16:12:56,61515-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:12:56,61615-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'noteNumRecordDao'
2015-11-24 16:12:56,61615-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:56,61715-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'noteNumRecordDao'
2015-11-24 16:12:56,61715-11-24 16:12:56 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'crashLogDao'
2015-11-24 16:12:56,61715-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'crashLogDao'
2015-11-24 16:12:56,61815-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'crashLogDao' to allow for resolving potential circular references
2015-11-24 16:12:56,65715-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:12:56,65815-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'crashLogDao'
2015-11-24 16:12:56,65815-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:56,65915-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'crashLogDao'
2015-11-24 16:12:56,65915-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'dataSource'
2015-11-24 16:12:56,65915-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:12:56,65915-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:12:56,65915-11-24 16:12:56 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:12:56,66015-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:12:56,66315-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2015-11-24 16:12:56,66915-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:12:56,67015-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:12:56,67015-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:12:56,67015-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:56,67115-11-24 16:12:56 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'transactionManager'
2015-11-24 16:12:56,67115-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'transactionManager'
2015-11-24 16:12:56,67915-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-11-24 16:12:56,68515-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:12:56,68615-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-11-24 16:12:56,69415-11-24 16:12:56  INFO (HibernateTransactionManager.java:415 LINE) HibernateTransactionManager.afterPropertiesSet -> Using DataSource [org.apache.commons.dbcp.BasicDataSource@13c1f28b] of Hibernate SessionFactory for HibernateTransactionManager
2015-11-24 16:12:56,69515-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:56,69615-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'transactionManager'
2015-11-24 16:12:56,69615-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:12:56,69615-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:12:56,69715-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:12:56,69715-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:12:56,69715-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:12:56,69715-11-24 16:12:56 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'operateService'
2015-11-24 16:12:56,69715-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'operateService'
2015-11-24 16:12:56,70615-11-24 16:12:56 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserOperateServiceImp]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 16:12:56,70615-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'operateService' to allow for resolving potential circular references
2015-11-24 16:12:56,71015-11-24 16:12:56 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'operateService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 16:12:56,73415-11-24 16:12:56 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'fileRemote'
2015-11-24 16:12:56,75815-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'fileRemote'
2015-11-24 16:12:56,76115-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'fileRemote' to allow for resolving potential circular references
2015-11-24 16:12:56,78015-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'fileRemote'
2015-11-24 16:12:56,79315-11-24 16:12:56 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static
2015-11-24 16:12:56,80015-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'fileRemote'
2015-11-24 16:12:56,80115-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 16:12:56,80115-11-24 16:12:56 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'operateService' to bean named 'userOperateDao'
2015-11-24 16:12:56,80215-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:56,80615-11-24 16:12:56 DEBUG (AbstractFallbackTransactionAttributeSource.java:106 LINE) AbstractFallbackTransactionAttributeSource.getTransactionAttribute -> Adding transactional method 'registAccount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '',-java.lang.Throwable
2015-11-24 16:12:56,80715-11-24 16:12:56 DEBUG (AbstractAutoProxyCreator.java:534 LINE) AbstractAutoProxyCreator.buildAdvisors -> Creating implicit proxy for bean 'operateService' with 0 common interceptors and 1 specific interceptors
2015-11-24 16:12:56,80815-11-24 16:12:56 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.fx.mobile.user.service.impl.UserOperateServiceImp@155cd305]
2015-11-24 16:12:56,81715-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'operateService'
2015-11-24 16:12:56,81815-11-24 16:12:56 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'SpringContextUtil'
2015-11-24 16:12:56,81815-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'SpringContextUtil'
2015-11-24 16:12:56,81915-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'SpringContextUtil' to allow for resolving potential circular references
2015-11-24 16:12:56,82515-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:56,82815-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'SpringContextUtil'
2015-11-24 16:12:56,82915-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'fileRemote'
2015-11-24 16:12:56,83015-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'corePropertyConfigurer'
2015-11-24 16:12:56,83015-11-24 16:12:56 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userinterfaceService'
2015-11-24 16:12:56,83015-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userinterfaceService'
2015-11-24 16:12:56,83215-11-24 16:12:56 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserInterfaceServiceImpl]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 16:12:56,83215-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userinterfaceService' to allow for resolving potential circular references
2015-11-24 16:12:56,83615-11-24 16:12:56 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'userinterfaceService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 16:12:56,83715-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userInterfaceDao'
2015-11-24 16:12:56,83715-11-24 16:12:56 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'userinterfaceService' to bean named 'userInterfaceDao'
2015-11-24 16:12:56,83715-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:56,84115-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userinterfaceService'
2015-11-24 16:12:56,84215-11-24 16:12:56 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'urlProperties'
2015-11-24 16:12:56,84215-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'urlProperties'
2015-11-24 16:12:56,84315-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'urlProperties' to allow for resolving potential circular references
2015-11-24 16:12:56,84715-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:56,84815-11-24 16:12:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'urlProperties'
2015-11-24 16:12:56,84915-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:12:56,85115-11-24 16:12:56 DEBUG (AbstractApplicationContext.java:858 LINE) AbstractApplicationContext.initLifecycleProcessor -> Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1d248eac]
2015-11-24 16:12:56,85215-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 16:12:56,85515-11-24 16:12:56 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-11-24 16:12:56,85515-11-24 16:12:56 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-11-24 16:12:56,85515-11-24 16:12:56 DEBUG (PropertySourcesPropertyResolver.java:93 LINE) PropertySourcesPropertyResolver.getProperty -> Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-11-24 16:12:56,85615-11-24 16:12:56 DEBUG (CacheAwareContextLoaderDelegate.java:93 LINE) CacheAwareContextLoaderDelegate.loadContext -> Storing ApplicationContext in cache under key [[MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 16:12:56,86215-11-24 16:12:56 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 16:12:56,86315-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 16:12:56,86415-11-24 16:12:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:12:56,94415-11-24 16:12:56 DEBUG (SessionFactoryUtils.java:322 LINE) SessionFactoryUtils.doGetSession -> Opening Hibernate Session
2015-11-24 16:12:56,99715-11-24 16:12:56 DEBUG (SessionImpl.java:265 LINE) SessionImpl.<init> -> opened session at timestamp: 5932452974370816
2015-11-24 16:12:57,11415-11-24 16:12:57 DEBUG (QueryTranslatorImpl.java:274 LINE) QueryTranslatorImpl.parse -> parse() - HQL: from com.fx.mobile.model.UserOperate where (userPhoneNumb=? or userName=?  or userEmail=?)  and userPassword=?
2015-11-24 16:12:57,13515-11-24 16:12:57 DEBUG (QueryTranslatorImpl.java:293 LINE) QueryTranslatorImpl.showHqlAst -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'fx'
    |           |  |  \-[IDENT] Node: 'mobile'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'UserOperate'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[OR] Node: 'or'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'userPhoneNumb'
          |  |  |  \-[PARAM] Node: '?'
          |  |  \-[EQ] Node: '='
          |  |     +-[IDENT] Node: 'userName'
          |  |     \-[PARAM] Node: '?'
          |  \-[EQ] Node: '='
          |     +-[IDENT] Node: 'userEmail'
          |     \-[PARAM] Node: '?'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'userPassword'
             \-[PARAM] Node: '?'

2015-11-24 16:12:57,13615-11-24 16:12:57 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:12:57,22715-11-24 16:12:57 DEBUG (HqlSqlBaseWalker.java:111 LINE) HqlSqlBaseWalker.beforeStatement -> select << begin [level=1, statement=select]
2015-11-24 16:12:57,24815-11-24 16:12:57 DEBUG (FromElement.java:157 LINE) FromElement.doInitialize -> FromClause{level=1} :  com.fx.mobile.model.UserOperate (no alias) -> useroperat0_
2015-11-24 16:12:57,25215-11-24 16:12:57 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:12:57,25415-11-24 16:12:57 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userPhoneNumb -> org.hibernate.type.StringType@4564886c
2015-11-24 16:12:57,25515-11-24 16:12:57 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userPhoneNumb -> useroperat0_.user_PhoneNumb
2015-11-24 16:12:57,25815-11-24 16:12:57 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:12:57,25815-11-24 16:12:57 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userName -> org.hibernate.type.StringType@4564886c
2015-11-24 16:12:57,25915-11-24 16:12:57 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userName -> useroperat0_.userName
2015-11-24 16:12:57,25915-11-24 16:12:57 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:12:57,25915-11-24 16:12:57 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userEmail -> org.hibernate.type.StringType@4564886c
2015-11-24 16:12:57,26015-11-24 16:12:57 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userEmail -> useroperat0_.userEmail
2015-11-24 16:12:57,26015-11-24 16:12:57 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:12:57,26015-11-24 16:12:57 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userPassword -> org.hibernate.type.StringType@4564886c
2015-11-24 16:12:57,26115-11-24 16:12:57 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userPassword -> useroperat0_.userPassword
2015-11-24 16:12:57,26115-11-24 16:12:57 DEBUG (HqlSqlBaseWalker.java:117 LINE) HqlSqlBaseWalker.beforeStatementCompletion -> select : finishing up [level=1, statement=select]
2015-11-24 16:12:57,26115-11-24 16:12:57 DEBUG (HqlSqlWalker.java:625 LINE) HqlSqlWalker.processQuery -> processQuery() :  ( SELECT ( FromClause{level=1} user_operate useroperat0_ ) ( where ( and ( or ( or ( = ( useroperat0_.user_PhoneNumb {synthetic-alias} userPhoneNumb ) ? ) ( = ( useroperat0_.userName {synthetic-alias} userName ) ? ) ) ( = ( useroperat0_.userEmail {synthetic-alias} userEmail ) ? ) ) ( = ( useroperat0_.userPassword {synthetic-alias} userPassword ) ? ) ) ) )
2015-11-24 16:12:57,26815-11-24 16:12:57 DEBUG (HqlSqlWalker.java:868 LINE) HqlSqlWalker.createSelectClauseFromFromClause -> Derived SELECT clause created.
2015-11-24 16:12:57,27215-11-24 16:12:57 DEBUG (JoinProcessor.java:179 LINE) JoinProcessor.addJoinNodes -> Using FROM fragment [user_operate useroperat0_]
2015-11-24 16:12:57,27315-11-24 16:12:57 DEBUG (HqlSqlBaseWalker.java:123 LINE) HqlSqlBaseWalker.afterStatementCompletion -> select >> end [level=1, statement=select]
2015-11-24 16:12:57,27415-11-24 16:12:57 DEBUG (QueryTranslatorImpl.java:260 LINE) QueryTranslatorImpl.analyze -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_operate)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'useroperat0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}}
    |  \-[SQL_TOKEN] SqlFragment: 'useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[useroperat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_operate useroperat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[OR] SqlNode: 'or'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'useroperat0_.user_PhoneNumb' {propertyName=userPhoneNumb,dereferenceType=ALL,propertyPath=userPhoneNumb,path={synthetic-alias}.userPhoneNumb,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'userPhoneNumb' {originalText=userPhoneNumb}
          |  |  |  \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.StringType@4564886c}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'useroperat0_.userName' {propertyName=userName,dereferenceType=ALL,propertyPath=userName,path={synthetic-alias}.userName,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |  |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          |  |     \-[PARAM] ParameterNode: '?' {ordinal=1, expectedType=org.hibernate.type.StringType@4564886c}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'useroperat0_.userEmail' {propertyName=userEmail,dereferenceType=ALL,propertyPath=userEmail,path={synthetic-alias}.userEmail,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |  \-[IDENT] IdentNode: 'userEmail' {originalText=userEmail}
          |     \-[PARAM] ParameterNode: '?' {ordinal=2, expectedType=org.hibernate.type.StringType@4564886c}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'useroperat0_.userPassword' {propertyName=userPassword,dereferenceType=ALL,propertyPath=userPassword,path={synthetic-alias}.userPassword,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'userPassword' {originalText=userPassword}
             \-[PARAM] ParameterNode: '?' {ordinal=3, expectedType=org.hibernate.type.StringType@4564886c}

2015-11-24 16:12:57,27415-11-24 16:12:57 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:12:57,28515-11-24 16:12:57 DEBUG (QueryTranslatorImpl.java:243 LINE) QueryTranslatorImpl.generate -> HQL: from com.fx.mobile.model.UserOperate where (userPhoneNumb=? or userName=?  or userEmail=?)  and userPassword=?
2015-11-24 16:12:57,28515-11-24 16:12:57 DEBUG (QueryTranslatorImpl.java:244 LINE) QueryTranslatorImpl.generate -> SQL: select useroperat0_.id as id0_, useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_ from user_operate useroperat0_ where (useroperat0_.user_PhoneNumb=? or useroperat0_.userName=? or useroperat0_.userEmail=?) and useroperat0_.userPassword=?
2015-11-24 16:12:57,28515-11-24 16:12:57 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:12:57,29715-11-24 16:12:57 DEBUG (AbstractBatcher.java:410 LINE) AbstractBatcher.logOpenPreparedStatement -> about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-11-24 16:12:57,29815-11-24 16:12:57 DEBUG (ConnectionManager.java:444 LINE) ConnectionManager.openConnection -> opening JDBC connection
2015-11-24 16:12:57,30115-11-24 16:12:57 DEBUG (SQLStatementLogger.java:111 LINE) SQLStatementLogger.logStatement -> 
    select
        useroperat0_.id as id0_,
        useroperat0_.userName as userName0_,
        useroperat0_.userPassword as userPass3_0_,
        useroperat0_.phicomm_id as phicomm4_0_,
        useroperat0_.userEmail as userEmail0_,
        useroperat0_.user_PhoneNumb as user6_0_,
        useroperat0_.userType as userType0_,
        useroperat0_.isChecked as isChecked0_,
        useroperat0_.nickname as nickname0_,
        useroperat0_.figureurl as figureurl0_,
        useroperat0_.sex as sex0_,
        useroperat0_.province as province0_,
        useroperat0_.city as city0_,
        useroperat0_.birthday as birthday0_,
        useroperat0_.open_id as open15_0_,
        useroperat0_.open_key as open16_0_,
        useroperat0_.access_token as access17_0_,
        useroperat0_.expirese_in as expirese18_0_,
        useroperat0_.devinfo as devinfo0_,
        useroperat0_.userinfo as userinfo0_,
        useroperat0_.openqq as openqq0_,
        useroperat0_.openqqinfo as openqqinfo0_,
        useroperat0_.opensina as opensina0_,
        useroperat0_.opensinainfo as opensin24_0_,
        useroperat0_.createTime as createTime0_,
        useroperat0_.updateTime as updateTime0_,
        useroperat0_.lastLoginTime as lastLog27_0_ 
    from
        user_operate useroperat0_ 
    where
        (
            useroperat0_.user_PhoneNumb=? 
            or useroperat0_.userName=? 
            or useroperat0_.userEmail=?
        ) 
        and useroperat0_.userPassword=?
2015-11-24 16:12:57,35315-11-24 16:12:57 DEBUG (AbstractBatcher.java:426 LINE) AbstractBatcher.logOpenResults -> about to open ResultSet (open ResultSets: 0, globally: 0)
2015-11-24 16:12:57,35915-11-24 16:12:57 DEBUG (Loader.java:1322 LINE) Loader.getRow -> result row: EntityKey[com.fx.mobile.model.UserOperate#2]
2015-11-24 16:12:57,37115-11-24 16:12:57 DEBUG (AbstractBatcher.java:433 LINE) AbstractBatcher.logCloseResults -> about to close ResultSet (open ResultSets: 1, globally: 1)
2015-11-24 16:12:57,37115-11-24 16:12:57 DEBUG (AbstractBatcher.java:418 LINE) AbstractBatcher.logClosePreparedStatement -> about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-11-24 16:12:57,37215-11-24 16:12:57 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 16:12:57,37215-11-24 16:12:57 DEBUG (ConnectionManager.java:464 LINE) ConnectionManager.closeConnection -> releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-11-24 16:12:57,37415-11-24 16:12:57 DEBUG (TwoPhaseLoad.java:130 LINE) TwoPhaseLoad.initializeEntity -> resolving associations for [com.fx.mobile.model.UserOperate#2]
2015-11-24 16:12:57,37815-11-24 16:12:57 DEBUG (TwoPhaseLoad.java:255 LINE) TwoPhaseLoad.initializeEntity -> done materializing entity [com.fx.mobile.model.UserOperate#2]
2015-11-24 16:12:57,37815-11-24 16:12:57 DEBUG (StatefulPersistenceContext.java:893 LINE) StatefulPersistenceContext.initializeNonLazyCollections -> initializing non-lazy collections
2015-11-24 16:12:57,38115-11-24 16:12:57 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 16:12:57,38115-11-24 16:12:57 DEBUG (HibernateAccessor.java:389 LINE) HibernateAccessor.flushIfNecessary -> Eagerly flushing Hibernate session
2015-11-24 16:12:57,38315-11-24 16:12:57 DEBUG (AbstractFlushingEventListener.java:134 LINE) AbstractFlushingEventListener.prepareEntityFlushes -> processing flush-time cascades
2015-11-24 16:12:57,38615-11-24 16:12:57 DEBUG (AbstractFlushingEventListener.java:177 LINE) AbstractFlushingEventListener.prepareCollectionFlushes -> dirty checking collections
2015-11-24 16:12:57,38915-11-24 16:12:57 DEBUG (AbstractFlushingEventListener.java:108 LINE) AbstractFlushingEventListener.flushEverythingToExecutions -> Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2015-11-24 16:12:57,39015-11-24 16:12:57 DEBUG (AbstractFlushingEventListener.java:114 LINE) AbstractFlushingEventListener.flushEverythingToExecutions -> Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-11-24 16:12:57,39115-11-24 16:12:57 DEBUG (Printer.java:106 LINE) Printer.toString -> listing entities:
2015-11-24 16:12:57,39115-11-24 16:12:57 DEBUG (Printer.java:113 LINE) Printer.toString -> com.fx.mobile.model.UserOperate{createTime=null, birthday=null, sex=null, accessToken=a75e2666765d54ebe5cfcd8f919d4a40, openqq=null, userPassword=e10adc3949ba59abbe56e057, opensina=null, userEmail=null, userinfo=null, openKey=dbd2a27b2d6b4e0754b8539448fb3377, userType=userSrc, city=null, id=2, isChecked=null, province=null, userName=芳草碧连天, expireseIn=2015-11-23 15:21:49, opensinainfo=null, figureurl=null, lastLoginTime=null, updateTime=null, nickname=null, userPhoneNumb=18251901682, phicommId=124, openqqinfo=null, devinfo=null, openId=6f06d7f4-89ec-47ce-8cc2-7075223f6feb}
2015-11-24 16:12:57,39215-11-24 16:12:57 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 16:12:57,39215-11-24 16:12:57 DEBUG (SessionFactoryUtils.java:800 LINE) SessionFactoryUtils.closeSession -> Closing Hibernate Session
2015-11-24 16:12:57,41915-11-24 16:12:57 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@4dd290b5 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@3b1a82fd, testMethod = getUserByNameAndPass@UserOperateDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 16:12:57,42015-11-24 16:12:57 DEBUG (DirtiesContextTestExecutionListener.java:138 LINE) DirtiesContextTestExecutionListener.afterTestClass -> After test class: context [[TestContext@4dd290b5 testClass = UserOperateDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
2015-11-24 16:12:57,42215-11-24 16:12:57  INFO (AbstractApplicationContext.java:1042 LINE) AbstractApplicationContext.doClose -> Closing org.springframework.context.support.GenericApplicationContext@4ad9cb27: startup date [Tue Nov 24 16:12:52 CST 2015]; root of context hierarchy
2015-11-24 16:12:57,42315-11-24 16:12:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 16:12:57,42415-11-24 16:12:57  INFO (DefaultSingletonBeanRegistry.java:444 LINE) DefaultSingletonBeanRegistry.destroySingletons -> Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@245a690: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 16:12:57,42915-11-24 16:12:57 DEBUG (DefaultSingletonBeanRegistry.java:500 LINE) DefaultSingletonBeanRegistry.destroyBean -> Retrieved dependent beans for bean 'userOperateDao': [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:12:57,42915-11-24 16:12:57 DEBUG (DisposableBeanAdapter.java:219 LINE) DisposableBeanAdapter.destroy -> Invoking destroy() on bean with name 'sessionFactory'
2015-11-24 16:12:57,43015-11-24 16:12:57  INFO (AbstractSessionFactoryBean.java:223 LINE) AbstractSessionFactoryBean.destroy -> Closing Hibernate SessionFactory
2015-11-24 16:12:57,43015-11-24 16:12:57  INFO (SessionFactoryImpl.java:927 LINE) SessionFactoryImpl.close -> closing
2015-11-24 16:12:57,44715-11-24 16:12:57 DEBUG (DisposableBeanAdapter.java:295 LINE) DisposableBeanAdapter.invokeCustomDestroyMethod -> Invoking destroy method 'close' on bean with name 'dataSource'
2015-11-24 16:13:28,18615-11-24 16:13:28 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 16:13:28,29115-11-24 16:13:28 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@2c39f3bb declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 16:13:28,29515-11-24 16:13:28 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:13:28,29815-11-24 16:13:28 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 16:13:28,33415-11-24 16:13:28 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:13:28,33415-11-24 16:13:28 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:13:28,33715-11-24 16:13:28 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:13:28,33815-11-24 16:13:28 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:13:28,34415-11-24 16:13:28 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:13:28,34415-11-24 16:13:28 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:13:28,34615-11-24 16:13:28 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:13:28,34715-11-24 16:13:28 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:13:28,34815-11-24 16:13:28 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:13:28,34815-11-24 16:13:28 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:13:28,35015-11-24 16:13:28 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:13:28,35115-11-24 16:13:28 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:13:28,35615-11-24 16:13:28 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@7a79f5f7 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@5d0369f2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@b20be93 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 16:13:28,37215-11-24 16:13:28 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@b20be93 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 16:13:28,37515-11-24 16:13:28 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@b20be93 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 16:13:28,65115-11-24 16:13:28 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:13:28,65315-11-24 16:13:28 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:13:28,65415-11-24 16:13:28 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:13:28,65515-11-24 16:13:28 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:13:28,66115-11-24 16:13:28 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:13:28,66115-11-24 16:13:28 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:13:28,66215-11-24 16:13:28 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:13:28,66215-11-24 16:13:28 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:13:28,67115-11-24 16:13:28 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 16:13:28,67215-11-24 16:13:28 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 16:13:28,67615-11-24 16:13:28 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 16:13:28,67715-11-24 16:13:28  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 16:13:28,68215-11-24 16:13:28 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:13:28,74915-11-24 16:13:28 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 16:13:28,76715-11-24 16:13:28 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 16:13:28,77015-11-24 16:13:28 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:13:28,83015-11-24 16:13:28 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:13:28,84115-11-24 16:13:28  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 16:13:28,84315-11-24 16:13:28 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:13:28,84615-11-24 16:13:28 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:13:28,93515-11-24 16:13:28 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:13:28,94915-11-24 16:13:28  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 16:13:28,95015-11-24 16:13:28 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:13:28,96015-11-24 16:13:28 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:13:29,01015-11-24 16:13:29 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 16:13:29,01515-11-24 16:13:29 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 16:13:29,02015-11-24 16:13:29 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:13:29,03115-11-24 16:13:29 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 16:13:29,14015-11-24 16:13:29  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 16:13:29,14115-11-24 16:13:29 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:13:29,14415-11-24 16:13:29 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:13:29,16515-11-24 16:13:29 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 16:13:29,17015-11-24 16:13:29 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 16:13:29,18015-11-24 16:13:29 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:13:29,23115-11-24 16:13:29  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 16:13:29,27315-11-24 16:13:29  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 16:13:29,30415-11-24 16:13:29 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 16:13:29,30415-11-24 16:13:29 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 16:13:29,30615-11-24 16:13:29 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 16:13:29,30815-11-24 16:13:29 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 16:13:29,33015-11-24 16:13:29 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 16:13:29,33515-11-24 16:13:29 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 16:13:29,33615-11-24 16:13:29 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 16:13:29,33915-11-24 16:13:29 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 16:13:29,34515-11-24 16:13:29  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 16:13:29,34615-11-24 16:13:29  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 16:13:29,34815-11-24 16:13:29 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:13:29,35115-11-24 16:13:29 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:13:29,37015-11-24 16:13:29 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:13:29,37115-11-24 16:13:29 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 16:13:29,37615-11-24 16:13:29  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@1929d16a: startup date [Tue Nov 24 16:13:29 CST 2015]; root of context hierarchy
2015-11-24 16:13:29,39115-11-24 16:13:29 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@1929d16a: org.springframework.beans.factory.support.DefaultListableBeanFactory@816d9ce: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 16:13:29,46615-11-24 16:13:29 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:13:29,46715-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:13:29,49315-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:13:29,49615-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:13:29,63715-11-24 16:13:29 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 16:13:29,63815-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 16:13:29,64215-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 16:13:29,69415-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 16:13:29,69515-11-24 16:13:29  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 16:13:29,69615-11-24 16:13:29  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 16:13:29,69615-11-24 16:13:29  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 16:13:29,70615-11-24 16:13:29 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:13:29,70615-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:13:29,70915-11-24 16:13:29  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 16:13:29,70915-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:13:29,71015-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:13:29,71015-11-24 16:13:29 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:13:29,71015-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:13:29,71115-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:13:29,71215-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:13:29,71215-11-24 16:13:29 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:13:29,71215-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:13:29,71915-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:13:29,72015-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:13:29,72015-11-24 16:13:29 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:13:29,72115-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:13:29,72115-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:13:29,72115-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:13:29,72215-11-24 16:13:29 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:13:29,72315-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:13:29,72415-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 16:13:29,72415-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:13:29,72515-11-24 16:13:29 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:13:29,72515-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:13:29,74615-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 16:13:29,81215-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:13:29,81615-11-24 16:13:29 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@24360ac1]
2015-11-24 16:13:29,81915-11-24 16:13:29 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1bc50966]
2015-11-24 16:13:29,82715-11-24 16:13:29  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@816d9ce: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 16:13:29,82815-11-24 16:13:29 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 16:13:29,82815-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 16:13:29,84915-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 16:13:29,85715-11-24 16:13:29 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 16:13:29,85715-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 16:13:29,87415-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 16:13:29,88415-11-24 16:13:29 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 16:13:29,88415-11-24 16:13:29 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 16:13:30,06415-11-24 16:13:30 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 16:13:30,07615-11-24 16:13:30 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:13:30,07615-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:13:30,07715-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:13:30,07715-11-24 16:13:30 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:13:30,07815-11-24 16:13:30 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:13:30,07915-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:13:30,07915-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:13:30,08015-11-24 16:13:30 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:13:30,08115-11-24 16:13:30 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:13:30,08215-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:13:30,08315-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:13:30,08415-11-24 16:13:30 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:13:30,08615-11-24 16:13:30 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:13:30,08715-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:13:30,08815-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:13:30,08815-11-24 16:13:30 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:13:30,09015-11-24 16:13:30 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:13:30,09115-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:13:30,09215-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:13:30,09215-11-24 16:13:30 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:13:30,11815-11-24 16:13:30 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:30,11915-11-24 16:13:30 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:30,12115-11-24 16:13:30 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 16:13:30,18915-11-24 16:13:30 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:13:30,19015-11-24 16:13:30 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:13:30,19215-11-24 16:13:30 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 16:13:30,20315-11-24 16:13:30 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:13:30,20415-11-24 16:13:30 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:30,20915-11-24 16:13:30 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 16:13:30,21115-11-24 16:13:30 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:13:30,21115-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:13:30,21215-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:13:30,21315-11-24 16:13:30 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:13:30,21415-11-24 16:13:30 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:13:30,21415-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:13:30,21515-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:13:30,21615-11-24 16:13:30 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:13:30,21715-11-24 16:13:30 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:13:30,21815-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:13:30,21815-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:13:30,21915-11-24 16:13:30 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:13:30,22015-11-24 16:13:30 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:13:30,22115-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:13:30,22115-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:13:30,22215-11-24 16:13:30 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:13:30,22615-11-24 16:13:30 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:13:30,22715-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:13:30,23315-11-24 16:13:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:13:30,23415-11-24 16:13:30 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:13:30,24115-11-24 16:13:30 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 16:13:30,35115-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@31aba945
2015-11-24 16:13:30,35115-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@31aba945
2015-11-24 16:13:30,35215-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@31aba945
2015-11-24 16:13:30,35315-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4f30291c
2015-11-24 16:13:30,35615-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@74cee5ed
2015-11-24 16:13:30,38815-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@5a90f6cd
2015-11-24 16:13:30,39415-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@52dc5605
2015-11-24 16:13:30,39415-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@52dc5605
2015-11-24 16:13:30,39515-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52dc5605
2015-11-24 16:13:30,39715-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@1bb08b3a
2015-11-24 16:13:30,39815-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@1bb08b3a
2015-11-24 16:13:30,39815-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1bb08b3a
2015-11-24 16:13:30,40215-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@174cc136
2015-11-24 16:13:30,40315-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@174cc136
2015-11-24 16:13:30,40315-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@174cc136
2015-11-24 16:13:30,40615-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@2afd506
2015-11-24 16:13:30,40615-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@2afd506
2015-11-24 16:13:30,40715-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2afd506
2015-11-24 16:13:30,41015-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7b948a59
2015-11-24 16:13:30,41115-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7b948a59
2015-11-24 16:13:30,41115-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@7b948a59
2015-11-24 16:13:30,41515-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@5f88a614
2015-11-24 16:13:30,41515-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@5f88a614
2015-11-24 16:13:30,41515-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5f88a614
2015-11-24 16:13:30,42015-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@86b66eb
2015-11-24 16:13:30,42015-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@86b66eb
2015-11-24 16:13:30,42015-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@86b66eb
2015-11-24 16:13:30,43115-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@782569ee
2015-11-24 16:13:30,43215-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@782569ee
2015-11-24 16:13:30,43415-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41963d89
2015-11-24 16:13:30,43515-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41963d89
2015-11-24 16:13:30,43715-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@17832d4d
2015-11-24 16:13:30,43815-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@17832d4d
2015-11-24 16:13:30,45015-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@7630e551
2015-11-24 16:13:30,45015-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@7630e551
2015-11-24 16:13:30,45515-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@5e91af0f
2015-11-24 16:13:30,45515-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@5e91af0f
2015-11-24 16:13:30,46015-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@189dcde2
2015-11-24 16:13:30,46115-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@189dcde2
2015-11-24 16:13:30,46615-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@d26626
2015-11-24 16:13:30,46715-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d26626
2015-11-24 16:13:30,46715-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d26626
2015-11-24 16:13:30,46915-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6eb2916d
2015-11-24 16:13:30,47215-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@28176fec
2015-11-24 16:13:30,47215-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@28176fec
2015-11-24 16:13:30,47315-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@28176fec
2015-11-24 16:13:30,47415-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5956c062
2015-11-24 16:13:30,47615-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@17ab25cb
2015-11-24 16:13:30,47715-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@17ab25cb
2015-11-24 16:13:30,47915-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@72a53018
2015-11-24 16:13:30,47915-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72a53018
2015-11-24 16:13:30,48115-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@68887242
2015-11-24 16:13:30,48215-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68887242
2015-11-24 16:13:30,48515-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@4a9ce1c8
2015-11-24 16:13:30,48615-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4a9ce1c8
2015-11-24 16:13:30,49015-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@46985138
2015-11-24 16:13:30,49015-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@46985138
2015-11-24 16:13:30,49215-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@76fbcbc9
2015-11-24 16:13:30,49515-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6aeb9cde
2015-11-24 16:13:30,49715-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@4f12267a
2015-11-24 16:13:30,49715-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@4f12267a
2015-11-24 16:13:30,49815-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@4f12267a
2015-11-24 16:13:30,49915-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@567c66cc
2015-11-24 16:13:30,50015-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@567c66cc
2015-11-24 16:13:30,50015-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@567c66cc
2015-11-24 16:13:30,50215-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@39990cf6
2015-11-24 16:13:30,50415-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@543b11cd
2015-11-24 16:13:30,50515-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@543b11cd
2015-11-24 16:13:30,50615-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@543b11cd
2015-11-24 16:13:30,50815-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3f511d13
2015-11-24 16:13:30,50915-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3f511d13
2015-11-24 16:13:30,50915-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3f511d13
2015-11-24 16:13:30,51115-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@3495cd
2015-11-24 16:13:30,53415-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@441154d
2015-11-24 16:13:30,53515-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@441154d
2015-11-24 16:13:30,53615-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@71172e7a
2015-11-24 16:13:30,53815-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@4139feec
2015-11-24 16:13:30,55015-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@585f257a
2015-11-24 16:13:30,55015-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@585f257a
2015-11-24 16:13:30,55215-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@44d88759
2015-11-24 16:13:30,55415-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@12f21700
2015-11-24 16:13:30,55615-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@6ede600b
2015-11-24 16:13:30,55815-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@3c007fe5
2015-11-24 16:13:30,57015-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@62481601
2015-11-24 16:13:30,57115-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62481601
2015-11-24 16:13:30,57215-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@709e192f
2015-11-24 16:13:30,57215-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1b87966c
2015-11-24 16:13:30,57315-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62a49a92
2015-11-24 16:13:30,57315-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@24a019d6
2015-11-24 16:13:30,57315-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b004363
2015-11-24 16:13:30,57315-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e481e39
2015-11-24 16:13:30,57415-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@70b85020
2015-11-24 16:13:30,57415-11-24 16:13:30 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@54949eb0
2015-11-24 16:13:30,69615-11-24 16:13:30  INFO (Version.java:37 LINE) Version.<clinit> -> Hibernate Commons Annotations 3.2.0.Final
2015-11-24 16:13:30,70515-11-24 16:13:30  INFO (Environment.java:603 LINE) Environment.<clinit> -> Hibernate 3.6.8.Final
2015-11-24 16:13:30,70815-11-24 16:13:30  INFO (Environment.java:636 LINE) Environment.<clinit> -> hibernate.properties not found
2015-11-24 16:13:30,71215-11-24 16:13:30  INFO (Environment.java:814 LINE) Environment.buildBytecodeProvider -> Bytecode provider name : javassist
2015-11-24 16:13:30,71615-11-24 16:13:30  INFO (Environment.java:695 LINE) Environment.<clinit> -> using JDK 1.4 java.sql.Timestamp handling
2015-11-24 16:13:30,83115-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2015-11-24 16:13:30,83215-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2015-11-24 16:13:30,83315-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 16:13:30,83415-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 16:13:30,83615-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2015-11-24 16:13:30,83715-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2015-11-24 16:13:30,83815-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2015-11-24 16:13:30,83915-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2015-11-24 16:13:30,84015-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2015-11-24 16:13:30,84115-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2015-11-24 16:13:30,84115-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2015-11-24 16:13:30,84315-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2015-11-24 16:13:30,84415-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2015-11-24 16:13:30,84515-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-11-24 16:13:30,84615-11-24 16:13:30 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2015-11-24 16:13:30,88315-11-24 16:13:30 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:13:30,88415-11-24 16:13:30  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:13:30,88515-11-24 16:13:30 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:13:30,88615-11-24 16:13:30 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:13:31,00115-11-24 16:13:31 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:13:31,00215-11-24 16:13:31  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:13:31,00515-11-24 16:13:31 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:13:31,00615-11-24 16:13:31 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:13:31,08115-11-24 16:13:31 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:13:31,08615-11-24 16:13:31  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:13:31,08615-11-24 16:13:31 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:13:31,08815-11-24 16:13:31 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:13:31,21815-11-24 16:13:31 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:13:31,24215-11-24 16:13:31  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.UserOperate -> user_operate
2015-11-24 16:13:31,24915-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:13:31,25815-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userName -> userName
2015-11-24 16:13:31,25915-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPassword -> userPassword
2015-11-24 16:13:31,25915-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: phicommId -> phicomm_id
2015-11-24 16:13:31,25915-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userEmail -> userEmail
2015-11-24 16:13:31,26015-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPhoneNumb -> user_PhoneNumb
2015-11-24 16:13:31,26015-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userType -> userType
2015-11-24 16:13:31,26015-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: isChecked -> isChecked
2015-11-24 16:13:31,26015-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nickname -> nickname
2015-11-24 16:13:31,26115-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: figureurl -> figureurl
2015-11-24 16:13:31,26115-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: sex -> sex
2015-11-24 16:13:31,26115-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: province -> province
2015-11-24 16:13:31,26215-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: city -> city
2015-11-24 16:13:31,26215-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: birthday -> birthday
2015-11-24 16:13:31,26215-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openId -> open_id
2015-11-24 16:13:31,26315-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openKey -> open_key
2015-11-24 16:13:31,26315-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: accessToken -> access_token
2015-11-24 16:13:31,26415-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: expireseIn -> expirese_in
2015-11-24 16:13:31,26415-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: devinfo -> devinfo
2015-11-24 16:13:31,26415-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userinfo -> userinfo
2015-11-24 16:13:31,26415-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqq -> openqq
2015-11-24 16:13:31,26515-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqqinfo -> openqqinfo
2015-11-24 16:13:31,26515-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensina -> opensina
2015-11-24 16:13:31,26515-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensinainfo -> opensinainfo
2015-11-24 16:13:31,26615-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: createTime -> createTime
2015-11-24 16:13:31,26615-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: updateTime -> updateTime
2015-11-24 16:13:31,26615-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: lastLoginTime -> lastLoginTime
2015-11-24 16:13:31,26715-11-24 16:13:31  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.NoteNumbRecord -> note_numb_record
2015-11-24 16:13:31,26715-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:13:31,26815-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nodeNumb -> node_numb
2015-11-24 16:13:31,26815-11-24 16:13:31  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.CrashLog -> crash_log
2015-11-24 16:13:31,26815-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:13:31,26915-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: url -> url
2015-11-24 16:13:31,26915-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: describes -> describes
2015-11-24 16:13:31,26915-11-24 16:13:31 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: addDate -> addDate
2015-11-24 16:13:31,28115-11-24 16:13:31 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:13:31,28615-11-24 16:13:31 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:13:31,28715-11-24 16:13:31 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:13:31,28715-11-24 16:13:31 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:13:31,28815-11-24 16:13:31 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:13:31,28815-11-24 16:13:31 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:13:31,28815-11-24 16:13:31 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:13:31,28815-11-24 16:13:31 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:13:31,33215-11-24 16:13:31  INFO (Configuration.java:1676 LINE) Configuration.applyHibernateValidatorLegacyConstraintsOnDDL -> Hibernate Validator not found: ignoring
2015-11-24 16:13:31,37715-11-24 16:13:31 DEBUG (LoggerFactory.java:29 LINE) LoggerFactory.make -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-11-24 16:13:31,37815-11-24 16:13:31  INFO (Version.java:27 LINE) Version.<clinit> -> HV000001: Hibernate Validator 5.0.0.Final
2015-11-24 16:13:31,40815-11-24 16:13:31 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:13:31,41715-11-24 16:13:31 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:13:31,42615-11-24 16:13:31 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:13:31,68015-11-24 16:13:31  INFO (LocalSessionFactoryBean.java:780 LINE) LocalSessionFactoryBean.buildSessionFactory -> Building new Hibernate SessionFactory
2015-11-24 16:13:31,68015-11-24 16:13:31 DEBUG (Configuration.java:1854 LINE) Configuration.buildSessionFactory -> Preparing to build session factory with filters : {}
2015-11-24 16:13:31,68115-11-24 16:13:31 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:13:31,68115-11-24 16:13:31 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:13:31,68115-11-24 16:13:31 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:13:31,68115-11-24 16:13:31 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:13:31,68215-11-24 16:13:31 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:13:31,68215-11-24 16:13:31 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:13:31,68215-11-24 16:13:31 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:13:31,68315-11-24 16:13:31 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:13:31,68315-11-24 16:13:31 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:13:31,68415-11-24 16:13:31 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:13:31,68515-11-24 16:13:31 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:13:31,68615-11-24 16:13:31 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:13:31,70515-11-24 16:13:31 DEBUG (Configuration.java:1896 LINE) Configuration.enableLegacyHibernateValidator -> Legacy Validator not present in classpath, ignoring event listener registration
2015-11-24 16:13:31,70515-11-24 16:13:31 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:13:31,70615-11-24 16:13:31 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:13:31,70615-11-24 16:13:31 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:13:31,71415-11-24 16:13:31 DEBUG (HibernateSearchEventListenerRegister.java:231 LINE) HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener -> Search not present in classpath, ignoring event listener registration.
2015-11-24 16:13:31,72415-11-24 16:13:31  INFO (HibernateSearchEventListenerRegister.java:75 LINE) HibernateSearchEventListenerRegister.enableHibernateSearch -> Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2015-11-24 16:13:31,75515-11-24 16:13:31  INFO (ConnectionProviderFactory.java:173 LINE) ConnectionProviderFactory.initializeConnectionProviderFromConfig -> Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2015-11-24 16:13:32,14615-11-24 16:13:32  INFO (Dialect.java:135 LINE) Dialect.<init> -> Using dialect: org.hibernate.dialect.MySQLDialect
2015-11-24 16:13:32,16515-11-24 16:13:32  INFO (SettingsFactory.java:126 LINE) SettingsFactory.buildSettings -> Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-11-24 16:13:32,16515-11-24 16:13:32  INFO (SettingsFactory.java:132 LINE) SettingsFactory.buildSettings -> Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.25 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2015-11-24 16:13:32,16915-11-24 16:13:32  INFO (TransactionFactoryFactory.java:65 LINE) TransactionFactoryFactory.buildTransactionFactory -> Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2015-11-24 16:13:32,17115-11-24 16:13:32  INFO (TransactionManagerLookupFactory.java:83 LINE) TransactionManagerLookupFactory.getTransactionManagerLookup -> No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2015-11-24 16:13:32,17115-11-24 16:13:32  INFO (SettingsFactory.java:179 LINE) SettingsFactory.buildSettings -> Automatic flush during beforeCompletion(): disabled
2015-11-24 16:13:32,17315-11-24 16:13:32  INFO (SettingsFactory.java:183 LINE) SettingsFactory.buildSettings -> Automatic session close at end of transaction: disabled
2015-11-24 16:13:32,17315-11-24 16:13:32  INFO (SettingsFactory.java:190 LINE) SettingsFactory.buildSettings -> JDBC batch size: 25
2015-11-24 16:13:32,17315-11-24 16:13:32  INFO (SettingsFactory.java:193 LINE) SettingsFactory.buildSettings -> JDBC batch updates for versioned data: disabled
2015-11-24 16:13:32,17415-11-24 16:13:32  INFO (SettingsFactory.java:198 LINE) SettingsFactory.buildSettings -> Scrollable result sets: enabled
2015-11-24 16:13:32,17515-11-24 16:13:32 DEBUG (SettingsFactory.java:202 LINE) SettingsFactory.buildSettings -> Wrap result sets: disabled
2015-11-24 16:13:32,17515-11-24 16:13:32  INFO (SettingsFactory.java:206 LINE) SettingsFactory.buildSettings -> JDBC3 getGeneratedKeys(): enabled
2015-11-24 16:13:32,17515-11-24 16:13:32  INFO (SettingsFactory.java:210 LINE) SettingsFactory.buildSettings -> JDBC result set fetch size: 50
2015-11-24 16:13:32,17615-11-24 16:13:32  INFO (SettingsFactory.java:214 LINE) SettingsFactory.buildSettings -> Connection release mode: after_transaction
2015-11-24 16:13:32,17715-11-24 16:13:32  INFO (SettingsFactory.java:238 LINE) SettingsFactory.buildSettings -> Maximum outer join fetch depth: 2
2015-11-24 16:13:32,17815-11-24 16:13:32  INFO (SettingsFactory.java:241 LINE) SettingsFactory.buildSettings -> Default batch fetch size: 1
2015-11-24 16:13:32,17815-11-24 16:13:32  INFO (SettingsFactory.java:245 LINE) SettingsFactory.buildSettings -> Generate SQL with comments: disabled
2015-11-24 16:13:32,17815-11-24 16:13:32  INFO (SettingsFactory.java:249 LINE) SettingsFactory.buildSettings -> Order SQL updates by primary key: disabled
2015-11-24 16:13:32,17915-11-24 16:13:32  INFO (SettingsFactory.java:253 LINE) SettingsFactory.buildSettings -> Order SQL inserts for batching: disabled
2015-11-24 16:13:32,17915-11-24 16:13:32  INFO (SettingsFactory.java:431 LINE) SettingsFactory.createQueryTranslatorFactory -> Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2015-11-24 16:13:32,18415-11-24 16:13:32  INFO (ASTQueryTranslatorFactory.java:47 LINE) ASTQueryTranslatorFactory.<init> -> Using ASTQueryTranslatorFactory
2015-11-24 16:13:32,18415-11-24 16:13:32  INFO (SettingsFactory.java:261 LINE) SettingsFactory.buildSettings -> Query language substitutions: {false='N', true='Y'}
2015-11-24 16:13:32,18515-11-24 16:13:32  INFO (SettingsFactory.java:266 LINE) SettingsFactory.buildSettings -> JPA-QL strict compliance: disabled
2015-11-24 16:13:32,18515-11-24 16:13:32  INFO (SettingsFactory.java:271 LINE) SettingsFactory.buildSettings -> Second-level cache: enabled
2015-11-24 16:13:32,18515-11-24 16:13:32  INFO (SettingsFactory.java:275 LINE) SettingsFactory.buildSettings -> Query cache: enabled
2015-11-24 16:13:32,18615-11-24 16:13:32  INFO (SettingsFactory.java:406 LINE) SettingsFactory.createRegionFactory -> Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
2015-11-24 16:13:32,19115-11-24 16:13:32  INFO (RegionFactoryCacheProviderBridge.java:61 LINE) RegionFactoryCacheProviderBridge.<init> -> Cache provider: org.hibernate.cache.EhCacheProvider
2015-11-24 16:13:32,23215-11-24 16:13:32  INFO (SettingsFactory.java:285 LINE) SettingsFactory.buildSettings -> Optimize cache for minimal puts: disabled
2015-11-24 16:13:32,23315-11-24 16:13:32  INFO (SettingsFactory.java:294 LINE) SettingsFactory.buildSettings -> Structured second-level cache entries: disabled
2015-11-24 16:13:32,23315-11-24 16:13:32  INFO (SettingsFactory.java:385 LINE) SettingsFactory.createQueryCacheFactory -> Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
2015-11-24 16:13:32,24115-11-24 16:13:32  INFO (SettingsFactory.java:314 LINE) SettingsFactory.buildSettings -> Echoing all SQL to stdout
2015-11-24 16:13:32,24215-11-24 16:13:32  INFO (SettingsFactory.java:323 LINE) SettingsFactory.buildSettings -> Statistics: disabled
2015-11-24 16:13:32,24315-11-24 16:13:32  INFO (SettingsFactory.java:327 LINE) SettingsFactory.buildSettings -> Deleted entity synthetic identifier rollback: disabled
2015-11-24 16:13:32,24415-11-24 16:13:32  INFO (SettingsFactory.java:343 LINE) SettingsFactory.buildSettings -> Default entity-mode: pojo
2015-11-24 16:13:32,24415-11-24 16:13:32  INFO (SettingsFactory.java:347 LINE) SettingsFactory.buildSettings -> Named query checking : enabled
2015-11-24 16:13:32,24415-11-24 16:13:32  INFO (SettingsFactory.java:351 LINE) SettingsFactory.buildSettings -> Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2015-11-24 16:13:32,26715-11-24 16:13:32  INFO (SessionFactoryImpl.java:202 LINE) SessionFactoryImpl.<init> -> building session factory
2015-11-24 16:13:32,27415-11-24 16:13:32 DEBUG (SessionFactoryImpl.java:206 LINE) SessionFactoryImpl.<init> -> Statistics initialized [enabled=false]}
2015-11-24 16:13:32,27715-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@31aba945
2015-11-24 16:13:32,27815-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@31aba945
2015-11-24 16:13:32,27815-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@31aba945
2015-11-24 16:13:32,27915-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4f30291c
2015-11-24 16:13:32,27915-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@74cee5ed
2015-11-24 16:13:32,28015-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@5a90f6cd
2015-11-24 16:13:32,28015-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@52dc5605
2015-11-24 16:13:32,28015-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@52dc5605
2015-11-24 16:13:32,28115-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52dc5605
2015-11-24 16:13:32,28115-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@1bb08b3a
2015-11-24 16:13:32,28115-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@1bb08b3a
2015-11-24 16:13:32,28215-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1bb08b3a
2015-11-24 16:13:32,28215-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@174cc136
2015-11-24 16:13:32,28215-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@174cc136
2015-11-24 16:13:32,28315-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@174cc136
2015-11-24 16:13:32,28315-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@2afd506
2015-11-24 16:13:32,28415-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@2afd506
2015-11-24 16:13:32,28415-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2afd506
2015-11-24 16:13:32,28515-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7b948a59
2015-11-24 16:13:32,28515-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7b948a59
2015-11-24 16:13:32,28515-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@7b948a59
2015-11-24 16:13:32,28515-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@5f88a614
2015-11-24 16:13:32,28615-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@5f88a614
2015-11-24 16:13:32,28615-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5f88a614
2015-11-24 16:13:32,28615-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@86b66eb
2015-11-24 16:13:32,28715-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@86b66eb
2015-11-24 16:13:32,28715-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@86b66eb
2015-11-24 16:13:32,28715-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@782569ee
2015-11-24 16:13:32,28815-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@782569ee
2015-11-24 16:13:32,28815-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41963d89
2015-11-24 16:13:32,28815-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41963d89
2015-11-24 16:13:32,28915-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@17832d4d
2015-11-24 16:13:32,28915-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@17832d4d
2015-11-24 16:13:32,28915-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@7630e551
2015-11-24 16:13:32,29015-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@7630e551
2015-11-24 16:13:32,29015-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@5e91af0f
2015-11-24 16:13:32,29015-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@5e91af0f
2015-11-24 16:13:32,29115-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@189dcde2
2015-11-24 16:13:32,29115-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@189dcde2
2015-11-24 16:13:32,29115-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@d26626
2015-11-24 16:13:32,29215-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d26626
2015-11-24 16:13:32,29215-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d26626
2015-11-24 16:13:32,29315-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6eb2916d
2015-11-24 16:13:32,29415-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@28176fec
2015-11-24 16:13:32,29415-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@28176fec
2015-11-24 16:13:32,29415-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@28176fec
2015-11-24 16:13:32,29415-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5956c062
2015-11-24 16:13:32,29515-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@17ab25cb
2015-11-24 16:13:32,29515-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@17ab25cb
2015-11-24 16:13:32,29515-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@72a53018
2015-11-24 16:13:32,29515-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72a53018
2015-11-24 16:13:32,29515-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@68887242
2015-11-24 16:13:32,29515-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68887242
2015-11-24 16:13:32,29615-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@4a9ce1c8
2015-11-24 16:13:32,29615-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4a9ce1c8
2015-11-24 16:13:32,29615-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@46985138
2015-11-24 16:13:32,29615-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@46985138
2015-11-24 16:13:32,29615-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@76fbcbc9
2015-11-24 16:13:32,30015-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6aeb9cde
2015-11-24 16:13:32,30015-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@4f12267a
2015-11-24 16:13:32,30015-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@4f12267a
2015-11-24 16:13:32,30115-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@4f12267a
2015-11-24 16:13:32,30115-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@567c66cc
2015-11-24 16:13:32,30215-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@567c66cc
2015-11-24 16:13:32,30315-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@567c66cc
2015-11-24 16:13:32,30315-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@39990cf6
2015-11-24 16:13:32,30415-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@543b11cd
2015-11-24 16:13:32,30415-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@543b11cd
2015-11-24 16:13:32,30415-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@543b11cd
2015-11-24 16:13:32,30415-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3f511d13
2015-11-24 16:13:32,30515-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3f511d13
2015-11-24 16:13:32,30515-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3f511d13
2015-11-24 16:13:32,30515-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@3495cd
2015-11-24 16:13:32,30615-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@441154d
2015-11-24 16:13:32,30615-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@441154d
2015-11-24 16:13:32,30615-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@71172e7a
2015-11-24 16:13:32,30615-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@4139feec
2015-11-24 16:13:32,30715-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@585f257a
2015-11-24 16:13:32,30715-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@585f257a
2015-11-24 16:13:32,30715-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@44d88759
2015-11-24 16:13:32,30715-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@12f21700
2015-11-24 16:13:32,30815-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@6ede600b
2015-11-24 16:13:32,30815-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@3c007fe5
2015-11-24 16:13:32,30815-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@62481601
2015-11-24 16:13:32,30815-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62481601
2015-11-24 16:13:32,30915-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6535b8e9
2015-11-24 16:13:32,30915-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@29fefce8
2015-11-24 16:13:32,30915-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@238df8e2
2015-11-24 16:13:32,30915-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3dcecfaa
2015-11-24 16:13:32,31015-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@54a3c199
2015-11-24 16:13:32,31015-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4afb4f38
2015-11-24 16:13:32,31015-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@390e0bfd
2015-11-24 16:13:32,31015-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@49352c4e
2015-11-24 16:13:32,31115-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@3d818704
2015-11-24 16:13:32,31115-11-24 16:13:32  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@12f21700
2015-11-24 16:13:32,31115-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@437af558
2015-11-24 16:13:32,31115-11-24 16:13:32  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@44d88759
2015-11-24 16:13:32,31115-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@2c73728
2015-11-24 16:13:32,31215-11-24 16:13:32  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@6ede600b
2015-11-24 16:13:32,31215-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1928dc07
2015-11-24 16:13:32,31215-11-24 16:13:32  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@71172e7a
2015-11-24 16:13:32,31215-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@2547fcd8
2015-11-24 16:13:32,31215-11-24 16:13:32  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [blob] overrides previous : org.hibernate.type.BlobType@441154d
2015-11-24 16:13:32,31315-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2547fcd8
2015-11-24 16:13:32,31315-11-24 16:13:32  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@441154d
2015-11-24 16:13:32,31315-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@5279effd
2015-11-24 16:13:32,31315-11-24 16:13:32  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [clob] overrides previous : org.hibernate.type.ClobType@585f257a
2015-11-24 16:13:32,31315-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5279effd
2015-11-24 16:13:32,31415-11-24 16:13:32  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@585f257a
2015-11-24 16:13:32,31415-11-24 16:13:32 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@49855c78
2015-11-24 16:13:32,31415-11-24 16:13:32  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@4139feec
2015-11-24 16:13:32,31515-11-24 16:13:32 DEBUG (SessionFactoryImpl.java:228 LINE) SessionFactoryImpl.<init> -> Session factory constructed with filter configurations : {}
2015-11-24 16:13:32,31615-11-24 16:13:32 DEBUG (SessionFactoryImpl.java:232 LINE) SessionFactoryImpl.<init> -> instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, sun.boot.library.path=E:\JDK1.7\bin, java.vm.version=23.7-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.cache.use_query_cache=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\workspace\mobile-user, java.runtime.version=1.7.0_17-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=E:\JDK1.7\lib\endorsed, os.arch=amd64, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\gqy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, hibernate.cache.use_second_level_cache=true, sun.jnu.encoding=GBK, hibernate.jdbc.fetch_size=50, java.library.path=E:\JDK1.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\ProgramData\Lenovo\ReadyApps;E:\JDK\bin;E:\JDK\jre\bin;E:\Go\bin;E:\winscp\WinSCP\;E:\maven\apache-maven-3.2.3\bin;C:\Program Files (x86)\DBank\ClickUp;C:\Program Files (x86)\DBank\ClickUp;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\gqy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=after_transaction, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=gqy, java.class.path=G:\workspace\mobile-user\target\test-classes;G:\workspace\mobile-user\target\classes;H:\Respositories2\repository\com\alibaba\fastjson\1.2.4\fastjson-1.2.4.jar;H:\Respositories2\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;H:\Respositories2\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;H:\Respositories2\repository\io\netty\netty\4.0.0.Alpha8\netty-4.0.0.Alpha8.jar;H:\Respositories2\repository\jstl\jstl\1.2\jstl-1.2.jar;H:\Respositories2\repository\org\springframework\spring-aop\3.2.0.RELEASE\spring-aop-3.2.0.RELEASE.jar;H:\Respositories2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;H:\Respositories2\repository\org\springframework\spring-beans\3.2.0.RELEASE\spring-beans-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context\3.2.0.RELEASE\spring-context-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-expression\3.2.0.RELEASE\spring-expression-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context-support\3.2.0.RELEASE\spring-context-support-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-core\3.2.0.RELEASE\spring-core-3.2.0.RELEASE.jar;H:\Respositories2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;H:\Respositories2\repository\org\springframework\spring-jdbc\3.2.0.RELEASE\spring-jdbc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-orm\3.2.0.RELEASE\spring-orm-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-tx\3.2.0.RELEASE\spring-tx-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-web\3.2.0.RELEASE\spring-web-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-webmvc\3.2.0.RELEASE\spring-webmvc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\amqp\spring-amqp\1.2.0.RELEASE\spring-amqp-1.2.0.RELEASE.jar;H:\Respositories2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;H:\Respositories2\repository\com\fasterxml\jackson\core\jackson-core\2.1.0\jackson-core-2.1.0.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.13\jackson-jaxrs-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-xc\1.9.13\jackson-xc-1.9.13.jar;H:\Respositories2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;H:\Respositories2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;H:\Respositories2\repository\mysql\mysql-connector-java\5.1.25\mysql-connector-java-5.1.25.jar;H:\Respositories2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;H:\Respositories2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;H:\Respositories2\repository\org\aspectj\aspectjweaver\1.6.4\aspectjweaver-1.6.4.jar;H:\Respositories2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;H:\Respositories2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;H:\Respositories2\repository\commons-beanutils\commons-beanutils\1.9.0\commons-beanutils-1.9.0.jar;H:\Respositories2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;H:\Respositories2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;H:\Respositories2\repository\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;H:\Respositories2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;H:\Respositories2\repository\org\mybatis\mybatis-spring\1.2.0\mybatis-spring-1.2.0.jar;H:\Respositories2\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;H:\Respositories2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar;H:\Respositories2\repository\org\json\json\20090211\json-20090211.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-lgpl\1.8.1\jackson-core-lgpl-1.8.1.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-lgpl\1.8.1\jackson-mapper-lgpl-1.8.1.jar;H:\Respositories2\repository\org\freemarker\freemarker\2.3.16\freemarker-2.3.16.jar;H:\Respositories2\repository\opensymphony\sitemesh\2.4.2\sitemesh-2.4.2.jar;H:\Respositories2\repository\org\testng\testng\5.9\testng-5.9-jdk15.jar;H:\Respositories2\repository\junit\junit\4.7\junit-4.7.jar;H:\Respositories2\repository\cglib\cglib-asm\1.0\cglib-asm-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-core\1.0\jxls-core-1.0.jar;H:\Respositories2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;H:\Respositories2\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml\3.7\poi-ooxml-3.7.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml-schemas\3.7\poi-ooxml-schemas-3.7.jar;H:\Respositories2\repository\org\apache\xmlbeans\xmlbeans\2.3.0\xmlbeans-2.3.0.jar;H:\Respositories2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;H:\Respositories2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-reader\1.0\jxls-reader-1.0.jar;H:\Respositories2\repository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient\4.3.2\httpclient-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient-cache\4.3.2\httpclient-cache-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpmime\4.3.2\httpmime-4.3.2.jar;H:\Respositories2\repository\org\quartz-scheduler\quartz\1.8.6\quartz-1.8.6.jar;H:\Respositories2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;H:\Respositories2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;H:\Respositories2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;H:\Respositories2\repository\net\coobird\thumbnailator\0.4.7\thumbnailator-0.4.7.jar;H:\Respositories2\repository\jcifs\jcifs\1.3.17\jcifs-1.3.17.jar;H:\Respositories2\repository\org\apache\poi\poi\3.10.1\poi-3.10.1.jar;H:\Respositories2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;H:\Respositories2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;H:\Respositories2\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;H:\Respositories2\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;H:\Respositories2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;H:\Respositories2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;H:\Respositories2\repository\net\sf\supercsv\super-csv\2.2.0\super-csv-2.2.0.jar;H:\Respositories2\repository\org\bouncycastle\bcprov-jdk16\1.45\bcprov-jdk16-1.45.jar;H:\Respositories2\repository\jdom\jdom\1.0\jdom-1.0.jar;H:\Respositories2\repository\com\belerweb\pinyin4j\2.5.0\pinyin4j-2.5.0.jar;H:\Respositories2\repository\org\glassfish\jersey\ext\jersey-spring3\2.4.1\jersey-spring3-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-server\2.4.1\jersey-server-2.4.1.jar;H:\Respositories2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-api\2.2.0-b21\hk2-api-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\javax.inject\2.2.0-b21\javax.inject-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-locator\2.2.0-b21\hk2-locator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\asm-all-repackaged\2.2.0-b21\asm-all-repackaged-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\cglib\2.2.0-b21\cglib-2.2.0-b21.jar;H:\Respositories2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;H:\Respositories2\repository\org\glassfish\jersey\containers\jersey-container-servlet-core\2.4.1\jersey-container-servlet-core-2.4.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2\2.2.0-b21\hk2-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-utils\2.2.0-b21\hk2-utils-2.2.0-b21.jar;H:\Respositories2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;H:\Respositories2\repository\org\glassfish\hk2\config-types\2.2.0-b21\config-types-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\core\2.2.0-b21\core-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-config\2.2.0-b21\hk2-config-2.2.0-b21.jar;H:\Respositories2\repository\org\jvnet\tiger-types\1.4\tiger-types-1.4.jar;H:\Respositories2\repository\org\glassfish\hk2\external\bean-validator\2.2.0-b21\bean-validator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-runlevel\2.2.0-b21\hk2-runlevel-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\class-model\2.2.0-b21\class-model-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\spring-bridge\2.2.0-b21\spring-bridge-2.2.0-b21.jar;H:\Respositories2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\2.4.1\jersey-media-json-jackson-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-common\2.4.1\jersey-common-2.4.1.jar;H:\Respositories2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;H:\Respositories2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.1\osgi-resource-locator-1.0.1.jar;H:\Respositories2\repository\org\codehaus\groovy\groovy-all\2.2.0\groovy-all-2.2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\providers\jersey-test-framework-provider-external\2.5.1\jersey-test-framework-provider-external-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\jersey-test-framework-core\2.5.1\jersey-test-framework-core-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-client\2.5.1\jersey-client-2.5.1.jar;H:\Respositories2\repository\org\springframework\spring-test\3.2.6.RELEASE\spring-test-3.2.6.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session\1.0.1.RELEASE\spring-session-1.0.1.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session-data-redis\1.0.0.RELEASE\spring-session-data-redis-1.0.0.RELEASE.jar;H:\Respositories2\repository\org\apache\commons\commons-pool2\2.2\commons-pool2-2.2.jar;H:\Respositories2\repository\redis\clients\jedis\2.6.0\jedis-2.6.0.jar;H:\Respositories2\repository\org\springframework\data\spring-data-redis\1.4.1.RELEASE\spring-data-redis-1.4.1.RELEASE.jar;H:\Respositories2\repository\net\sf\ehcache\ehcache-core\2.6.11\ehcache-core-2.6.11.jar;H:\Respositories2\repository\org\hibernate3\hibernate3\3.0.0\hibernate3-3.0.0.jar;H:\Respositories2\repository\com\google\code\gson\gson\2.1\gson-2.1.jar;H:\Respositories2\repository\org\apache\openejb\javaee-api\5.0-1\javaee-api-5.0-1.jar;H:\Respositories2\repository\com\alibaba\druid\1.0.2\druid-1.0.2.jar;H:\Respositories2\repository\javax\faces\jsf-impl\1.2_04\jsf-impl-1.2_04.jar;H:\Respositories2\repository\javax\faces\jsf-api\1.2_04\jsf-api-1.2_04.jar;H:\Respositories2\repository\javax\transaction\jta\1.1\jta-1.1.jar;H:\Respositories2\repository\org\apache\ws\wss4j\1.5.1\wss4j-1.5.1.jar;H:\Respositories2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;H:\Respositories2\repository\hibernate\antlr\2.7.5H3\antlr-2.7.5H3.jar;H:\Respositories2\repository\javassist\javassist\3.9.0.GA\javassist-3.9.0.GA.jar;H:\Respositories2\repository\com\fx\mobile\mobile-model\0.0.1-SNAPSHOT\mobile-model-0.0.1-SNAPSHOT.jar;H:\Respositories2\repository\com\fx\mobile\mobile-core\0.0.1\mobile-core-0.0.1.jar;H:\Respositories2\repository\Decoder\sun.misc.BASE64Decoder\1.0.0\sun.misc.BASE64Decoder-1.0.0.jar;H:\Respositories2\repository\marketingFile\marketingFile\0.0.1\marketingFile-0.0.1.jar;H:\Respositories2\repository\com\qq\connect\Sdk4J\1.0\Sdk4J-1.0.jar;H:\Respositories2\repository\org\apache\commons\commons-io\1.3.2\commons-io-1.3.2.jar;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.query.substitutions=true 'Y', false 'N', hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=E:\JDK1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60855 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.fx.mobile.junit.UserOperateDaoImplTest, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_17, java.ext.dirs=E:\JDK1.7\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=E:\JDK1.7\lib\resources.jar;E:\JDK1.7\lib\rt.jar;E:\JDK1.7\lib\sunrsasign.jar;E:\JDK1.7\lib\jsse.jar;E:\JDK1.7\lib\jce.jar;E:\JDK1.7\lib\charsets.jar;E:\JDK1.7\lib\jfr.jar;E:\JDK1.7\classes, java.vendor=Oracle Corporation, hibernate.jdbc.batch_size=25, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-11-24 16:13:32,34115-11-24 16:13:32 DEBUG (CacheManager.java:684 LINE) CacheManager.parseConfiguration -> Configuring ehcache from classpath.
2015-11-24 16:13:32,34615-11-24 16:13:32 DEBUG (ConfigurationFactory.java:132 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from ehcache.xml found in the classpath: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 16:13:32,34615-11-24 16:13:32 DEBUG (ConfigurationFactory.java:98 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from URL: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 16:13:32,34715-11-24 16:13:32 DEBUG (ConfigurationFactory.java:150 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from InputStream
2015-11-24 16:13:32,41015-11-24 16:13:32 DEBUG (DiskStoreConfiguration.java:141 LINE) DiskStoreConfiguration.translatePath -> Disk Store Path: C:\Users\gqy\AppData\Local\Temp\
2015-11-24 16:13:32,43715-11-24 16:13:32 DEBUG (PropertyUtil.java:88 LINE) PropertyUtil.parseProperties -> propertiesString is null.
2015-11-24 16:13:32,45415-11-24 16:13:32 DEBUG (ConfigurationHelper.java:185 LINE) ConfigurationHelper.createCacheManagerEventListener -> No CacheManagerEventListenerFactory class specified. Skipping...
2015-11-24 16:13:32,50115-11-24 16:13:32 DEBUG (Cache.java:955 LINE) Cache.createBootstrapCacheLoader -> No BootstrapCacheLoaderFactory class specified. Skipping...
2015-11-24 16:13:32,50215-11-24 16:13:32 DEBUG (Cache.java:929 LINE) Cache.createCacheWriter -> CacheWriter factory not configured. Skipping...
2015-11-24 16:13:32,53115-11-24 16:13:32 DEBUG (ConfigurationHelper.java:96 LINE) ConfigurationHelper.createCacheExceptionHandler -> No CacheExceptionHandlerFactory class specified. Skipping...
2015-11-24 16:13:32,61615-11-24 16:13:32 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:13:32,61715-11-24 16:13:32 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:13:32,61815-11-24 16:13:32 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:13:32,92915-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.NoteNumbRecord
2015-11-24 16:13:32,92915-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from note_numb_record where id =?
2015-11-24 16:13:32,93015-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select notenumbre_.id, notenumbre_.node_numb as node2_1_ from note_numb_record notenumbre_ where notenumbre_.id=?
2015-11-24 16:13:32,93015-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into note_numb_record (node_numb, id) values (?, ?)
2015-11-24 16:13:32,93015-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update note_numb_record set node_numb=? where id=?
2015-11-24 16:13:32,93115-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from note_numb_record where id=?
2015-11-24 16:13:32,93115-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into note_numb_record (node_numb) values (?)
2015-11-24 16:13:32,93615-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.CrashLog
2015-11-24 16:13:32,93615-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from marketing1.crash_log where id =?
2015-11-24 16:13:32,93615-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select crashlog_.id, crashlog_.url as url2_, crashlog_.describes as describes2_, crashlog_.addDate as addDate2_ from marketing1.crash_log crashlog_ where crashlog_.id=?
2015-11-24 16:13:32,93715-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into marketing1.crash_log (url, describes, addDate, id) values (?, ?, ?, ?)
2015-11-24 16:13:32,93715-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update marketing1.crash_log set url=?, describes=?, addDate=? where id=?
2015-11-24 16:13:32,93715-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from marketing1.crash_log where id=?
2015-11-24 16:13:32,93715-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into marketing1.crash_log (url, describes, addDate) values (?, ?, ?)
2015-11-24 16:13:32,96815-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.UserOperate
2015-11-24 16:13:32,96815-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from user_operate where id =?
2015-11-24 16:13:32,96915-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select useroperat_.id, useroperat_.userName as userName0_, useroperat_.userPassword as userPass3_0_, useroperat_.phicomm_id as phicomm4_0_, useroperat_.userEmail as userEmail0_, useroperat_.user_PhoneNumb as user6_0_, useroperat_.userType as userType0_, useroperat_.isChecked as isChecked0_, useroperat_.nickname as nickname0_, useroperat_.figureurl as figureurl0_, useroperat_.sex as sex0_, useroperat_.province as province0_, useroperat_.city as city0_, useroperat_.birthday as birthday0_, useroperat_.open_id as open15_0_, useroperat_.open_key as open16_0_, useroperat_.access_token as access17_0_, useroperat_.expirese_in as expirese18_0_, useroperat_.devinfo as devinfo0_, useroperat_.userinfo as userinfo0_, useroperat_.openqq as openqq0_, useroperat_.openqqinfo as openqqinfo0_, useroperat_.opensina as opensina0_, useroperat_.opensinainfo as opensin24_0_, useroperat_.createTime as createTime0_, useroperat_.updateTime as updateTime0_, useroperat_.lastLoginTime as lastLog27_0_ from user_operate useroperat_ where useroperat_.id=?
2015-11-24 16:13:32,96915-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 16:13:32,96915-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update user_operate set userName=?, userPassword=?, phicomm_id=?, userEmail=?, user_PhoneNumb=?, userType=?, isChecked=?, nickname=?, figureurl=?, sex=?, province=?, city=?, birthday=?, open_id=?, open_key=?, access_token=?, expirese_in=?, devinfo=?, userinfo=?, openqq=?, openqqinfo=?, opensina=?, opensinainfo=?, createTime=?, updateTime=?, lastLoginTime=? where id=?
2015-11-24 16:13:32,97015-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from user_operate where id=?
2015-11-24 16:13:32,97015-11-24 16:13:32 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 16:13:33,01415-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [NONE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:13:33,01615-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:13:33,01615-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:13:33,01715-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE_NOWAIT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:13:33,01715-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [FORCE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:13:33,01815-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? lock in share mode
2015-11-24 16:13:33,04415-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_WRITE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:13:33,04515-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:13:33,04615-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:13:33,04615-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:13:33,05815-11-24 16:13:33 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:13:33,05915-11-24 16:13:33 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:13:33,06315-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [NONE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:13:33,06415-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:13:33,06415-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:13:33,06515-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE_NOWAIT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:13:33,06615-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [FORCE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:13:33,06615-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? lock in share mode
2015-11-24 16:13:33,06715-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_WRITE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:13:33,06715-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:13:33,06815-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:13:33,06815-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:13:33,06915-11-24 16:13:33 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:13:33,06915-11-24 16:13:33 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:13:33,07015-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [NONE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:13:33,07115-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:13:33,07115-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:13:33,07215-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE_NOWAIT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:13:33,07315-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [FORCE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:13:33,07415-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? lock in share mode
2015-11-24 16:13:33,07515-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_WRITE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:13:33,07615-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:13:33,07615-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:13:33,07715-11-24 16:13:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:13:33,07715-11-24 16:13:33 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:13:33,07715-11-24 16:13:33 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:13:33,07915-11-24 16:13:33 DEBUG (SessionFactoryObjectFactory.java:61 LINE) SessionFactoryObjectFactory.<clinit> -> initializing class SessionFactoryObjectFactory
2015-11-24 16:13:33,08115-11-24 16:13:33 DEBUG (SessionFactoryObjectFactory.java:99 LINE) SessionFactoryObjectFactory.addInstance -> registered: 4ec1c2cf-816e-48a1-83e9-775812cc9db5 (unnamed)
2015-11-24 16:13:33,08115-11-24 16:13:33  INFO (SessionFactoryObjectFactory.java:105 LINE) SessionFactoryObjectFactory.addInstance -> Not binding factory to JNDI, no JNDI name configured
2015-11-24 16:13:33,08115-11-24 16:13:33 DEBUG (SessionFactoryImpl.java:369 LINE) SessionFactoryImpl.<init> -> instantiated session factory
2015-11-24 16:13:33,08815-11-24 16:13:33  INFO (SchemaUpdate.java:155 LINE) SchemaUpdate.execute -> Running hbm2ddl schema update
2015-11-24 16:13:33,08915-11-24 16:13:33  INFO (SchemaUpdate.java:167 LINE) SchemaUpdate.execute -> fetching database metadata
2015-11-24 16:13:33,09115-11-24 16:13:33  INFO (SchemaUpdate.java:179 LINE) SchemaUpdate.execute -> updating schema
2015-11-24 16:13:33,09215-11-24 16:13:33 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:13:33,09215-11-24 16:13:33 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:13:33,09215-11-24 16:13:33 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:13:33,09315-11-24 16:13:33 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:13:33,09315-11-24 16:13:33 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:13:33,09315-11-24 16:13:33 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:13:33,09315-11-24 16:13:33 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:13:33,09415-11-24 16:13:33 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:13:33,09415-11-24 16:13:33 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:13:33,09615-11-24 16:13:33 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:13:33,09615-11-24 16:13:33 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:13:33,09715-11-24 16:13:33 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:13:33,12715-11-24 16:13:33  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 16:13:33,12815-11-24 16:13:33 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:13:33,18315-11-24 16:13:33  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.note_numb_record
2015-11-24 16:13:33,18315-11-24 16:13:33  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [id, node_numb]
2015-11-24 16:13:33,18315-11-24 16:13:33  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 16:13:33,18315-11-24 16:13:33  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 16:13:33,20415-11-24 16:13:33  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.user_operate
2015-11-24 16:13:33,20415-11-24 16:13:33  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [birthday, sex, updatetime, open_id, openqq, opensina, userinfo, user_phonenumb, city, createtime, id, userpassword, username, lastlogintime, province, opensinainfo, figureurl, phicomm_id, open_key, access_token, nickname, usertype, ischecked, openqqinfo, useremail, devinfo, expirese_in]
2015-11-24 16:13:33,20415-11-24 16:13:33  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 16:13:33,20515-11-24 16:13:33  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 16:13:33,20815-11-24 16:13:33  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 16:13:33,20915-11-24 16:13:33 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:13:33,21015-11-24 16:13:33 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:13:33,21115-11-24 16:13:33 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:13:33,21115-11-24 16:13:33 DEBUG (SchemaUpdate.java:203 LINE) SchemaUpdate.execute -> create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 16:13:33,21315-11-24 16:13:33 ERROR (SchemaUpdate.java:212 LINE) SchemaUpdate.execute -> Unsuccessful: create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 16:13:33,21315-11-24 16:13:33 ERROR (SchemaUpdate.java:213 LINE) SchemaUpdate.execute -> Unknown database 'marketing1'
2015-11-24 16:13:33,21315-11-24 16:13:33  INFO (SchemaUpdate.java:217 LINE) SchemaUpdate.execute -> schema update complete
2015-11-24 16:13:33,24115-11-24 16:13:33  INFO (UpdateTimestampsCache.java:57 LINE) UpdateTimestampsCache.<init> -> starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:13:33,24415-11-24 16:13:33  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
2015-11-24 16:13:33,28615-11-24 16:13:33 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:13:33,30015-11-24 16:13:33 DEBUG (DiskStorePathManager.java:169 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Using diskstore path C:\Users\gqy\AppData\Local\Temp
2015-11-24 16:13:33,30015-11-24 16:13:33 DEBUG (DiskStorePathManager.java:170 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Holding exclusive lock on C:\Users\gqy\AppData\Local\Temp\.ehcache-diskstore.lock
2015-11-24 16:13:33,30115-11-24 16:13:33 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 16:13:33,30215-11-24 16:13:33 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:13:33,31615-11-24 16:13:33 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:13:33,31715-11-24 16:13:33 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:13:33,33115-11-24 16:13:33 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:13:33,33215-11-24 16:13:33 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.UpdateTimestampsCache'.
2015-11-24 16:13:33,33215-11-24 16:13:33 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:13:33,33515-11-24 16:13:33  INFO (StandardQueryCache.java:76 LINE) StandardQueryCache.<init> -> starting query cache at region: org.hibernate.cache.StandardQueryCache
2015-11-24 16:13:33,33715-11-24 16:13:33  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
2015-11-24 16:13:33,33715-11-24 16:13:33 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.StandardQueryCache
2015-11-24 16:13:33,33915-11-24 16:13:33 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 16:13:33,34015-11-24 16:13:33 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:13:33,34115-11-24 16:13:33 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:13:33,34215-11-24 16:13:33 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:13:33,34615-11-24 16:13:33 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.StandardQueryCache
2015-11-24 16:13:33,34715-11-24 16:13:33 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.StandardQueryCache'.
2015-11-24 16:13:33,34715-11-24 16:13:33 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.StandardQueryCache
2015-11-24 16:13:33,34815-11-24 16:13:33 DEBUG (SessionFactoryImpl.java:539 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named HQL queries
2015-11-24 16:13:33,34815-11-24 16:13:33 DEBUG (SessionFactoryImpl.java:559 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named SQL queries
2015-11-24 16:13:33,35015-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:33,35215-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'sessionFactory'
2015-11-24 16:13:33,35215-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:33,36215-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userOperateDao'
2015-11-24 16:13:33,36215-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:33,36515-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userOperateDao'
2015-11-24 16:13:33,36515-11-24 16:13:33 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userInterfaceDao'
2015-11-24 16:13:33,36515-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userInterfaceDao'
2015-11-24 16:13:33,36715-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userInterfaceDao' to allow for resolving potential circular references
2015-11-24 16:13:33,41715-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:13:33,43115-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userInterfaceDao'
2015-11-24 16:13:33,43315-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:33,43515-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userInterfaceDao'
2015-11-24 16:13:33,43515-11-24 16:13:33 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'noteNumRecordDao'
2015-11-24 16:13:33,43615-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'noteNumRecordDao'
2015-11-24 16:13:33,43715-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'noteNumRecordDao' to allow for resolving potential circular references
2015-11-24 16:13:33,44815-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:13:33,44915-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'noteNumRecordDao'
2015-11-24 16:13:33,45215-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:33,45315-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'noteNumRecordDao'
2015-11-24 16:13:33,45415-11-24 16:13:33 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'crashLogDao'
2015-11-24 16:13:33,45415-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'crashLogDao'
2015-11-24 16:13:33,45515-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'crashLogDao' to allow for resolving potential circular references
2015-11-24 16:13:33,46715-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:13:33,46815-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'crashLogDao'
2015-11-24 16:13:33,46815-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:33,46915-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'crashLogDao'
2015-11-24 16:13:33,46915-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'dataSource'
2015-11-24 16:13:33,46915-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:13:33,46915-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:13:33,47015-11-24 16:13:33 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:13:33,47015-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:13:33,47315-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2015-11-24 16:13:33,48615-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:13:33,48615-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:13:33,48715-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:13:33,48715-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:33,48815-11-24 16:13:33 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'transactionManager'
2015-11-24 16:13:33,48815-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'transactionManager'
2015-11-24 16:13:33,50015-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-11-24 16:13:33,51215-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:13:33,51315-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-11-24 16:13:33,53115-11-24 16:13:33  INFO (HibernateTransactionManager.java:415 LINE) HibernateTransactionManager.afterPropertiesSet -> Using DataSource [org.apache.commons.dbcp.BasicDataSource@46c4ee90] of Hibernate SessionFactory for HibernateTransactionManager
2015-11-24 16:13:33,53115-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:33,54915-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'transactionManager'
2015-11-24 16:13:33,54915-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:13:33,55015-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:13:33,55015-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:13:33,55115-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:13:33,55115-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:13:33,55215-11-24 16:13:33 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'operateService'
2015-11-24 16:13:33,55215-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'operateService'
2015-11-24 16:13:33,56115-11-24 16:13:33 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserOperateServiceImp]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 16:13:33,56115-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'operateService' to allow for resolving potential circular references
2015-11-24 16:13:33,56715-11-24 16:13:33 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'operateService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 16:13:33,67515-11-24 16:13:33 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'fileRemote'
2015-11-24 16:13:33,67615-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'fileRemote'
2015-11-24 16:13:33,68315-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'fileRemote' to allow for resolving potential circular references
2015-11-24 16:13:33,71015-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'fileRemote'
2015-11-24 16:13:33,73215-11-24 16:13:33 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static
2015-11-24 16:13:33,74015-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'fileRemote'
2015-11-24 16:13:33,74115-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 16:13:33,74415-11-24 16:13:33 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'operateService' to bean named 'userOperateDao'
2015-11-24 16:13:33,74515-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:33,75215-11-24 16:13:33 DEBUG (AbstractFallbackTransactionAttributeSource.java:106 LINE) AbstractFallbackTransactionAttributeSource.getTransactionAttribute -> Adding transactional method 'registAccount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '',-java.lang.Throwable
2015-11-24 16:13:33,75415-11-24 16:13:33 DEBUG (AbstractAutoProxyCreator.java:534 LINE) AbstractAutoProxyCreator.buildAdvisors -> Creating implicit proxy for bean 'operateService' with 0 common interceptors and 1 specific interceptors
2015-11-24 16:13:33,75515-11-24 16:13:33 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.fx.mobile.user.service.impl.UserOperateServiceImp@7fc6ab97]
2015-11-24 16:13:33,78815-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'operateService'
2015-11-24 16:13:33,78915-11-24 16:13:33 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'SpringContextUtil'
2015-11-24 16:13:33,79015-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'SpringContextUtil'
2015-11-24 16:13:33,79115-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'SpringContextUtil' to allow for resolving potential circular references
2015-11-24 16:13:33,83015-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:33,83615-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'SpringContextUtil'
2015-11-24 16:13:33,83615-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'fileRemote'
2015-11-24 16:13:33,83715-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'corePropertyConfigurer'
2015-11-24 16:13:33,83715-11-24 16:13:33 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userinterfaceService'
2015-11-24 16:13:33,83815-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userinterfaceService'
2015-11-24 16:13:33,83915-11-24 16:13:33 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserInterfaceServiceImpl]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 16:13:33,83915-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userinterfaceService' to allow for resolving potential circular references
2015-11-24 16:13:33,85215-11-24 16:13:33 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'userinterfaceService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 16:13:33,85315-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userInterfaceDao'
2015-11-24 16:13:33,85315-11-24 16:13:33 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'userinterfaceService' to bean named 'userInterfaceDao'
2015-11-24 16:13:33,85415-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:33,85515-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userinterfaceService'
2015-11-24 16:13:33,85515-11-24 16:13:33 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'urlProperties'
2015-11-24 16:13:33,85615-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'urlProperties'
2015-11-24 16:13:33,85715-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'urlProperties' to allow for resolving potential circular references
2015-11-24 16:13:33,86115-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:33,86215-11-24 16:13:33 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'urlProperties'
2015-11-24 16:13:33,86515-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:13:33,86815-11-24 16:13:33 DEBUG (AbstractApplicationContext.java:858 LINE) AbstractApplicationContext.initLifecycleProcessor -> Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@2c8a964]
2015-11-24 16:13:33,86915-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 16:13:33,87215-11-24 16:13:33 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-11-24 16:13:33,87315-11-24 16:13:33 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-11-24 16:13:33,87415-11-24 16:13:33 DEBUG (PropertySourcesPropertyResolver.java:93 LINE) PropertySourcesPropertyResolver.getProperty -> Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-11-24 16:13:33,87415-11-24 16:13:33 DEBUG (CacheAwareContextLoaderDelegate.java:93 LINE) CacheAwareContextLoaderDelegate.loadContext -> Storing ApplicationContext in cache under key [[MergedContextConfiguration@b20be93 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 16:13:33,88115-11-24 16:13:33 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 16:13:33,88115-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 16:13:33,88415-11-24 16:13:33 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:13:33,98515-11-24 16:13:33 DEBUG (SessionFactoryUtils.java:322 LINE) SessionFactoryUtils.doGetSession -> Opening Hibernate Session
2015-11-24 16:13:34,04315-11-24 16:13:34 DEBUG (SessionImpl.java:265 LINE) SessionImpl.<init> -> opened session at timestamp: 5932453126086656
2015-11-24 16:13:34,15015-11-24 16:13:34 DEBUG (QueryTranslatorImpl.java:274 LINE) QueryTranslatorImpl.parse -> parse() - HQL: from com.fx.mobile.model.UserOperate where (userPhoneNumb=? or userName=?  or userEmail=?)  and userPassword=?
2015-11-24 16:13:34,16715-11-24 16:13:34 DEBUG (QueryTranslatorImpl.java:293 LINE) QueryTranslatorImpl.showHqlAst -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'fx'
    |           |  |  \-[IDENT] Node: 'mobile'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'UserOperate'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[OR] Node: 'or'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'userPhoneNumb'
          |  |  |  \-[PARAM] Node: '?'
          |  |  \-[EQ] Node: '='
          |  |     +-[IDENT] Node: 'userName'
          |  |     \-[PARAM] Node: '?'
          |  \-[EQ] Node: '='
          |     +-[IDENT] Node: 'userEmail'
          |     \-[PARAM] Node: '?'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'userPassword'
             \-[PARAM] Node: '?'

2015-11-24 16:13:34,16815-11-24 16:13:34 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:13:34,20715-11-24 16:13:34 DEBUG (HqlSqlBaseWalker.java:111 LINE) HqlSqlBaseWalker.beforeStatement -> select << begin [level=1, statement=select]
2015-11-24 16:13:34,23115-11-24 16:13:34 DEBUG (FromElement.java:157 LINE) FromElement.doInitialize -> FromClause{level=1} :  com.fx.mobile.model.UserOperate (no alias) -> useroperat0_
2015-11-24 16:13:34,23515-11-24 16:13:34 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:13:34,23815-11-24 16:13:34 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userPhoneNumb -> org.hibernate.type.StringType@17832d4d
2015-11-24 16:13:34,24015-11-24 16:13:34 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userPhoneNumb -> useroperat0_.user_PhoneNumb
2015-11-24 16:13:34,24615-11-24 16:13:34 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:13:34,24715-11-24 16:13:34 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userName -> org.hibernate.type.StringType@17832d4d
2015-11-24 16:13:34,24715-11-24 16:13:34 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userName -> useroperat0_.userName
2015-11-24 16:13:34,24815-11-24 16:13:34 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:13:34,24815-11-24 16:13:34 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userEmail -> org.hibernate.type.StringType@17832d4d
2015-11-24 16:13:34,24915-11-24 16:13:34 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userEmail -> useroperat0_.userEmail
2015-11-24 16:13:34,24915-11-24 16:13:34 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:13:34,24915-11-24 16:13:34 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userPassword -> org.hibernate.type.StringType@17832d4d
2015-11-24 16:13:34,25015-11-24 16:13:34 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userPassword -> useroperat0_.userPassword
2015-11-24 16:13:34,26515-11-24 16:13:34 DEBUG (HqlSqlBaseWalker.java:117 LINE) HqlSqlBaseWalker.beforeStatementCompletion -> select : finishing up [level=1, statement=select]
2015-11-24 16:13:34,26515-11-24 16:13:34 DEBUG (HqlSqlWalker.java:625 LINE) HqlSqlWalker.processQuery -> processQuery() :  ( SELECT ( FromClause{level=1} user_operate useroperat0_ ) ( where ( and ( or ( or ( = ( useroperat0_.user_PhoneNumb {synthetic-alias} userPhoneNumb ) ? ) ( = ( useroperat0_.userName {synthetic-alias} userName ) ? ) ) ( = ( useroperat0_.userEmail {synthetic-alias} userEmail ) ? ) ) ( = ( useroperat0_.userPassword {synthetic-alias} userPassword ) ? ) ) ) )
2015-11-24 16:13:34,32415-11-24 16:13:34 DEBUG (HqlSqlWalker.java:868 LINE) HqlSqlWalker.createSelectClauseFromFromClause -> Derived SELECT clause created.
2015-11-24 16:13:34,33015-11-24 16:13:34 DEBUG (JoinProcessor.java:179 LINE) JoinProcessor.addJoinNodes -> Using FROM fragment [user_operate useroperat0_]
2015-11-24 16:13:34,33115-11-24 16:13:34 DEBUG (HqlSqlBaseWalker.java:123 LINE) HqlSqlBaseWalker.afterStatementCompletion -> select >> end [level=1, statement=select]
2015-11-24 16:13:34,33415-11-24 16:13:34 DEBUG (QueryTranslatorImpl.java:260 LINE) QueryTranslatorImpl.analyze -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_operate)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'useroperat0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}}
    |  \-[SQL_TOKEN] SqlFragment: 'useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[useroperat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_operate useroperat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[OR] SqlNode: 'or'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'useroperat0_.user_PhoneNumb' {propertyName=userPhoneNumb,dereferenceType=ALL,propertyPath=userPhoneNumb,path={synthetic-alias}.userPhoneNumb,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'userPhoneNumb' {originalText=userPhoneNumb}
          |  |  |  \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.StringType@17832d4d}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'useroperat0_.userName' {propertyName=userName,dereferenceType=ALL,propertyPath=userName,path={synthetic-alias}.userName,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |  |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          |  |     \-[PARAM] ParameterNode: '?' {ordinal=1, expectedType=org.hibernate.type.StringType@17832d4d}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'useroperat0_.userEmail' {propertyName=userEmail,dereferenceType=ALL,propertyPath=userEmail,path={synthetic-alias}.userEmail,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |  \-[IDENT] IdentNode: 'userEmail' {originalText=userEmail}
          |     \-[PARAM] ParameterNode: '?' {ordinal=2, expectedType=org.hibernate.type.StringType@17832d4d}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'useroperat0_.userPassword' {propertyName=userPassword,dereferenceType=ALL,propertyPath=userPassword,path={synthetic-alias}.userPassword,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'userPassword' {originalText=userPassword}
             \-[PARAM] ParameterNode: '?' {ordinal=3, expectedType=org.hibernate.type.StringType@17832d4d}

2015-11-24 16:13:34,33515-11-24 16:13:34 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:13:34,35415-11-24 16:13:34 DEBUG (QueryTranslatorImpl.java:243 LINE) QueryTranslatorImpl.generate -> HQL: from com.fx.mobile.model.UserOperate where (userPhoneNumb=? or userName=?  or userEmail=?)  and userPassword=?
2015-11-24 16:13:34,35415-11-24 16:13:34 DEBUG (QueryTranslatorImpl.java:244 LINE) QueryTranslatorImpl.generate -> SQL: select useroperat0_.id as id0_, useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_ from user_operate useroperat0_ where (useroperat0_.user_PhoneNumb=? or useroperat0_.userName=? or useroperat0_.userEmail=?) and useroperat0_.userPassword=?
2015-11-24 16:13:34,35415-11-24 16:13:34 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:13:34,36715-11-24 16:13:34 DEBUG (AbstractBatcher.java:410 LINE) AbstractBatcher.logOpenPreparedStatement -> about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-11-24 16:13:34,36815-11-24 16:13:34 DEBUG (ConnectionManager.java:444 LINE) ConnectionManager.openConnection -> opening JDBC connection
2015-11-24 16:13:34,37015-11-24 16:13:34 DEBUG (SQLStatementLogger.java:111 LINE) SQLStatementLogger.logStatement -> 
    select
        useroperat0_.id as id0_,
        useroperat0_.userName as userName0_,
        useroperat0_.userPassword as userPass3_0_,
        useroperat0_.phicomm_id as phicomm4_0_,
        useroperat0_.userEmail as userEmail0_,
        useroperat0_.user_PhoneNumb as user6_0_,
        useroperat0_.userType as userType0_,
        useroperat0_.isChecked as isChecked0_,
        useroperat0_.nickname as nickname0_,
        useroperat0_.figureurl as figureurl0_,
        useroperat0_.sex as sex0_,
        useroperat0_.province as province0_,
        useroperat0_.city as city0_,
        useroperat0_.birthday as birthday0_,
        useroperat0_.open_id as open15_0_,
        useroperat0_.open_key as open16_0_,
        useroperat0_.access_token as access17_0_,
        useroperat0_.expirese_in as expirese18_0_,
        useroperat0_.devinfo as devinfo0_,
        useroperat0_.userinfo as userinfo0_,
        useroperat0_.openqq as openqq0_,
        useroperat0_.openqqinfo as openqqinfo0_,
        useroperat0_.opensina as opensina0_,
        useroperat0_.opensinainfo as opensin24_0_,
        useroperat0_.createTime as createTime0_,
        useroperat0_.updateTime as updateTime0_,
        useroperat0_.lastLoginTime as lastLog27_0_ 
    from
        user_operate useroperat0_ 
    where
        (
            useroperat0_.user_PhoneNumb=? 
            or useroperat0_.userName=? 
            or useroperat0_.userEmail=?
        ) 
        and useroperat0_.userPassword=?
2015-11-24 16:13:34,38715-11-24 16:13:34 DEBUG (AbstractBatcher.java:426 LINE) AbstractBatcher.logOpenResults -> about to open ResultSet (open ResultSets: 0, globally: 0)
2015-11-24 16:13:34,39115-11-24 16:13:34 DEBUG (Loader.java:1322 LINE) Loader.getRow -> result row: EntityKey[com.fx.mobile.model.UserOperate#2]
2015-11-24 16:13:34,39815-11-24 16:13:34 DEBUG (AbstractBatcher.java:433 LINE) AbstractBatcher.logCloseResults -> about to close ResultSet (open ResultSets: 1, globally: 1)
2015-11-24 16:13:34,39915-11-24 16:13:34 DEBUG (AbstractBatcher.java:418 LINE) AbstractBatcher.logClosePreparedStatement -> about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-11-24 16:13:34,39915-11-24 16:13:34 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 16:13:34,39915-11-24 16:13:34 DEBUG (ConnectionManager.java:464 LINE) ConnectionManager.closeConnection -> releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-11-24 16:13:34,40115-11-24 16:13:34 DEBUG (TwoPhaseLoad.java:130 LINE) TwoPhaseLoad.initializeEntity -> resolving associations for [com.fx.mobile.model.UserOperate#2]
2015-11-24 16:13:34,40415-11-24 16:13:34 DEBUG (TwoPhaseLoad.java:255 LINE) TwoPhaseLoad.initializeEntity -> done materializing entity [com.fx.mobile.model.UserOperate#2]
2015-11-24 16:13:34,40515-11-24 16:13:34 DEBUG (StatefulPersistenceContext.java:893 LINE) StatefulPersistenceContext.initializeNonLazyCollections -> initializing non-lazy collections
2015-11-24 16:13:34,40715-11-24 16:13:34 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 16:13:34,40715-11-24 16:13:34 DEBUG (HibernateAccessor.java:389 LINE) HibernateAccessor.flushIfNecessary -> Eagerly flushing Hibernate session
2015-11-24 16:13:34,40815-11-24 16:13:34 DEBUG (AbstractFlushingEventListener.java:134 LINE) AbstractFlushingEventListener.prepareEntityFlushes -> processing flush-time cascades
2015-11-24 16:13:34,41115-11-24 16:13:34 DEBUG (AbstractFlushingEventListener.java:177 LINE) AbstractFlushingEventListener.prepareCollectionFlushes -> dirty checking collections
2015-11-24 16:13:34,41315-11-24 16:13:34 DEBUG (AbstractFlushingEventListener.java:108 LINE) AbstractFlushingEventListener.flushEverythingToExecutions -> Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2015-11-24 16:13:34,41415-11-24 16:13:34 DEBUG (AbstractFlushingEventListener.java:114 LINE) AbstractFlushingEventListener.flushEverythingToExecutions -> Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-11-24 16:13:34,41515-11-24 16:13:34 DEBUG (Printer.java:106 LINE) Printer.toString -> listing entities:
2015-11-24 16:13:34,41515-11-24 16:13:34 DEBUG (Printer.java:113 LINE) Printer.toString -> com.fx.mobile.model.UserOperate{createTime=null, birthday=null, sex=null, accessToken=a75e2666765d54ebe5cfcd8f919d4a40, openqq=null, userPassword=e10adc3949ba59abbe56e057, opensina=null, userEmail=null, userinfo=null, openKey=dbd2a27b2d6b4e0754b8539448fb3377, userType=userSrc, city=null, id=2, isChecked=null, province=null, userName=芳草碧连天, expireseIn=2015-11-23 15:21:49, opensinainfo=null, figureurl=null, lastLoginTime=null, updateTime=null, nickname=null, userPhoneNumb=18251901682, phicommId=124, openqqinfo=null, devinfo=null, openId=6f06d7f4-89ec-47ce-8cc2-7075223f6feb}
2015-11-24 16:13:34,41615-11-24 16:13:34 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 16:13:34,41615-11-24 16:13:34 DEBUG (SessionFactoryUtils.java:800 LINE) SessionFactoryUtils.closeSession -> Closing Hibernate Session
2015-11-24 16:13:34,43715-11-24 16:13:34 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@7a79f5f7 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@5d0369f2, testMethod = getUserByNameAndPass@UserOperateDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@b20be93 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 16:13:34,43815-11-24 16:13:34 DEBUG (DirtiesContextTestExecutionListener.java:138 LINE) DirtiesContextTestExecutionListener.afterTestClass -> After test class: context [[TestContext@7a79f5f7 testClass = UserOperateDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@b20be93 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
2015-11-24 16:13:34,44015-11-24 16:13:34  INFO (AbstractApplicationContext.java:1042 LINE) AbstractApplicationContext.doClose -> Closing org.springframework.context.support.GenericApplicationContext@1929d16a: startup date [Tue Nov 24 16:13:29 CST 2015]; root of context hierarchy
2015-11-24 16:13:34,44115-11-24 16:13:34 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 16:13:34,44115-11-24 16:13:34  INFO (DefaultSingletonBeanRegistry.java:444 LINE) DefaultSingletonBeanRegistry.destroySingletons -> Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@816d9ce: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 16:13:34,44615-11-24 16:13:34 DEBUG (DefaultSingletonBeanRegistry.java:500 LINE) DefaultSingletonBeanRegistry.destroyBean -> Retrieved dependent beans for bean 'userOperateDao': [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:13:34,44715-11-24 16:13:34 DEBUG (DisposableBeanAdapter.java:219 LINE) DisposableBeanAdapter.destroy -> Invoking destroy() on bean with name 'sessionFactory'
2015-11-24 16:13:34,44715-11-24 16:13:34  INFO (AbstractSessionFactoryBean.java:223 LINE) AbstractSessionFactoryBean.destroy -> Closing Hibernate SessionFactory
2015-11-24 16:13:34,44715-11-24 16:13:34  INFO (SessionFactoryImpl.java:927 LINE) SessionFactoryImpl.close -> closing
2015-11-24 16:13:34,53615-11-24 16:13:34 DEBUG (DisposableBeanAdapter.java:295 LINE) DisposableBeanAdapter.invokeCustomDestroyMethod -> Invoking destroy method 'close' on bean with name 'dataSource'
2015-11-24 16:14:19,91615-11-24 16:14:19 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 16:14:20,06715-11-24 16:14:20 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@2cf48a01 declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 16:14:20,07015-11-24 16:14:20 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:14:20,07715-11-24 16:14:20 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 16:14:20,14515-11-24 16:14:20 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:14:20,14615-11-24 16:14:20 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:14:20,15015-11-24 16:14:20 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:14:20,15115-11-24 16:14:20 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:14:20,15715-11-24 16:14:20 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:14:20,15915-11-24 16:14:20 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:14:20,16815-11-24 16:14:20 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:14:20,16915-11-24 16:14:20 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:14:20,17015-11-24 16:14:20 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:14:20,17015-11-24 16:14:20 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:14:20,17415-11-24 16:14:20 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:14:20,17515-11-24 16:14:20 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:14:20,18415-11-24 16:14:20 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@7ce6de16 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@18feb66a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a79f5f7 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 16:14:20,18515-11-24 16:14:20 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@7a79f5f7 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 16:14:20,18615-11-24 16:14:20 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@7a79f5f7 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 16:14:20,50515-11-24 16:14:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:14:20,50715-11-24 16:14:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:14:20,50915-11-24 16:14:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:14:20,51015-11-24 16:14:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:14:20,51915-11-24 16:14:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:14:20,52015-11-24 16:14:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:14:20,52115-11-24 16:14:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:14:20,52115-11-24 16:14:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:14:20,53115-11-24 16:14:20 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 16:14:20,53215-11-24 16:14:20 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 16:14:20,53815-11-24 16:14:20 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 16:14:20,54015-11-24 16:14:20  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 16:14:20,54615-11-24 16:14:20 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:14:20,64215-11-24 16:14:20 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 16:14:20,64915-11-24 16:14:20 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 16:14:20,65215-11-24 16:14:20 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:14:20,83615-11-24 16:14:20 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:14:20,87315-11-24 16:14:20  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 16:14:20,87615-11-24 16:14:20 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:14:20,87815-11-24 16:14:20 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:14:20,95115-11-24 16:14:20 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:14:20,96915-11-24 16:14:20  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 16:14:20,97315-11-24 16:14:20 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:14:20,98715-11-24 16:14:20 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:14:21,09215-11-24 16:14:21 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 16:14:21,09515-11-24 16:14:21 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 16:14:21,10215-11-24 16:14:21 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:14:21,11415-11-24 16:14:21 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 16:14:21,14515-11-24 16:14:21  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 16:14:21,14715-11-24 16:14:21 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:14:21,14915-11-24 16:14:21 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:14:21,20215-11-24 16:14:21 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 16:14:21,24815-11-24 16:14:21 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 16:14:21,26615-11-24 16:14:21 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:14:21,31715-11-24 16:14:21  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 16:14:21,32115-11-24 16:14:21  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 16:14:21,33115-11-24 16:14:21 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 16:14:21,33115-11-24 16:14:21 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 16:14:21,33215-11-24 16:14:21 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 16:14:21,33415-11-24 16:14:21 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 16:14:21,37015-11-24 16:14:21 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 16:14:21,44115-11-24 16:14:21 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 16:14:21,44315-11-24 16:14:21 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 16:14:21,44615-11-24 16:14:21 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 16:14:21,45315-11-24 16:14:21  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 16:14:21,45415-11-24 16:14:21  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 16:14:21,45515-11-24 16:14:21 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:14:21,45915-11-24 16:14:21 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:14:21,47815-11-24 16:14:21 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:14:21,47815-11-24 16:14:21 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 16:14:21,48615-11-24 16:14:21  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@588b28e0: startup date [Tue Nov 24 16:14:21 CST 2015]; root of context hierarchy
2015-11-24 16:14:21,48715-11-24 16:14:21 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@588b28e0: org.springframework.beans.factory.support.DefaultListableBeanFactory@27faefe0: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 16:14:21,53515-11-24 16:14:21 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:14:21,53515-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:14:21,60915-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:14:21,61215-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:14:21,67615-11-24 16:14:21 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 16:14:21,67715-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 16:14:21,68015-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 16:14:21,80615-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 16:14:21,80715-11-24 16:14:21  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 16:14:21,80715-11-24 16:14:21  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 16:14:21,80815-11-24 16:14:21  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 16:14:21,81815-11-24 16:14:21 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:14:21,81815-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:14:21,82115-11-24 16:14:21  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 16:14:21,82115-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:14:21,82215-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:14:21,82315-11-24 16:14:21 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:14:21,82315-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:14:21,82915-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:14:21,83015-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:14:21,83015-11-24 16:14:21 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:14:21,83115-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:14:21,83715-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:14:21,83715-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:14:21,83815-11-24 16:14:21 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:14:21,83915-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:14:21,84015-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:14:21,84015-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:14:21,84115-11-24 16:14:21 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:14:21,84115-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:14:21,84115-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 16:14:21,84115-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:14:21,84215-11-24 16:14:21 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:14:21,84215-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:14:21,85515-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 16:14:21,87515-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:14:21,87815-11-24 16:14:21 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@24360ac1]
2015-11-24 16:14:21,88215-11-24 16:14:21 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1bc50966]
2015-11-24 16:14:21,88815-11-24 16:14:21  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@27faefe0: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 16:14:21,88915-11-24 16:14:21 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 16:14:21,88915-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 16:14:21,92015-11-24 16:14:21 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 16:14:22,00015-11-24 16:14:22 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 16:14:22,00115-11-24 16:14:22 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 16:14:22,01615-11-24 16:14:22 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 16:14:22,03215-11-24 16:14:22 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 16:14:22,03215-11-24 16:14:22 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 16:14:22,21615-11-24 16:14:22 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 16:14:22,23015-11-24 16:14:22 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:14:22,23115-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:14:22,23215-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:14:22,23215-11-24 16:14:22 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:14:22,23315-11-24 16:14:22 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:14:22,23415-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:14:22,23515-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:14:22,23615-11-24 16:14:22 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:14:22,23715-11-24 16:14:22 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:14:22,23915-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:14:22,24015-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:14:22,24015-11-24 16:14:22 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:14:22,24515-11-24 16:14:22 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:14:22,24615-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:14:22,24615-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:14:22,24715-11-24 16:14:22 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:14:22,24915-11-24 16:14:22 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:14:22,25015-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:14:22,25115-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:14:22,25115-11-24 16:14:22 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:14:22,26415-11-24 16:14:22 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:22,26515-11-24 16:14:22 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:22,28415-11-24 16:14:22 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 16:14:22,38315-11-24 16:14:22 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:14:22,38415-11-24 16:14:22 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:14:22,38615-11-24 16:14:22 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 16:14:22,40115-11-24 16:14:22 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:14:22,40215-11-24 16:14:22 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:22,40815-11-24 16:14:22 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 16:14:22,41015-11-24 16:14:22 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:14:22,41015-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:14:22,41115-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:14:22,41215-11-24 16:14:22 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:14:22,41415-11-24 16:14:22 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:14:22,41515-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:14:22,41515-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:14:22,41615-11-24 16:14:22 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:14:22,41715-11-24 16:14:22 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:14:22,41915-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:14:22,42015-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:14:22,42015-11-24 16:14:22 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:14:22,42115-11-24 16:14:22 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:14:22,42215-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:14:22,42315-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:14:22,42315-11-24 16:14:22 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:14:22,42415-11-24 16:14:22 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:14:22,42515-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:14:22,42615-11-24 16:14:22 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:14:22,42715-11-24 16:14:22 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:14:22,43315-11-24 16:14:22 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 16:14:22,57215-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@31aba945
2015-11-24 16:14:22,57315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@31aba945
2015-11-24 16:14:22,57315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@31aba945
2015-11-24 16:14:22,57515-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4f30291c
2015-11-24 16:14:22,57715-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@74cee5ed
2015-11-24 16:14:22,57915-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@5a90f6cd
2015-11-24 16:14:22,58315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@52dc5605
2015-11-24 16:14:22,58315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@52dc5605
2015-11-24 16:14:22,58415-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52dc5605
2015-11-24 16:14:22,58515-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@1bb08b3a
2015-11-24 16:14:22,58615-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@1bb08b3a
2015-11-24 16:14:22,58615-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1bb08b3a
2015-11-24 16:14:22,59015-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@174cc136
2015-11-24 16:14:22,59115-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@174cc136
2015-11-24 16:14:22,59115-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@174cc136
2015-11-24 16:14:22,59415-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@2afd506
2015-11-24 16:14:22,59415-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@2afd506
2015-11-24 16:14:22,59515-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2afd506
2015-11-24 16:14:22,59815-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7b948a59
2015-11-24 16:14:22,59815-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7b948a59
2015-11-24 16:14:22,59815-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@7b948a59
2015-11-24 16:14:22,60215-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@5f88a614
2015-11-24 16:14:22,60215-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@5f88a614
2015-11-24 16:14:22,60315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5f88a614
2015-11-24 16:14:22,60615-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@86b66eb
2015-11-24 16:14:22,60715-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@86b66eb
2015-11-24 16:14:22,60715-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@86b66eb
2015-11-24 16:14:22,61115-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@782569ee
2015-11-24 16:14:22,61215-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@782569ee
2015-11-24 16:14:22,61415-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41963d89
2015-11-24 16:14:22,61515-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41963d89
2015-11-24 16:14:22,61815-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@17832d4d
2015-11-24 16:14:22,61815-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@17832d4d
2015-11-24 16:14:22,62415-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@7630e551
2015-11-24 16:14:22,62415-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@7630e551
2015-11-24 16:14:22,63715-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@5e91af0f
2015-11-24 16:14:22,63815-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@5e91af0f
2015-11-24 16:14:22,64515-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@189dcde2
2015-11-24 16:14:22,64615-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@189dcde2
2015-11-24 16:14:22,65015-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@d26626
2015-11-24 16:14:22,65015-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d26626
2015-11-24 16:14:22,65115-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d26626
2015-11-24 16:14:22,65315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6eb2916d
2015-11-24 16:14:22,65615-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@28176fec
2015-11-24 16:14:22,65715-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@28176fec
2015-11-24 16:14:22,65715-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@28176fec
2015-11-24 16:14:22,65815-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5956c062
2015-11-24 16:14:22,66415-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@17ab25cb
2015-11-24 16:14:22,66515-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@17ab25cb
2015-11-24 16:14:22,66715-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@72a53018
2015-11-24 16:14:22,66715-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72a53018
2015-11-24 16:14:22,66915-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@68887242
2015-11-24 16:14:22,67015-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68887242
2015-11-24 16:14:22,67215-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@4a9ce1c8
2015-11-24 16:14:22,67315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4a9ce1c8
2015-11-24 16:14:22,67715-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@46985138
2015-11-24 16:14:22,67815-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@46985138
2015-11-24 16:14:22,68015-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@76fbcbc9
2015-11-24 16:14:22,68115-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6aeb9cde
2015-11-24 16:14:22,68415-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@4f12267a
2015-11-24 16:14:22,68415-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@4f12267a
2015-11-24 16:14:22,68515-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@4f12267a
2015-11-24 16:14:22,68715-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@567c66cc
2015-11-24 16:14:22,68715-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@567c66cc
2015-11-24 16:14:22,68815-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@567c66cc
2015-11-24 16:14:22,69015-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@39990cf6
2015-11-24 16:14:22,69515-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@543b11cd
2015-11-24 16:14:22,69615-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@543b11cd
2015-11-24 16:14:22,69615-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@543b11cd
2015-11-24 16:14:22,71315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3f511d13
2015-11-24 16:14:22,71415-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3f511d13
2015-11-24 16:14:22,71415-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3f511d13
2015-11-24 16:14:22,71615-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@3495cd
2015-11-24 16:14:22,78315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@441154d
2015-11-24 16:14:22,78315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@441154d
2015-11-24 16:14:22,78615-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@71172e7a
2015-11-24 16:14:22,78715-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@4139feec
2015-11-24 16:14:22,79715-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@585f257a
2015-11-24 16:14:22,79715-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@585f257a
2015-11-24 16:14:22,79815-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@44d88759
2015-11-24 16:14:22,80015-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@12f21700
2015-11-24 16:14:22,80215-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@6ede600b
2015-11-24 16:14:22,80415-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@3c007fe5
2015-11-24 16:14:22,80915-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@62481601
2015-11-24 16:14:22,80915-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62481601
2015-11-24 16:14:22,81215-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@709e192f
2015-11-24 16:14:22,81315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1b87966c
2015-11-24 16:14:22,81315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62a49a92
2015-11-24 16:14:22,81315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@24a019d6
2015-11-24 16:14:22,81315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b004363
2015-11-24 16:14:22,81315-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e481e39
2015-11-24 16:14:22,81415-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@70b85020
2015-11-24 16:14:22,81415-11-24 16:14:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@54949eb0
2015-11-24 16:14:22,84115-11-24 16:14:22  INFO (Version.java:37 LINE) Version.<clinit> -> Hibernate Commons Annotations 3.2.0.Final
2015-11-24 16:14:22,85015-11-24 16:14:22  INFO (Environment.java:603 LINE) Environment.<clinit> -> Hibernate 3.6.8.Final
2015-11-24 16:14:22,85415-11-24 16:14:22  INFO (Environment.java:636 LINE) Environment.<clinit> -> hibernate.properties not found
2015-11-24 16:14:22,86215-11-24 16:14:22  INFO (Environment.java:814 LINE) Environment.buildBytecodeProvider -> Bytecode provider name : javassist
2015-11-24 16:14:22,86615-11-24 16:14:22  INFO (Environment.java:695 LINE) Environment.<clinit> -> using JDK 1.4 java.sql.Timestamp handling
2015-11-24 16:14:22,98415-11-24 16:14:22 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2015-11-24 16:14:22,98515-11-24 16:14:22 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2015-11-24 16:14:22,98715-11-24 16:14:22 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 16:14:22,98815-11-24 16:14:22 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 16:14:22,99115-11-24 16:14:22 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2015-11-24 16:14:22,99215-11-24 16:14:22 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2015-11-24 16:14:22,99415-11-24 16:14:22 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2015-11-24 16:14:22,99515-11-24 16:14:22 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2015-11-24 16:14:22,99615-11-24 16:14:22 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2015-11-24 16:14:22,99715-11-24 16:14:22 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2015-11-24 16:14:22,99815-11-24 16:14:22 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2015-11-24 16:14:22,99915-11-24 16:14:22 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2015-11-24 16:14:23,00015-11-24 16:14:23 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2015-11-24 16:14:23,00115-11-24 16:14:23 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-11-24 16:14:23,00215-11-24 16:14:23 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2015-11-24 16:14:23,09315-11-24 16:14:23 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:14:23,10915-11-24 16:14:23  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:14:23,10915-11-24 16:14:23 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:14:23,11115-11-24 16:14:23 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:14:23,16215-11-24 16:14:23 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:14:23,16315-11-24 16:14:23  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:14:23,16315-11-24 16:14:23 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:14:23,16515-11-24 16:14:23 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:14:23,30615-11-24 16:14:23 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:14:23,30615-11-24 16:14:23  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:14:23,30715-11-24 16:14:23 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:14:23,30815-11-24 16:14:23 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:14:23,38115-11-24 16:14:23 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:14:23,44615-11-24 16:14:23  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.UserOperate -> user_operate
2015-11-24 16:14:23,45415-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:14:23,46415-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userName -> userName
2015-11-24 16:14:23,46415-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPassword -> userPassword
2015-11-24 16:14:23,46515-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: phicommId -> phicomm_id
2015-11-24 16:14:23,46515-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userEmail -> userEmail
2015-11-24 16:14:23,46515-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPhoneNumb -> user_PhoneNumb
2015-11-24 16:14:23,46615-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userType -> userType
2015-11-24 16:14:23,46615-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: isChecked -> isChecked
2015-11-24 16:14:23,46615-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nickname -> nickname
2015-11-24 16:14:23,46615-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: figureurl -> figureurl
2015-11-24 16:14:23,46715-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: sex -> sex
2015-11-24 16:14:23,46715-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: province -> province
2015-11-24 16:14:23,46715-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: city -> city
2015-11-24 16:14:23,46715-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: birthday -> birthday
2015-11-24 16:14:23,46815-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openId -> open_id
2015-11-24 16:14:23,46815-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openKey -> open_key
2015-11-24 16:14:23,46815-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: accessToken -> access_token
2015-11-24 16:14:23,46815-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: expireseIn -> expirese_in
2015-11-24 16:14:23,46815-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: devinfo -> devinfo
2015-11-24 16:14:23,46915-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userinfo -> userinfo
2015-11-24 16:14:23,46915-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqq -> openqq
2015-11-24 16:14:23,46915-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqqinfo -> openqqinfo
2015-11-24 16:14:23,46915-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensina -> opensina
2015-11-24 16:14:23,47015-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensinainfo -> opensinainfo
2015-11-24 16:14:23,47015-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: createTime -> createTime
2015-11-24 16:14:23,47015-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: updateTime -> updateTime
2015-11-24 16:14:23,47015-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: lastLoginTime -> lastLoginTime
2015-11-24 16:14:23,47115-11-24 16:14:23  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.NoteNumbRecord -> note_numb_record
2015-11-24 16:14:23,47115-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:14:23,47115-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nodeNumb -> node_numb
2015-11-24 16:14:23,47215-11-24 16:14:23  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.CrashLog -> crash_log
2015-11-24 16:14:23,47215-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:14:23,47215-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: url -> url
2015-11-24 16:14:23,47315-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: describes -> describes
2015-11-24 16:14:23,47315-11-24 16:14:23 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: addDate -> addDate
2015-11-24 16:14:23,47415-11-24 16:14:23 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:14:23,47615-11-24 16:14:23 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:14:23,47715-11-24 16:14:23 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:14:23,47815-11-24 16:14:23 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:14:23,47815-11-24 16:14:23 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:14:23,47815-11-24 16:14:23 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:14:23,47815-11-24 16:14:23 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:14:23,47915-11-24 16:14:23 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:14:23,48515-11-24 16:14:23  INFO (Configuration.java:1676 LINE) Configuration.applyHibernateValidatorLegacyConstraintsOnDDL -> Hibernate Validator not found: ignoring
2015-11-24 16:14:23,52815-11-24 16:14:23 DEBUG (LoggerFactory.java:29 LINE) LoggerFactory.make -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-11-24 16:14:23,52915-11-24 16:14:23  INFO (Version.java:27 LINE) Version.<clinit> -> HV000001: Hibernate Validator 5.0.0.Final
2015-11-24 16:14:23,60315-11-24 16:14:23 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:14:23,61215-11-24 16:14:23 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:14:23,62215-11-24 16:14:23 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:14:23,82015-11-24 16:14:23  INFO (LocalSessionFactoryBean.java:780 LINE) LocalSessionFactoryBean.buildSessionFactory -> Building new Hibernate SessionFactory
2015-11-24 16:14:23,82115-11-24 16:14:23 DEBUG (Configuration.java:1854 LINE) Configuration.buildSessionFactory -> Preparing to build session factory with filters : {}
2015-11-24 16:14:23,82115-11-24 16:14:23 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:14:23,82115-11-24 16:14:23 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:14:23,82115-11-24 16:14:23 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:14:23,82115-11-24 16:14:23 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:14:23,82215-11-24 16:14:23 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:14:23,82215-11-24 16:14:23 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:14:23,82215-11-24 16:14:23 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:14:23,82215-11-24 16:14:23 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:14:23,82215-11-24 16:14:23 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:14:23,83615-11-24 16:14:23 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:14:23,83615-11-24 16:14:23 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:14:23,86615-11-24 16:14:23 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:14:23,90515-11-24 16:14:23 DEBUG (Configuration.java:1896 LINE) Configuration.enableLegacyHibernateValidator -> Legacy Validator not present in classpath, ignoring event listener registration
2015-11-24 16:14:23,90515-11-24 16:14:23 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:14:23,90615-11-24 16:14:23 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:14:23,90715-11-24 16:14:23 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:14:23,91215-11-24 16:14:23 DEBUG (HibernateSearchEventListenerRegister.java:231 LINE) HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener -> Search not present in classpath, ignoring event listener registration.
2015-11-24 16:14:23,91315-11-24 16:14:23  INFO (HibernateSearchEventListenerRegister.java:75 LINE) HibernateSearchEventListenerRegister.enableHibernateSearch -> Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2015-11-24 16:14:23,91915-11-24 16:14:23  INFO (ConnectionProviderFactory.java:173 LINE) ConnectionProviderFactory.initializeConnectionProviderFromConfig -> Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2015-11-24 16:14:24,37115-11-24 16:14:24  INFO (Dialect.java:135 LINE) Dialect.<init> -> Using dialect: org.hibernate.dialect.MySQLDialect
2015-11-24 16:14:24,39815-11-24 16:14:24  INFO (SettingsFactory.java:126 LINE) SettingsFactory.buildSettings -> Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-11-24 16:14:24,39915-11-24 16:14:24  INFO (SettingsFactory.java:132 LINE) SettingsFactory.buildSettings -> Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.25 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2015-11-24 16:14:24,40315-11-24 16:14:24  INFO (TransactionFactoryFactory.java:65 LINE) TransactionFactoryFactory.buildTransactionFactory -> Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2015-11-24 16:14:24,40615-11-24 16:14:24  INFO (TransactionManagerLookupFactory.java:83 LINE) TransactionManagerLookupFactory.getTransactionManagerLookup -> No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2015-11-24 16:14:24,40615-11-24 16:14:24  INFO (SettingsFactory.java:179 LINE) SettingsFactory.buildSettings -> Automatic flush during beforeCompletion(): disabled
2015-11-24 16:14:24,40715-11-24 16:14:24  INFO (SettingsFactory.java:183 LINE) SettingsFactory.buildSettings -> Automatic session close at end of transaction: disabled
2015-11-24 16:14:24,40715-11-24 16:14:24  INFO (SettingsFactory.java:190 LINE) SettingsFactory.buildSettings -> JDBC batch size: 25
2015-11-24 16:14:24,40715-11-24 16:14:24  INFO (SettingsFactory.java:193 LINE) SettingsFactory.buildSettings -> JDBC batch updates for versioned data: disabled
2015-11-24 16:14:24,40815-11-24 16:14:24  INFO (SettingsFactory.java:198 LINE) SettingsFactory.buildSettings -> Scrollable result sets: enabled
2015-11-24 16:14:24,40915-11-24 16:14:24 DEBUG (SettingsFactory.java:202 LINE) SettingsFactory.buildSettings -> Wrap result sets: disabled
2015-11-24 16:14:24,40915-11-24 16:14:24  INFO (SettingsFactory.java:206 LINE) SettingsFactory.buildSettings -> JDBC3 getGeneratedKeys(): enabled
2015-11-24 16:14:24,40915-11-24 16:14:24  INFO (SettingsFactory.java:210 LINE) SettingsFactory.buildSettings -> JDBC result set fetch size: 50
2015-11-24 16:14:24,40915-11-24 16:14:24  INFO (SettingsFactory.java:214 LINE) SettingsFactory.buildSettings -> Connection release mode: after_transaction
2015-11-24 16:14:24,41115-11-24 16:14:24  INFO (SettingsFactory.java:238 LINE) SettingsFactory.buildSettings -> Maximum outer join fetch depth: 2
2015-11-24 16:14:24,41115-11-24 16:14:24  INFO (SettingsFactory.java:241 LINE) SettingsFactory.buildSettings -> Default batch fetch size: 1
2015-11-24 16:14:24,41215-11-24 16:14:24  INFO (SettingsFactory.java:245 LINE) SettingsFactory.buildSettings -> Generate SQL with comments: disabled
2015-11-24 16:14:24,41215-11-24 16:14:24  INFO (SettingsFactory.java:249 LINE) SettingsFactory.buildSettings -> Order SQL updates by primary key: disabled
2015-11-24 16:14:24,41315-11-24 16:14:24  INFO (SettingsFactory.java:253 LINE) SettingsFactory.buildSettings -> Order SQL inserts for batching: disabled
2015-11-24 16:14:24,41315-11-24 16:14:24  INFO (SettingsFactory.java:431 LINE) SettingsFactory.createQueryTranslatorFactory -> Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2015-11-24 16:14:24,43515-11-24 16:14:24  INFO (ASTQueryTranslatorFactory.java:47 LINE) ASTQueryTranslatorFactory.<init> -> Using ASTQueryTranslatorFactory
2015-11-24 16:14:24,43915-11-24 16:14:24  INFO (SettingsFactory.java:261 LINE) SettingsFactory.buildSettings -> Query language substitutions: {false='N', true='Y'}
2015-11-24 16:14:24,45715-11-24 16:14:24  INFO (SettingsFactory.java:266 LINE) SettingsFactory.buildSettings -> JPA-QL strict compliance: disabled
2015-11-24 16:14:24,45815-11-24 16:14:24  INFO (SettingsFactory.java:271 LINE) SettingsFactory.buildSettings -> Second-level cache: enabled
2015-11-24 16:14:24,45815-11-24 16:14:24  INFO (SettingsFactory.java:275 LINE) SettingsFactory.buildSettings -> Query cache: enabled
2015-11-24 16:14:24,47315-11-24 16:14:24  INFO (SettingsFactory.java:406 LINE) SettingsFactory.createRegionFactory -> Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
2015-11-24 16:14:24,48215-11-24 16:14:24  INFO (RegionFactoryCacheProviderBridge.java:61 LINE) RegionFactoryCacheProviderBridge.<init> -> Cache provider: org.hibernate.cache.EhCacheProvider
2015-11-24 16:14:24,48615-11-24 16:14:24  INFO (SettingsFactory.java:285 LINE) SettingsFactory.buildSettings -> Optimize cache for minimal puts: disabled
2015-11-24 16:14:24,48715-11-24 16:14:24  INFO (SettingsFactory.java:294 LINE) SettingsFactory.buildSettings -> Structured second-level cache entries: disabled
2015-11-24 16:14:24,48715-11-24 16:14:24  INFO (SettingsFactory.java:385 LINE) SettingsFactory.createQueryCacheFactory -> Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
2015-11-24 16:14:24,49415-11-24 16:14:24  INFO (SettingsFactory.java:314 LINE) SettingsFactory.buildSettings -> Echoing all SQL to stdout
2015-11-24 16:14:24,49515-11-24 16:14:24  INFO (SettingsFactory.java:323 LINE) SettingsFactory.buildSettings -> Statistics: disabled
2015-11-24 16:14:24,49615-11-24 16:14:24  INFO (SettingsFactory.java:327 LINE) SettingsFactory.buildSettings -> Deleted entity synthetic identifier rollback: disabled
2015-11-24 16:14:24,49615-11-24 16:14:24  INFO (SettingsFactory.java:343 LINE) SettingsFactory.buildSettings -> Default entity-mode: pojo
2015-11-24 16:14:24,49615-11-24 16:14:24  INFO (SettingsFactory.java:347 LINE) SettingsFactory.buildSettings -> Named query checking : enabled
2015-11-24 16:14:24,49715-11-24 16:14:24  INFO (SettingsFactory.java:351 LINE) SettingsFactory.buildSettings -> Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2015-11-24 16:14:24,51815-11-24 16:14:24  INFO (SessionFactoryImpl.java:202 LINE) SessionFactoryImpl.<init> -> building session factory
2015-11-24 16:14:24,52315-11-24 16:14:24 DEBUG (SessionFactoryImpl.java:206 LINE) SessionFactoryImpl.<init> -> Statistics initialized [enabled=false]}
2015-11-24 16:14:24,52515-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@31aba945
2015-11-24 16:14:24,52515-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@31aba945
2015-11-24 16:14:24,52615-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@31aba945
2015-11-24 16:14:24,52615-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4f30291c
2015-11-24 16:14:24,52615-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@74cee5ed
2015-11-24 16:14:24,52615-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@5a90f6cd
2015-11-24 16:14:24,52715-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@52dc5605
2015-11-24 16:14:24,52715-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@52dc5605
2015-11-24 16:14:24,52715-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52dc5605
2015-11-24 16:14:24,52815-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@1bb08b3a
2015-11-24 16:14:24,52815-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@1bb08b3a
2015-11-24 16:14:24,52815-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1bb08b3a
2015-11-24 16:14:24,52815-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@174cc136
2015-11-24 16:14:24,52815-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@174cc136
2015-11-24 16:14:24,52915-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@174cc136
2015-11-24 16:14:24,52915-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@2afd506
2015-11-24 16:14:24,52915-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@2afd506
2015-11-24 16:14:24,52915-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2afd506
2015-11-24 16:14:24,53015-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7b948a59
2015-11-24 16:14:24,53015-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7b948a59
2015-11-24 16:14:24,53015-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@7b948a59
2015-11-24 16:14:24,53115-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@5f88a614
2015-11-24 16:14:24,53115-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@5f88a614
2015-11-24 16:14:24,53115-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5f88a614
2015-11-24 16:14:24,53815-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@86b66eb
2015-11-24 16:14:24,53915-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@86b66eb
2015-11-24 16:14:24,54015-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@86b66eb
2015-11-24 16:14:24,54115-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@782569ee
2015-11-24 16:14:24,54115-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@782569ee
2015-11-24 16:14:24,54115-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41963d89
2015-11-24 16:14:24,54215-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41963d89
2015-11-24 16:14:24,54215-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@17832d4d
2015-11-24 16:14:24,54215-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@17832d4d
2015-11-24 16:14:24,54415-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@7630e551
2015-11-24 16:14:24,54515-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@7630e551
2015-11-24 16:14:24,54515-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@5e91af0f
2015-11-24 16:14:24,54515-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@5e91af0f
2015-11-24 16:14:24,54615-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@189dcde2
2015-11-24 16:14:24,54715-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@189dcde2
2015-11-24 16:14:24,54715-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@d26626
2015-11-24 16:14:24,54815-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@d26626
2015-11-24 16:14:24,54815-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@d26626
2015-11-24 16:14:24,54815-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6eb2916d
2015-11-24 16:14:24,54915-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@28176fec
2015-11-24 16:14:24,54915-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@28176fec
2015-11-24 16:14:24,55015-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@28176fec
2015-11-24 16:14:24,55015-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5956c062
2015-11-24 16:14:24,55015-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@17ab25cb
2015-11-24 16:14:24,55015-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@17ab25cb
2015-11-24 16:14:24,55115-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@72a53018
2015-11-24 16:14:24,55115-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72a53018
2015-11-24 16:14:24,55115-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@68887242
2015-11-24 16:14:24,55115-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@68887242
2015-11-24 16:14:24,55115-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@4a9ce1c8
2015-11-24 16:14:24,55215-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4a9ce1c8
2015-11-24 16:14:24,55215-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@46985138
2015-11-24 16:14:24,55315-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@46985138
2015-11-24 16:14:24,55315-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@76fbcbc9
2015-11-24 16:14:24,55315-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6aeb9cde
2015-11-24 16:14:24,55315-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@4f12267a
2015-11-24 16:14:24,55415-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@4f12267a
2015-11-24 16:14:24,55415-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@4f12267a
2015-11-24 16:14:24,55415-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@567c66cc
2015-11-24 16:14:24,55415-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@567c66cc
2015-11-24 16:14:24,55415-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@567c66cc
2015-11-24 16:14:24,55515-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@39990cf6
2015-11-24 16:14:24,55515-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@543b11cd
2015-11-24 16:14:24,55515-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@543b11cd
2015-11-24 16:14:24,55515-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@543b11cd
2015-11-24 16:14:24,55515-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3f511d13
2015-11-24 16:14:24,55615-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3f511d13
2015-11-24 16:14:24,55615-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3f511d13
2015-11-24 16:14:24,55615-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@3495cd
2015-11-24 16:14:24,55615-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@441154d
2015-11-24 16:14:24,55615-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@441154d
2015-11-24 16:14:24,55615-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@71172e7a
2015-11-24 16:14:24,55715-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@4139feec
2015-11-24 16:14:24,55715-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@585f257a
2015-11-24 16:14:24,55715-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@585f257a
2015-11-24 16:14:24,55715-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@44d88759
2015-11-24 16:14:24,55715-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@12f21700
2015-11-24 16:14:24,55815-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@6ede600b
2015-11-24 16:14:24,55815-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@3c007fe5
2015-11-24 16:14:24,55815-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@62481601
2015-11-24 16:14:24,55815-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62481601
2015-11-24 16:14:24,55915-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@464a8194
2015-11-24 16:14:24,55915-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@45813f99
2015-11-24 16:14:24,56015-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@28767975
2015-11-24 16:14:24,56015-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7a200513
2015-11-24 16:14:24,56015-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4c2d6108
2015-11-24 16:14:24,56015-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@373d7b4a
2015-11-24 16:14:24,56115-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2569539b
2015-11-24 16:14:24,56115-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@25eff84d
2015-11-24 16:14:24,56115-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@fa14b46
2015-11-24 16:14:24,56115-11-24 16:14:24  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@4139feec
2015-11-24 16:14:24,56215-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@2654e8ae
2015-11-24 16:14:24,56215-11-24 16:14:24  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [clob] overrides previous : org.hibernate.type.ClobType@585f257a
2015-11-24 16:14:24,56215-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2654e8ae
2015-11-24 16:14:24,56215-11-24 16:14:24  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@585f257a
2015-11-24 16:14:24,56315-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@3ba6d328
2015-11-24 16:14:24,56315-11-24 16:14:24  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@6ede600b
2015-11-24 16:14:24,56315-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@614b3189
2015-11-24 16:14:24,56315-11-24 16:14:24  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@71172e7a
2015-11-24 16:14:24,56415-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@369a9f38
2015-11-24 16:14:24,56415-11-24 16:14:24  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [blob] overrides previous : org.hibernate.type.BlobType@441154d
2015-11-24 16:14:24,56415-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@369a9f38
2015-11-24 16:14:24,56415-11-24 16:14:24  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@441154d
2015-11-24 16:14:24,56415-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10780b2b
2015-11-24 16:14:24,56515-11-24 16:14:24  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@44d88759
2015-11-24 16:14:24,56515-11-24 16:14:24 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@39253c7f
2015-11-24 16:14:24,56515-11-24 16:14:24  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@12f21700
2015-11-24 16:14:24,56715-11-24 16:14:24 DEBUG (SessionFactoryImpl.java:228 LINE) SessionFactoryImpl.<init> -> Session factory constructed with filter configurations : {}
2015-11-24 16:14:24,56715-11-24 16:14:24 DEBUG (SessionFactoryImpl.java:232 LINE) SessionFactoryImpl.<init> -> instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, sun.boot.library.path=E:\JDK1.7\bin, java.vm.version=23.7-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.cache.use_query_cache=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\workspace\mobile-user, java.runtime.version=1.7.0_17-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=E:\JDK1.7\lib\endorsed, os.arch=amd64, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\gqy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, hibernate.cache.use_second_level_cache=true, sun.jnu.encoding=GBK, hibernate.jdbc.fetch_size=50, java.library.path=E:\JDK1.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\ProgramData\Lenovo\ReadyApps;E:\JDK\bin;E:\JDK\jre\bin;E:\Go\bin;E:\winscp\WinSCP\;E:\maven\apache-maven-3.2.3\bin;C:\Program Files (x86)\DBank\ClickUp;C:\Program Files (x86)\DBank\ClickUp;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\gqy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=after_transaction, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=gqy, java.class.path=G:\workspace\mobile-user\target\test-classes;G:\workspace\mobile-user\target\classes;H:\Respositories2\repository\com\alibaba\fastjson\1.2.4\fastjson-1.2.4.jar;H:\Respositories2\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;H:\Respositories2\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;H:\Respositories2\repository\io\netty\netty\4.0.0.Alpha8\netty-4.0.0.Alpha8.jar;H:\Respositories2\repository\jstl\jstl\1.2\jstl-1.2.jar;H:\Respositories2\repository\org\springframework\spring-aop\3.2.0.RELEASE\spring-aop-3.2.0.RELEASE.jar;H:\Respositories2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;H:\Respositories2\repository\org\springframework\spring-beans\3.2.0.RELEASE\spring-beans-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context\3.2.0.RELEASE\spring-context-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-expression\3.2.0.RELEASE\spring-expression-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context-support\3.2.0.RELEASE\spring-context-support-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-core\3.2.0.RELEASE\spring-core-3.2.0.RELEASE.jar;H:\Respositories2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;H:\Respositories2\repository\org\springframework\spring-jdbc\3.2.0.RELEASE\spring-jdbc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-orm\3.2.0.RELEASE\spring-orm-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-tx\3.2.0.RELEASE\spring-tx-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-web\3.2.0.RELEASE\spring-web-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-webmvc\3.2.0.RELEASE\spring-webmvc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\amqp\spring-amqp\1.2.0.RELEASE\spring-amqp-1.2.0.RELEASE.jar;H:\Respositories2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;H:\Respositories2\repository\com\fasterxml\jackson\core\jackson-core\2.1.0\jackson-core-2.1.0.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.13\jackson-jaxrs-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-xc\1.9.13\jackson-xc-1.9.13.jar;H:\Respositories2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;H:\Respositories2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;H:\Respositories2\repository\mysql\mysql-connector-java\5.1.25\mysql-connector-java-5.1.25.jar;H:\Respositories2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;H:\Respositories2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;H:\Respositories2\repository\org\aspectj\aspectjweaver\1.6.4\aspectjweaver-1.6.4.jar;H:\Respositories2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;H:\Respositories2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;H:\Respositories2\repository\commons-beanutils\commons-beanutils\1.9.0\commons-beanutils-1.9.0.jar;H:\Respositories2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;H:\Respositories2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;H:\Respositories2\repository\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;H:\Respositories2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;H:\Respositories2\repository\org\mybatis\mybatis-spring\1.2.0\mybatis-spring-1.2.0.jar;H:\Respositories2\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;H:\Respositories2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar;H:\Respositories2\repository\org\json\json\20090211\json-20090211.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-lgpl\1.8.1\jackson-core-lgpl-1.8.1.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-lgpl\1.8.1\jackson-mapper-lgpl-1.8.1.jar;H:\Respositories2\repository\org\freemarker\freemarker\2.3.16\freemarker-2.3.16.jar;H:\Respositories2\repository\opensymphony\sitemesh\2.4.2\sitemesh-2.4.2.jar;H:\Respositories2\repository\org\testng\testng\5.9\testng-5.9-jdk15.jar;H:\Respositories2\repository\junit\junit\4.7\junit-4.7.jar;H:\Respositories2\repository\cglib\cglib-asm\1.0\cglib-asm-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-core\1.0\jxls-core-1.0.jar;H:\Respositories2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;H:\Respositories2\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml\3.7\poi-ooxml-3.7.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml-schemas\3.7\poi-ooxml-schemas-3.7.jar;H:\Respositories2\repository\org\apache\xmlbeans\xmlbeans\2.3.0\xmlbeans-2.3.0.jar;H:\Respositories2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;H:\Respositories2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-reader\1.0\jxls-reader-1.0.jar;H:\Respositories2\repository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient\4.3.2\httpclient-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient-cache\4.3.2\httpclient-cache-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpmime\4.3.2\httpmime-4.3.2.jar;H:\Respositories2\repository\org\quartz-scheduler\quartz\1.8.6\quartz-1.8.6.jar;H:\Respositories2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;H:\Respositories2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;H:\Respositories2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;H:\Respositories2\repository\net\coobird\thumbnailator\0.4.7\thumbnailator-0.4.7.jar;H:\Respositories2\repository\jcifs\jcifs\1.3.17\jcifs-1.3.17.jar;H:\Respositories2\repository\org\apache\poi\poi\3.10.1\poi-3.10.1.jar;H:\Respositories2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;H:\Respositories2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;H:\Respositories2\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;H:\Respositories2\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;H:\Respositories2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;H:\Respositories2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;H:\Respositories2\repository\net\sf\supercsv\super-csv\2.2.0\super-csv-2.2.0.jar;H:\Respositories2\repository\org\bouncycastle\bcprov-jdk16\1.45\bcprov-jdk16-1.45.jar;H:\Respositories2\repository\jdom\jdom\1.0\jdom-1.0.jar;H:\Respositories2\repository\com\belerweb\pinyin4j\2.5.0\pinyin4j-2.5.0.jar;H:\Respositories2\repository\org\glassfish\jersey\ext\jersey-spring3\2.4.1\jersey-spring3-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-server\2.4.1\jersey-server-2.4.1.jar;H:\Respositories2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-api\2.2.0-b21\hk2-api-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\javax.inject\2.2.0-b21\javax.inject-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-locator\2.2.0-b21\hk2-locator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\asm-all-repackaged\2.2.0-b21\asm-all-repackaged-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\cglib\2.2.0-b21\cglib-2.2.0-b21.jar;H:\Respositories2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;H:\Respositories2\repository\org\glassfish\jersey\containers\jersey-container-servlet-core\2.4.1\jersey-container-servlet-core-2.4.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2\2.2.0-b21\hk2-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-utils\2.2.0-b21\hk2-utils-2.2.0-b21.jar;H:\Respositories2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;H:\Respositories2\repository\org\glassfish\hk2\config-types\2.2.0-b21\config-types-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\core\2.2.0-b21\core-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-config\2.2.0-b21\hk2-config-2.2.0-b21.jar;H:\Respositories2\repository\org\jvnet\tiger-types\1.4\tiger-types-1.4.jar;H:\Respositories2\repository\org\glassfish\hk2\external\bean-validator\2.2.0-b21\bean-validator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-runlevel\2.2.0-b21\hk2-runlevel-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\class-model\2.2.0-b21\class-model-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\spring-bridge\2.2.0-b21\spring-bridge-2.2.0-b21.jar;H:\Respositories2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\2.4.1\jersey-media-json-jackson-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-common\2.4.1\jersey-common-2.4.1.jar;H:\Respositories2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;H:\Respositories2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.1\osgi-resource-locator-1.0.1.jar;H:\Respositories2\repository\org\codehaus\groovy\groovy-all\2.2.0\groovy-all-2.2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\providers\jersey-test-framework-provider-external\2.5.1\jersey-test-framework-provider-external-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\jersey-test-framework-core\2.5.1\jersey-test-framework-core-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-client\2.5.1\jersey-client-2.5.1.jar;H:\Respositories2\repository\org\springframework\spring-test\3.2.6.RELEASE\spring-test-3.2.6.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session\1.0.1.RELEASE\spring-session-1.0.1.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session-data-redis\1.0.0.RELEASE\spring-session-data-redis-1.0.0.RELEASE.jar;H:\Respositories2\repository\org\apache\commons\commons-pool2\2.2\commons-pool2-2.2.jar;H:\Respositories2\repository\redis\clients\jedis\2.6.0\jedis-2.6.0.jar;H:\Respositories2\repository\org\springframework\data\spring-data-redis\1.4.1.RELEASE\spring-data-redis-1.4.1.RELEASE.jar;H:\Respositories2\repository\net\sf\ehcache\ehcache-core\2.6.11\ehcache-core-2.6.11.jar;H:\Respositories2\repository\org\hibernate3\hibernate3\3.0.0\hibernate3-3.0.0.jar;H:\Respositories2\repository\com\google\code\gson\gson\2.1\gson-2.1.jar;H:\Respositories2\repository\org\apache\openejb\javaee-api\5.0-1\javaee-api-5.0-1.jar;H:\Respositories2\repository\com\alibaba\druid\1.0.2\druid-1.0.2.jar;H:\Respositories2\repository\javax\faces\jsf-impl\1.2_04\jsf-impl-1.2_04.jar;H:\Respositories2\repository\javax\faces\jsf-api\1.2_04\jsf-api-1.2_04.jar;H:\Respositories2\repository\javax\transaction\jta\1.1\jta-1.1.jar;H:\Respositories2\repository\org\apache\ws\wss4j\1.5.1\wss4j-1.5.1.jar;H:\Respositories2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;H:\Respositories2\repository\hibernate\antlr\2.7.5H3\antlr-2.7.5H3.jar;H:\Respositories2\repository\javassist\javassist\3.9.0.GA\javassist-3.9.0.GA.jar;H:\Respositories2\repository\com\fx\mobile\mobile-model\0.0.1-SNAPSHOT\mobile-model-0.0.1-SNAPSHOT.jar;H:\Respositories2\repository\com\fx\mobile\mobile-core\0.0.1\mobile-core-0.0.1.jar;H:\Respositories2\repository\Decoder\sun.misc.BASE64Decoder\1.0.0\sun.misc.BASE64Decoder-1.0.0.jar;H:\Respositories2\repository\marketingFile\marketingFile\0.0.1\marketingFile-0.0.1.jar;H:\Respositories2\repository\com\qq\connect\Sdk4J\1.0\Sdk4J-1.0.jar;H:\Respositories2\repository\org\apache\commons\commons-io\1.3.2\commons-io-1.3.2.jar;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.query.substitutions=true 'Y', false 'N', hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=E:\JDK1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60873 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.fx.mobile.junit.UserOperateDaoImplTest, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_17, java.ext.dirs=E:\JDK1.7\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=E:\JDK1.7\lib\resources.jar;E:\JDK1.7\lib\rt.jar;E:\JDK1.7\lib\sunrsasign.jar;E:\JDK1.7\lib\jsse.jar;E:\JDK1.7\lib\jce.jar;E:\JDK1.7\lib\charsets.jar;E:\JDK1.7\lib\jfr.jar;E:\JDK1.7\classes, java.vendor=Oracle Corporation, hibernate.jdbc.batch_size=25, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-11-24 16:14:24,60215-11-24 16:14:24 DEBUG (CacheManager.java:684 LINE) CacheManager.parseConfiguration -> Configuring ehcache from classpath.
2015-11-24 16:14:24,60615-11-24 16:14:24 DEBUG (ConfigurationFactory.java:132 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from ehcache.xml found in the classpath: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 16:14:24,60715-11-24 16:14:24 DEBUG (ConfigurationFactory.java:98 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from URL: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 16:14:24,60715-11-24 16:14:24 DEBUG (ConfigurationFactory.java:150 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from InputStream
2015-11-24 16:14:24,67415-11-24 16:14:24 DEBUG (DiskStoreConfiguration.java:141 LINE) DiskStoreConfiguration.translatePath -> Disk Store Path: C:\Users\gqy\AppData\Local\Temp\
2015-11-24 16:14:24,69415-11-24 16:14:24 DEBUG (PropertyUtil.java:88 LINE) PropertyUtil.parseProperties -> propertiesString is null.
2015-11-24 16:14:24,71115-11-24 16:14:24 DEBUG (ConfigurationHelper.java:185 LINE) ConfigurationHelper.createCacheManagerEventListener -> No CacheManagerEventListenerFactory class specified. Skipping...
2015-11-24 16:14:24,75615-11-24 16:14:24 DEBUG (Cache.java:955 LINE) Cache.createBootstrapCacheLoader -> No BootstrapCacheLoaderFactory class specified. Skipping...
2015-11-24 16:14:24,75715-11-24 16:14:24 DEBUG (Cache.java:929 LINE) Cache.createCacheWriter -> CacheWriter factory not configured. Skipping...
2015-11-24 16:14:24,76115-11-24 16:14:24 DEBUG (ConfigurationHelper.java:96 LINE) ConfigurationHelper.createCacheExceptionHandler -> No CacheExceptionHandlerFactory class specified. Skipping...
2015-11-24 16:14:24,79115-11-24 16:14:24 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:14:24,79315-11-24 16:14:24 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:14:24,79315-11-24 16:14:24 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:14:25,00515-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.NoteNumbRecord
2015-11-24 16:14:25,00615-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from note_numb_record where id =?
2015-11-24 16:14:25,00615-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select notenumbre_.id, notenumbre_.node_numb as node2_1_ from note_numb_record notenumbre_ where notenumbre_.id=?
2015-11-24 16:14:25,00615-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into note_numb_record (node_numb, id) values (?, ?)
2015-11-24 16:14:25,00615-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update note_numb_record set node_numb=? where id=?
2015-11-24 16:14:25,00715-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from note_numb_record where id=?
2015-11-24 16:14:25,00715-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into note_numb_record (node_numb) values (?)
2015-11-24 16:14:25,01115-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.CrashLog
2015-11-24 16:14:25,01115-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from marketing1.crash_log where id =?
2015-11-24 16:14:25,01115-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select crashlog_.id, crashlog_.url as url2_, crashlog_.describes as describes2_, crashlog_.addDate as addDate2_ from marketing1.crash_log crashlog_ where crashlog_.id=?
2015-11-24 16:14:25,01215-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into marketing1.crash_log (url, describes, addDate, id) values (?, ?, ?, ?)
2015-11-24 16:14:25,01215-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update marketing1.crash_log set url=?, describes=?, addDate=? where id=?
2015-11-24 16:14:25,01215-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from marketing1.crash_log where id=?
2015-11-24 16:14:25,01215-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into marketing1.crash_log (url, describes, addDate) values (?, ?, ?)
2015-11-24 16:14:25,03515-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.UserOperate
2015-11-24 16:14:25,03515-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from user_operate where id =?
2015-11-24 16:14:25,03615-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select useroperat_.id, useroperat_.userName as userName0_, useroperat_.userPassword as userPass3_0_, useroperat_.phicomm_id as phicomm4_0_, useroperat_.userEmail as userEmail0_, useroperat_.user_PhoneNumb as user6_0_, useroperat_.userType as userType0_, useroperat_.isChecked as isChecked0_, useroperat_.nickname as nickname0_, useroperat_.figureurl as figureurl0_, useroperat_.sex as sex0_, useroperat_.province as province0_, useroperat_.city as city0_, useroperat_.birthday as birthday0_, useroperat_.open_id as open15_0_, useroperat_.open_key as open16_0_, useroperat_.access_token as access17_0_, useroperat_.expirese_in as expirese18_0_, useroperat_.devinfo as devinfo0_, useroperat_.userinfo as userinfo0_, useroperat_.openqq as openqq0_, useroperat_.openqqinfo as openqqinfo0_, useroperat_.opensina as opensina0_, useroperat_.opensinainfo as opensin24_0_, useroperat_.createTime as createTime0_, useroperat_.updateTime as updateTime0_, useroperat_.lastLoginTime as lastLog27_0_ from user_operate useroperat_ where useroperat_.id=?
2015-11-24 16:14:25,03615-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 16:14:25,03615-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update user_operate set userName=?, userPassword=?, phicomm_id=?, userEmail=?, user_PhoneNumb=?, userType=?, isChecked=?, nickname=?, figureurl=?, sex=?, province=?, city=?, birthday=?, open_id=?, open_key=?, access_token=?, expirese_in=?, devinfo=?, userinfo=?, openqq=?, openqqinfo=?, opensina=?, opensinainfo=?, createTime=?, updateTime=?, lastLoginTime=? where id=?
2015-11-24 16:14:25,03715-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from user_operate where id=?
2015-11-24 16:14:25,03715-11-24 16:14:25 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 16:14:25,11115-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [NONE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:14:25,11115-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:14:25,11215-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:14:25,11215-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE_NOWAIT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:14:25,11215-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [FORCE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:14:25,11315-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? lock in share mode
2015-11-24 16:14:25,11315-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_WRITE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:14:25,11415-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:14:25,11415-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:14:25,11415-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:14:25,12315-11-24 16:14:25 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:14:25,12315-11-24 16:14:25 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:14:25,12615-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [NONE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:14:25,12615-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:14:25,12715-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:14:25,12715-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE_NOWAIT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:14:25,12715-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [FORCE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:14:25,12815-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? lock in share mode
2015-11-24 16:14:25,12815-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_WRITE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:14:25,12815-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:14:25,12915-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:14:25,12915-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:14:25,13015-11-24 16:14:25 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:14:25,13015-11-24 16:14:25 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:14:25,13015-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [NONE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:14:25,13115-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:14:25,13115-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:14:25,13215-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE_NOWAIT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:14:25,13215-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [FORCE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:14:25,13215-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? lock in share mode
2015-11-24 16:14:25,13315-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_WRITE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:14:25,13315-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:14:25,13415-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:14:25,13415-11-24 16:14:25 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:14:25,13415-11-24 16:14:25 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:14:25,13515-11-24 16:14:25 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:14:25,13615-11-24 16:14:25 DEBUG (SessionFactoryObjectFactory.java:61 LINE) SessionFactoryObjectFactory.<clinit> -> initializing class SessionFactoryObjectFactory
2015-11-24 16:14:25,13715-11-24 16:14:25 DEBUG (SessionFactoryObjectFactory.java:99 LINE) SessionFactoryObjectFactory.addInstance -> registered: 6b8b59e1-8788-4bf8-9697-3cacd9eb1928 (unnamed)
2015-11-24 16:14:25,13815-11-24 16:14:25  INFO (SessionFactoryObjectFactory.java:105 LINE) SessionFactoryObjectFactory.addInstance -> Not binding factory to JNDI, no JNDI name configured
2015-11-24 16:14:25,13815-11-24 16:14:25 DEBUG (SessionFactoryImpl.java:369 LINE) SessionFactoryImpl.<init> -> instantiated session factory
2015-11-24 16:14:25,14415-11-24 16:14:25  INFO (SchemaUpdate.java:155 LINE) SchemaUpdate.execute -> Running hbm2ddl schema update
2015-11-24 16:14:25,14515-11-24 16:14:25  INFO (SchemaUpdate.java:167 LINE) SchemaUpdate.execute -> fetching database metadata
2015-11-24 16:14:25,14715-11-24 16:14:25  INFO (SchemaUpdate.java:179 LINE) SchemaUpdate.execute -> updating schema
2015-11-24 16:14:25,14815-11-24 16:14:25 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:14:25,14815-11-24 16:14:25 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:14:25,14815-11-24 16:14:25 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:14:25,14915-11-24 16:14:25 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:14:25,14915-11-24 16:14:25 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:14:25,14915-11-24 16:14:25 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:14:25,14915-11-24 16:14:25 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:14:25,15015-11-24 16:14:25 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:14:25,15015-11-24 16:14:25 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:14:25,15115-11-24 16:14:25 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:14:25,15215-11-24 16:14:25 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:14:25,15315-11-24 16:14:25 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:14:25,25315-11-24 16:14:25  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 16:14:25,25415-11-24 16:14:25 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:14:25,33715-11-24 16:14:25  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.note_numb_record
2015-11-24 16:14:25,33715-11-24 16:14:25  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [id, node_numb]
2015-11-24 16:14:25,33715-11-24 16:14:25  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 16:14:25,33815-11-24 16:14:25  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 16:14:25,35515-11-24 16:14:25  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.user_operate
2015-11-24 16:14:25,35615-11-24 16:14:25  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [birthday, sex, updatetime, open_id, openqq, opensina, userinfo, user_phonenumb, city, createtime, id, userpassword, username, lastlogintime, province, opensinainfo, figureurl, phicomm_id, open_key, access_token, nickname, usertype, ischecked, openqqinfo, useremail, devinfo, expirese_in]
2015-11-24 16:14:25,35615-11-24 16:14:25  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 16:14:25,35615-11-24 16:14:25  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 16:14:25,35815-11-24 16:14:25  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 16:14:25,36015-11-24 16:14:25 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:14:25,36115-11-24 16:14:25 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:14:25,36115-11-24 16:14:25 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:14:25,36215-11-24 16:14:25 DEBUG (SchemaUpdate.java:203 LINE) SchemaUpdate.execute -> create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 16:14:25,36415-11-24 16:14:25 ERROR (SchemaUpdate.java:212 LINE) SchemaUpdate.execute -> Unsuccessful: create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 16:14:25,36415-11-24 16:14:25 ERROR (SchemaUpdate.java:213 LINE) SchemaUpdate.execute -> Unknown database 'marketing1'
2015-11-24 16:14:25,36415-11-24 16:14:25  INFO (SchemaUpdate.java:217 LINE) SchemaUpdate.execute -> schema update complete
2015-11-24 16:14:25,37115-11-24 16:14:25  INFO (UpdateTimestampsCache.java:57 LINE) UpdateTimestampsCache.<init> -> starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:14:25,37415-11-24 16:14:25  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
2015-11-24 16:14:25,41515-11-24 16:14:25 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:14:25,42915-11-24 16:14:25 DEBUG (DiskStorePathManager.java:169 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Using diskstore path C:\Users\gqy\AppData\Local\Temp
2015-11-24 16:14:25,43115-11-24 16:14:25 DEBUG (DiskStorePathManager.java:170 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Holding exclusive lock on C:\Users\gqy\AppData\Local\Temp\.ehcache-diskstore.lock
2015-11-24 16:14:25,43215-11-24 16:14:25 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 16:14:25,43315-11-24 16:14:25 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:14:25,44515-11-24 16:14:25 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:14:25,44615-11-24 16:14:25 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:14:25,46215-11-24 16:14:25 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:14:25,46215-11-24 16:14:25 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.UpdateTimestampsCache'.
2015-11-24 16:14:25,46315-11-24 16:14:25 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:14:25,46615-11-24 16:14:25  INFO (StandardQueryCache.java:76 LINE) StandardQueryCache.<init> -> starting query cache at region: org.hibernate.cache.StandardQueryCache
2015-11-24 16:14:25,46715-11-24 16:14:25  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
2015-11-24 16:14:25,46815-11-24 16:14:25 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.StandardQueryCache
2015-11-24 16:14:25,46915-11-24 16:14:25 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 16:14:25,47015-11-24 16:14:25 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:14:25,47115-11-24 16:14:25 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:14:25,47215-11-24 16:14:25 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:14:25,47315-11-24 16:14:25 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.StandardQueryCache
2015-11-24 16:14:25,47315-11-24 16:14:25 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.StandardQueryCache'.
2015-11-24 16:14:25,47415-11-24 16:14:25 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.StandardQueryCache
2015-11-24 16:14:25,47415-11-24 16:14:25 DEBUG (SessionFactoryImpl.java:539 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named HQL queries
2015-11-24 16:14:25,47415-11-24 16:14:25 DEBUG (SessionFactoryImpl.java:559 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named SQL queries
2015-11-24 16:14:25,47615-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:25,47815-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'sessionFactory'
2015-11-24 16:14:25,47815-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:25,48915-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userOperateDao'
2015-11-24 16:14:25,48915-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:25,49015-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userOperateDao'
2015-11-24 16:14:25,49115-11-24 16:14:25 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userInterfaceDao'
2015-11-24 16:14:25,49115-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userInterfaceDao'
2015-11-24 16:14:25,49215-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userInterfaceDao' to allow for resolving potential circular references
2015-11-24 16:14:25,50015-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:14:25,50115-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userInterfaceDao'
2015-11-24 16:14:25,50115-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:25,50215-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userInterfaceDao'
2015-11-24 16:14:25,50315-11-24 16:14:25 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'noteNumRecordDao'
2015-11-24 16:14:25,50315-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'noteNumRecordDao'
2015-11-24 16:14:25,50415-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'noteNumRecordDao' to allow for resolving potential circular references
2015-11-24 16:14:25,51415-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:14:25,51615-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'noteNumRecordDao'
2015-11-24 16:14:25,51715-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:25,51915-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'noteNumRecordDao'
2015-11-24 16:14:25,52015-11-24 16:14:25 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'crashLogDao'
2015-11-24 16:14:25,52015-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'crashLogDao'
2015-11-24 16:14:25,52115-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'crashLogDao' to allow for resolving potential circular references
2015-11-24 16:14:25,60215-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:14:25,60515-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'crashLogDao'
2015-11-24 16:14:25,60515-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:25,60615-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'crashLogDao'
2015-11-24 16:14:25,60615-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'dataSource'
2015-11-24 16:14:25,60615-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:14:25,60715-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:14:25,60715-11-24 16:14:25 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:14:25,60715-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:14:25,61015-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2015-11-24 16:14:25,61515-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:14:25,61615-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:14:25,61615-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:14:25,61615-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:25,61715-11-24 16:14:25 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'transactionManager'
2015-11-24 16:14:25,61715-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'transactionManager'
2015-11-24 16:14:25,62815-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-11-24 16:14:25,63615-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:14:25,63715-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-11-24 16:14:25,65215-11-24 16:14:25  INFO (HibernateTransactionManager.java:415 LINE) HibernateTransactionManager.afterPropertiesSet -> Using DataSource [org.apache.commons.dbcp.BasicDataSource@2c394e3f] of Hibernate SessionFactory for HibernateTransactionManager
2015-11-24 16:14:25,65215-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:25,65415-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'transactionManager'
2015-11-24 16:14:25,65415-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:14:25,65415-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:14:25,65515-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:14:25,65515-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:14:25,65515-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:14:25,65515-11-24 16:14:25 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'operateService'
2015-11-24 16:14:25,65615-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'operateService'
2015-11-24 16:14:25,67115-11-24 16:14:25 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserOperateServiceImp]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 16:14:25,67115-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'operateService' to allow for resolving potential circular references
2015-11-24 16:14:25,67615-11-24 16:14:25 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'operateService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 16:14:25,69515-11-24 16:14:25 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'fileRemote'
2015-11-24 16:14:25,69615-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'fileRemote'
2015-11-24 16:14:25,70015-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'fileRemote' to allow for resolving potential circular references
2015-11-24 16:14:25,72915-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'fileRemote'
2015-11-24 16:14:25,77415-11-24 16:14:25 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static
2015-11-24 16:14:25,78715-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'fileRemote'
2015-11-24 16:14:25,78815-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 16:14:25,79015-11-24 16:14:25 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'operateService' to bean named 'userOperateDao'
2015-11-24 16:14:25,79015-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:25,80515-11-24 16:14:25 DEBUG (AbstractFallbackTransactionAttributeSource.java:106 LINE) AbstractFallbackTransactionAttributeSource.getTransactionAttribute -> Adding transactional method 'registAccount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '',-java.lang.Throwable
2015-11-24 16:14:25,80715-11-24 16:14:25 DEBUG (AbstractAutoProxyCreator.java:534 LINE) AbstractAutoProxyCreator.buildAdvisors -> Creating implicit proxy for bean 'operateService' with 0 common interceptors and 1 specific interceptors
2015-11-24 16:14:25,80915-11-24 16:14:25 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.fx.mobile.user.service.impl.UserOperateServiceImp@4065a018]
2015-11-24 16:14:25,81815-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'operateService'
2015-11-24 16:14:25,82015-11-24 16:14:25 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'SpringContextUtil'
2015-11-24 16:14:25,82015-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'SpringContextUtil'
2015-11-24 16:14:25,82115-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'SpringContextUtil' to allow for resolving potential circular references
2015-11-24 16:14:25,82715-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:25,82815-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'SpringContextUtil'
2015-11-24 16:14:25,82815-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'fileRemote'
2015-11-24 16:14:25,82915-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'corePropertyConfigurer'
2015-11-24 16:14:25,83115-11-24 16:14:25 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userinterfaceService'
2015-11-24 16:14:25,83115-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userinterfaceService'
2015-11-24 16:14:25,83315-11-24 16:14:25 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserInterfaceServiceImpl]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 16:14:25,83415-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userinterfaceService' to allow for resolving potential circular references
2015-11-24 16:14:25,84015-11-24 16:14:25 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'userinterfaceService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 16:14:25,84115-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userInterfaceDao'
2015-11-24 16:14:25,84215-11-24 16:14:25 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'userinterfaceService' to bean named 'userInterfaceDao'
2015-11-24 16:14:25,84315-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:25,84415-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userinterfaceService'
2015-11-24 16:14:25,84415-11-24 16:14:25 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'urlProperties'
2015-11-24 16:14:25,84515-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'urlProperties'
2015-11-24 16:14:25,84515-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'urlProperties' to allow for resolving potential circular references
2015-11-24 16:14:25,85015-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:25,85115-11-24 16:14:25 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'urlProperties'
2015-11-24 16:14:25,85115-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:14:25,85415-11-24 16:14:25 DEBUG (AbstractApplicationContext.java:858 LINE) AbstractApplicationContext.initLifecycleProcessor -> Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@2088a9b]
2015-11-24 16:14:25,85515-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 16:14:25,85815-11-24 16:14:25 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-11-24 16:14:25,86015-11-24 16:14:25 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-11-24 16:14:25,86115-11-24 16:14:25 DEBUG (PropertySourcesPropertyResolver.java:93 LINE) PropertySourcesPropertyResolver.getProperty -> Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-11-24 16:14:25,86115-11-24 16:14:25 DEBUG (CacheAwareContextLoaderDelegate.java:93 LINE) CacheAwareContextLoaderDelegate.loadContext -> Storing ApplicationContext in cache under key [[MergedContextConfiguration@7a79f5f7 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 16:14:25,86915-11-24 16:14:25 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 16:14:25,86915-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 16:14:25,87015-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:14:25,88015-11-24 16:14:25 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@7ce6de16 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@18feb66a, testMethod = getUserByNameAndPass@UserOperateDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a79f5f7 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 16:14:25,91115-11-24 16:14:25 DEBUG (DirtiesContextTestExecutionListener.java:138 LINE) DirtiesContextTestExecutionListener.afterTestClass -> After test class: context [[TestContext@7ce6de16 testClass = UserOperateDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a79f5f7 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
2015-11-24 16:14:25,91515-11-24 16:14:25  INFO (AbstractApplicationContext.java:1042 LINE) AbstractApplicationContext.doClose -> Closing org.springframework.context.support.GenericApplicationContext@588b28e0: startup date [Tue Nov 24 16:14:21 CST 2015]; root of context hierarchy
2015-11-24 16:14:25,91615-11-24 16:14:25 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 16:14:25,91715-11-24 16:14:25  INFO (DefaultSingletonBeanRegistry.java:444 LINE) DefaultSingletonBeanRegistry.destroySingletons -> Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@27faefe0: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 16:14:25,92115-11-24 16:14:25 DEBUG (DefaultSingletonBeanRegistry.java:500 LINE) DefaultSingletonBeanRegistry.destroyBean -> Retrieved dependent beans for bean 'userOperateDao': [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:14:25,92115-11-24 16:14:25 DEBUG (DisposableBeanAdapter.java:219 LINE) DisposableBeanAdapter.destroy -> Invoking destroy() on bean with name 'sessionFactory'
2015-11-24 16:14:25,92115-11-24 16:14:25  INFO (AbstractSessionFactoryBean.java:223 LINE) AbstractSessionFactoryBean.destroy -> Closing Hibernate SessionFactory
2015-11-24 16:14:25,92115-11-24 16:14:25  INFO (SessionFactoryImpl.java:927 LINE) SessionFactoryImpl.close -> closing
2015-11-24 16:14:25,96915-11-24 16:14:25 DEBUG (DisposableBeanAdapter.java:295 LINE) DisposableBeanAdapter.invokeCustomDestroyMethod -> Invoking destroy method 'close' on bean with name 'dataSource'
2015-11-24 16:15:15,35815-11-24 16:15:15 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 16:15:15,46315-11-24 16:15:15 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@d1735f5 declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 16:15:15,46515-11-24 16:15:15 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:15:15,46815-11-24 16:15:15 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 16:15:15,49315-11-24 16:15:15 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:15:15,49415-11-24 16:15:15 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:15:15,49615-11-24 16:15:15 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:15:15,49615-11-24 16:15:15 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:15:15,50115-11-24 16:15:15 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:15:15,50115-11-24 16:15:15 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:15:15,50315-11-24 16:15:15 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:15:15,50315-11-24 16:15:15 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:15:15,50415-11-24 16:15:15 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:15:15,50415-11-24 16:15:15 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:15:15,50615-11-24 16:15:15 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:15:15,50615-11-24 16:15:15 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:15:15,51215-11-24 16:15:15 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@4dd290b5 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@3b1a82fd, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 16:15:15,51315-11-24 16:15:15 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 16:15:15,51415-11-24 16:15:15 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 16:15:15,70415-11-24 16:15:15 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:15:15,70515-11-24 16:15:15 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:15:15,70715-11-24 16:15:15 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:15:15,70715-11-24 16:15:15 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:15:15,72615-11-24 16:15:15 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:15:15,72715-11-24 16:15:15 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:15:15,72815-11-24 16:15:15 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:15:15,72815-11-24 16:15:15 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:15:15,78815-11-24 16:15:15 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 16:15:15,78915-11-24 16:15:15 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 16:15:15,79215-11-24 16:15:15 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 16:15:15,79315-11-24 16:15:15  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 16:15:15,79815-11-24 16:15:15 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:15:15,82415-11-24 16:15:15 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 16:15:15,83015-11-24 16:15:15 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 16:15:15,83315-11-24 16:15:15 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:15:15,95115-11-24 16:15:15 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:15:15,96015-11-24 16:15:15  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 16:15:15,96215-11-24 16:15:15 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:15:15,96515-11-24 16:15:15 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:15:16,00115-11-24 16:15:16 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:15:16,01815-11-24 16:15:16  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 16:15:16,02015-11-24 16:15:16 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:15:16,04015-11-24 16:15:16 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:15:16,11715-11-24 16:15:16 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 16:15:16,12115-11-24 16:15:16 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 16:15:16,12615-11-24 16:15:16 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:15:16,13715-11-24 16:15:16 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 16:15:16,16815-11-24 16:15:16  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 16:15:16,17015-11-24 16:15:16 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:15:16,17215-11-24 16:15:16 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:15:16,19215-11-24 16:15:16 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 16:15:16,19615-11-24 16:15:16 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 16:15:16,20415-11-24 16:15:16 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:15:16,29415-11-24 16:15:16  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 16:15:16,30615-11-24 16:15:16  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 16:15:16,31615-11-24 16:15:16 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 16:15:16,31615-11-24 16:15:16 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 16:15:16,31815-11-24 16:15:16 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 16:15:16,32015-11-24 16:15:16 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 16:15:16,35015-11-24 16:15:16 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 16:15:16,35515-11-24 16:15:16 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 16:15:16,35715-11-24 16:15:16 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 16:15:16,36015-11-24 16:15:16 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 16:15:16,36515-11-24 16:15:16  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 16:15:16,36615-11-24 16:15:16  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 16:15:16,36915-11-24 16:15:16 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:15:16,37415-11-24 16:15:16 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:15:16,39315-11-24 16:15:16 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:15:16,39415-11-24 16:15:16 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 16:15:16,40015-11-24 16:15:16  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@4ad9cb27: startup date [Tue Nov 24 16:15:16 CST 2015]; root of context hierarchy
2015-11-24 16:15:16,41615-11-24 16:15:16 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@4ad9cb27: org.springframework.beans.factory.support.DefaultListableBeanFactory@27faefe0: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 16:15:16,49215-11-24 16:15:16 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:15:16,49315-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:15:16,51215-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:15:16,51615-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:15:16,65015-11-24 16:15:16 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 16:15:16,65015-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 16:15:16,65515-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 16:15:16,74615-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 16:15:16,74615-11-24 16:15:16  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 16:15:16,74715-11-24 16:15:16  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 16:15:16,74715-11-24 16:15:16  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 16:15:16,75515-11-24 16:15:16 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:15:16,75515-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:15:16,75715-11-24 16:15:16  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 16:15:16,75815-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:15:16,75815-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:15:16,75815-11-24 16:15:16 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:15:16,75815-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:15:16,75915-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:15:16,75915-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:15:16,76015-11-24 16:15:16 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:15:16,76015-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:15:16,76515-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:15:16,76615-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:15:16,76715-11-24 16:15:16 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:15:16,76715-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:15:16,76815-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:15:16,76815-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:15:16,76815-11-24 16:15:16 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:15:16,76815-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:15:16,76915-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 16:15:16,76915-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:15:16,76915-11-24 16:15:16 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:15:16,76915-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:15:16,79615-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 16:15:16,88115-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:15:16,88515-11-24 16:15:16 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@24360ac1]
2015-11-24 16:15:16,88815-11-24 16:15:16 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1bc50966]
2015-11-24 16:15:16,89715-11-24 16:15:16  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@27faefe0: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 16:15:16,89815-11-24 16:15:16 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 16:15:16,89815-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 16:15:16,91215-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 16:15:16,92215-11-24 16:15:16 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 16:15:16,92215-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 16:15:16,94715-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 16:15:16,96115-11-24 16:15:16 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 16:15:16,96115-11-24 16:15:16 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 16:15:17,13515-11-24 16:15:17 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 16:15:17,14915-11-24 16:15:17 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:15:17,14915-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:15:17,15015-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:15:17,15115-11-24 16:15:17 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:15:17,15115-11-24 16:15:17 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:15:17,15215-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:15:17,15215-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:15:17,15315-11-24 16:15:17 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:15:17,15715-11-24 16:15:17 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:15:17,15815-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:15:17,15915-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:15:17,16015-11-24 16:15:17 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:15:17,16615-11-24 16:15:17 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:15:17,16715-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:15:17,16815-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:15:17,16915-11-24 16:15:17 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:15:17,17115-11-24 16:15:17 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:15:17,17215-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:15:17,17315-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:15:17,17415-11-24 16:15:17 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:15:17,20015-11-24 16:15:17 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:17,21815-11-24 16:15:17 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:17,22115-11-24 16:15:17 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 16:15:17,31315-11-24 16:15:17 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:15:17,31415-11-24 16:15:17 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:15:17,31715-11-24 16:15:17 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 16:15:17,32615-11-24 16:15:17 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:15:17,32715-11-24 16:15:17 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:17,33015-11-24 16:15:17 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 16:15:17,33215-11-24 16:15:17 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:15:17,33215-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:15:17,33315-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:15:17,33315-11-24 16:15:17 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:15:17,33515-11-24 16:15:17 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:15:17,33615-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:15:17,33815-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:15:17,33815-11-24 16:15:17 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:15:17,33915-11-24 16:15:17 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:15:17,33915-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:15:17,34015-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:15:17,34015-11-24 16:15:17 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:15:17,34115-11-24 16:15:17 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:15:17,34215-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:15:17,34315-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:15:17,34315-11-24 16:15:17 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:15:17,34415-11-24 16:15:17 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:15:17,34515-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:15:17,34515-11-24 16:15:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:15:17,34615-11-24 16:15:17 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:15:17,35215-11-24 16:15:17 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 16:15:17,49815-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7cf60a7c
2015-11-24 16:15:17,49915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7cf60a7c
2015-11-24 16:15:17,49915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7cf60a7c
2015-11-24 16:15:17,50115-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@62db15e1
2015-11-24 16:15:17,51415-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b596684
2015-11-24 16:15:17,51615-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@633b3b2e
2015-11-24 16:15:17,51915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@7f938cc2
2015-11-24 16:15:17,51915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@7f938cc2
2015-11-24 16:15:17,52015-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f938cc2
2015-11-24 16:15:17,52215-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@63849b09
2015-11-24 16:15:17,52315-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@63849b09
2015-11-24 16:15:17,52315-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@63849b09
2015-11-24 16:15:17,52715-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@3020cc2d
2015-11-24 16:15:17,52815-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@3020cc2d
2015-11-24 16:15:17,52815-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3020cc2d
2015-11-24 16:15:17,53115-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@65ca7e4a
2015-11-24 16:15:17,53115-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@65ca7e4a
2015-11-24 16:15:17,53115-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@65ca7e4a
2015-11-24 16:15:17,53415-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@55071871
2015-11-24 16:15:17,53515-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@55071871
2015-11-24 16:15:17,53515-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@55071871
2015-11-24 16:15:17,53915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@44f9c0c
2015-11-24 16:15:17,53915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@44f9c0c
2015-11-24 16:15:17,53915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44f9c0c
2015-11-24 16:15:17,54215-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@4331d29e
2015-11-24 16:15:17,54315-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@4331d29e
2015-11-24 16:15:17,54315-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4331d29e
2015-11-24 16:15:17,54715-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@604dc5e1
2015-11-24 16:15:17,54915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@604dc5e1
2015-11-24 16:15:17,55715-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6ea20f02
2015-11-24 16:15:17,55715-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6ea20f02
2015-11-24 16:15:17,56115-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@2513264a
2015-11-24 16:15:17,56115-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@2513264a
2015-11-24 16:15:17,56415-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@41f6576
2015-11-24 16:15:17,56415-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@41f6576
2015-11-24 16:15:17,56915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@2e7c324a
2015-11-24 16:15:17,57015-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@2e7c324a
2015-11-24 16:15:17,57415-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@2037bd0e
2015-11-24 16:15:17,57615-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2037bd0e
2015-11-24 16:15:17,58115-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@75304935
2015-11-24 16:15:17,58115-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@75304935
2015-11-24 16:15:17,58215-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@75304935
2015-11-24 16:15:17,58415-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d69c3e2
2015-11-24 16:15:17,58815-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@1ab50384
2015-11-24 16:15:17,58915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1ab50384
2015-11-24 16:15:17,58915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1ab50384
2015-11-24 16:15:17,62915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4e708fc0
2015-11-24 16:15:17,63115-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@653e3e90
2015-11-24 16:15:17,63215-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@653e3e90
2015-11-24 16:15:17,63415-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@3af8b275
2015-11-24 16:15:17,63415-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3af8b275
2015-11-24 16:15:17,64515-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@560580ab
2015-11-24 16:15:17,64615-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@560580ab
2015-11-24 16:15:17,65315-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@1ab37bd
2015-11-24 16:15:17,65315-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1ab37bd
2015-11-24 16:15:17,72715-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@39fc57bd
2015-11-24 16:15:17,72815-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@39fc57bd
2015-11-24 16:15:17,72915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d003626
2015-11-24 16:15:17,73115-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1287e9a9
2015-11-24 16:15:17,73315-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@309c3c24
2015-11-24 16:15:17,73415-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@309c3c24
2015-11-24 16:15:17,73415-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@309c3c24
2015-11-24 16:15:17,74015-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1410770
2015-11-24 16:15:17,74015-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1410770
2015-11-24 16:15:17,74215-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1410770
2015-11-24 16:15:17,74615-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@6f220804
2015-11-24 16:15:17,74915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@720dd4ee
2015-11-24 16:15:17,74915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@720dd4ee
2015-11-24 16:15:17,75015-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@720dd4ee
2015-11-24 16:15:17,75215-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@664beade
2015-11-24 16:15:17,75215-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@664beade
2015-11-24 16:15:17,75415-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@664beade
2015-11-24 16:15:17,76015-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@7c56c5d5
2015-11-24 16:15:17,77315-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@4cdd7469
2015-11-24 16:15:17,77415-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4cdd7469
2015-11-24 16:15:17,77615-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@28ec8597
2015-11-24 16:15:17,77815-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@468f5968
2015-11-24 16:15:17,78615-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@4e9599e9
2015-11-24 16:15:17,78715-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4e9599e9
2015-11-24 16:15:17,78915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@639e075e
2015-11-24 16:15:17,79015-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@53c40ab7
2015-11-24 16:15:17,79215-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@4973ab0a
2015-11-24 16:15:17,80515-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@44ccb229
2015-11-24 16:15:17,81615-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@6a9cce0f
2015-11-24 16:15:17,81615-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a9cce0f
2015-11-24 16:15:17,81815-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b87966c
2015-11-24 16:15:17,81815-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@62a49a92
2015-11-24 16:15:17,81915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@24a019d6
2015-11-24 16:15:17,81915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@b004363
2015-11-24 16:15:17,81915-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3e481e39
2015-11-24 16:15:17,83315-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@70b85020
2015-11-24 16:15:17,83415-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@54949eb0
2015-11-24 16:15:17,83515-11-24 16:15:17 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@693e6031
2015-11-24 16:15:17,91215-11-24 16:15:17  INFO (Version.java:37 LINE) Version.<clinit> -> Hibernate Commons Annotations 3.2.0.Final
2015-11-24 16:15:17,92115-11-24 16:15:17  INFO (Environment.java:603 LINE) Environment.<clinit> -> Hibernate 3.6.8.Final
2015-11-24 16:15:17,92415-11-24 16:15:17  INFO (Environment.java:636 LINE) Environment.<clinit> -> hibernate.properties not found
2015-11-24 16:15:17,92715-11-24 16:15:17  INFO (Environment.java:814 LINE) Environment.buildBytecodeProvider -> Bytecode provider name : javassist
2015-11-24 16:15:17,93215-11-24 16:15:17  INFO (Environment.java:695 LINE) Environment.<clinit> -> using JDK 1.4 java.sql.Timestamp handling
2015-11-24 16:15:18,06115-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2015-11-24 16:15:18,06215-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2015-11-24 16:15:18,06315-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 16:15:18,06515-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 16:15:18,06915-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2015-11-24 16:15:18,07015-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2015-11-24 16:15:18,07215-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2015-11-24 16:15:18,07515-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2015-11-24 16:15:18,07815-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2015-11-24 16:15:18,08015-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2015-11-24 16:15:18,08115-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2015-11-24 16:15:18,08315-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2015-11-24 16:15:18,08415-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2015-11-24 16:15:18,08615-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-11-24 16:15:18,08815-11-24 16:15:18 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2015-11-24 16:15:18,15415-11-24 16:15:18 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:15:18,16415-11-24 16:15:18  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:15:18,16515-11-24 16:15:18 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:15:18,16715-11-24 16:15:18 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:15:18,28015-11-24 16:15:18 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:15:18,28115-11-24 16:15:18  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:15:18,28115-11-24 16:15:18 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:15:18,28315-11-24 16:15:18 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:15:18,39815-11-24 16:15:18 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 16:15:18,39815-11-24 16:15:18  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 16:15:18,39915-11-24 16:15:18 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 16:15:18,40015-11-24 16:15:18 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 16:15:18,50115-11-24 16:15:18 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:15:18,52515-11-24 16:15:18  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.UserOperate -> user_operate
2015-11-24 16:15:18,55115-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:15:18,60415-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userName -> userName
2015-11-24 16:15:18,60515-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPassword -> userPassword
2015-11-24 16:15:18,60515-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: phicommId -> phicomm_id
2015-11-24 16:15:18,60515-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userEmail -> userEmail
2015-11-24 16:15:18,60615-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPhoneNumb -> user_PhoneNumb
2015-11-24 16:15:18,60615-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userType -> userType
2015-11-24 16:15:18,60715-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: isChecked -> isChecked
2015-11-24 16:15:18,60715-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nickname -> nickname
2015-11-24 16:15:18,60715-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: figureurl -> figureurl
2015-11-24 16:15:18,60815-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: sex -> sex
2015-11-24 16:15:18,60815-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: province -> province
2015-11-24 16:15:18,60815-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: city -> city
2015-11-24 16:15:18,60915-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: birthday -> birthday
2015-11-24 16:15:18,60915-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openId -> open_id
2015-11-24 16:15:18,61015-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openKey -> open_key
2015-11-24 16:15:18,61015-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: accessToken -> access_token
2015-11-24 16:15:18,61115-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: expireseIn -> expirese_in
2015-11-24 16:15:18,61115-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: devinfo -> devinfo
2015-11-24 16:15:18,61215-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userinfo -> userinfo
2015-11-24 16:15:18,61215-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqq -> openqq
2015-11-24 16:15:18,61315-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqqinfo -> openqqinfo
2015-11-24 16:15:18,61315-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensina -> opensina
2015-11-24 16:15:18,61415-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensinainfo -> opensinainfo
2015-11-24 16:15:18,61515-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: createTime -> createTime
2015-11-24 16:15:18,61615-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: updateTime -> updateTime
2015-11-24 16:15:18,61615-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: lastLoginTime -> lastLoginTime
2015-11-24 16:15:18,61715-11-24 16:15:18  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.NoteNumbRecord -> note_numb_record
2015-11-24 16:15:18,61715-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:15:18,61815-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nodeNumb -> node_numb
2015-11-24 16:15:18,61815-11-24 16:15:18  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.CrashLog -> crash_log
2015-11-24 16:15:18,61915-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 16:15:18,61915-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: url -> url
2015-11-24 16:15:18,61915-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: describes -> describes
2015-11-24 16:15:18,62015-11-24 16:15:18 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: addDate -> addDate
2015-11-24 16:15:18,62015-11-24 16:15:18 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:15:18,62315-11-24 16:15:18 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:15:18,62515-11-24 16:15:18 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:15:18,62515-11-24 16:15:18 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:15:18,62715-11-24 16:15:18 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:15:18,62815-11-24 16:15:18 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:15:18,62915-11-24 16:15:18 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:15:18,62915-11-24 16:15:18 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:15:18,63715-11-24 16:15:18  INFO (Configuration.java:1676 LINE) Configuration.applyHibernateValidatorLegacyConstraintsOnDDL -> Hibernate Validator not found: ignoring
2015-11-24 16:15:18,68615-11-24 16:15:18 DEBUG (LoggerFactory.java:29 LINE) LoggerFactory.make -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-11-24 16:15:18,68715-11-24 16:15:18  INFO (Version.java:27 LINE) Version.<clinit> -> HV000001: Hibernate Validator 5.0.0.Final
2015-11-24 16:15:18,75615-11-24 16:15:18 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:15:18,77115-11-24 16:15:18 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:15:18,78015-11-24 16:15:18 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:15:18,99515-11-24 16:15:18  INFO (LocalSessionFactoryBean.java:780 LINE) LocalSessionFactoryBean.buildSessionFactory -> Building new Hibernate SessionFactory
2015-11-24 16:15:18,99615-11-24 16:15:18 DEBUG (Configuration.java:1854 LINE) Configuration.buildSessionFactory -> Preparing to build session factory with filters : {}
2015-11-24 16:15:18,99615-11-24 16:15:18 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:15:18,99615-11-24 16:15:18 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:15:18,99715-11-24 16:15:18 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:15:18,99715-11-24 16:15:18 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:15:18,99715-11-24 16:15:18 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:15:18,99815-11-24 16:15:18 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:15:18,99815-11-24 16:15:18 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:15:18,99815-11-24 16:15:18 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:15:18,99815-11-24 16:15:18 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:15:19,01915-11-24 16:15:19 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:15:19,01915-11-24 16:15:19 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:15:19,05215-11-24 16:15:19 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:15:19,07615-11-24 16:15:19 DEBUG (Configuration.java:1896 LINE) Configuration.enableLegacyHibernateValidator -> Legacy Validator not present in classpath, ignoring event listener registration
2015-11-24 16:15:19,07615-11-24 16:15:19 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:15:19,07715-11-24 16:15:19 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:15:19,07815-11-24 16:15:19 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:15:19,08315-11-24 16:15:19 DEBUG (HibernateSearchEventListenerRegister.java:231 LINE) HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener -> Search not present in classpath, ignoring event listener registration.
2015-11-24 16:15:19,08415-11-24 16:15:19  INFO (HibernateSearchEventListenerRegister.java:75 LINE) HibernateSearchEventListenerRegister.enableHibernateSearch -> Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2015-11-24 16:15:19,08915-11-24 16:15:19  INFO (ConnectionProviderFactory.java:173 LINE) ConnectionProviderFactory.initializeConnectionProviderFromConfig -> Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2015-11-24 16:15:19,49815-11-24 16:15:19  INFO (Dialect.java:135 LINE) Dialect.<init> -> Using dialect: org.hibernate.dialect.MySQLDialect
2015-11-24 16:15:19,52715-11-24 16:15:19  INFO (SettingsFactory.java:126 LINE) SettingsFactory.buildSettings -> Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-11-24 16:15:19,52715-11-24 16:15:19  INFO (SettingsFactory.java:132 LINE) SettingsFactory.buildSettings -> Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.25 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2015-11-24 16:15:19,53215-11-24 16:15:19  INFO (TransactionFactoryFactory.java:65 LINE) TransactionFactoryFactory.buildTransactionFactory -> Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2015-11-24 16:15:19,53415-11-24 16:15:19  INFO (TransactionManagerLookupFactory.java:83 LINE) TransactionManagerLookupFactory.getTransactionManagerLookup -> No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2015-11-24 16:15:19,53415-11-24 16:15:19  INFO (SettingsFactory.java:179 LINE) SettingsFactory.buildSettings -> Automatic flush during beforeCompletion(): disabled
2015-11-24 16:15:19,53515-11-24 16:15:19  INFO (SettingsFactory.java:183 LINE) SettingsFactory.buildSettings -> Automatic session close at end of transaction: disabled
2015-11-24 16:15:19,53615-11-24 16:15:19  INFO (SettingsFactory.java:190 LINE) SettingsFactory.buildSettings -> JDBC batch size: 25
2015-11-24 16:15:19,53615-11-24 16:15:19  INFO (SettingsFactory.java:193 LINE) SettingsFactory.buildSettings -> JDBC batch updates for versioned data: disabled
2015-11-24 16:15:19,53715-11-24 16:15:19  INFO (SettingsFactory.java:198 LINE) SettingsFactory.buildSettings -> Scrollable result sets: enabled
2015-11-24 16:15:19,53715-11-24 16:15:19 DEBUG (SettingsFactory.java:202 LINE) SettingsFactory.buildSettings -> Wrap result sets: disabled
2015-11-24 16:15:19,53915-11-24 16:15:19  INFO (SettingsFactory.java:206 LINE) SettingsFactory.buildSettings -> JDBC3 getGeneratedKeys(): enabled
2015-11-24 16:15:19,54015-11-24 16:15:19  INFO (SettingsFactory.java:210 LINE) SettingsFactory.buildSettings -> JDBC result set fetch size: 50
2015-11-24 16:15:19,54015-11-24 16:15:19  INFO (SettingsFactory.java:214 LINE) SettingsFactory.buildSettings -> Connection release mode: after_transaction
2015-11-24 16:15:19,54115-11-24 16:15:19  INFO (SettingsFactory.java:238 LINE) SettingsFactory.buildSettings -> Maximum outer join fetch depth: 2
2015-11-24 16:15:19,55215-11-24 16:15:19  INFO (SettingsFactory.java:241 LINE) SettingsFactory.buildSettings -> Default batch fetch size: 1
2015-11-24 16:15:19,55315-11-24 16:15:19  INFO (SettingsFactory.java:245 LINE) SettingsFactory.buildSettings -> Generate SQL with comments: disabled
2015-11-24 16:15:19,55315-11-24 16:15:19  INFO (SettingsFactory.java:249 LINE) SettingsFactory.buildSettings -> Order SQL updates by primary key: disabled
2015-11-24 16:15:19,55415-11-24 16:15:19  INFO (SettingsFactory.java:253 LINE) SettingsFactory.buildSettings -> Order SQL inserts for batching: disabled
2015-11-24 16:15:19,55415-11-24 16:15:19  INFO (SettingsFactory.java:431 LINE) SettingsFactory.createQueryTranslatorFactory -> Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2015-11-24 16:15:19,55815-11-24 16:15:19  INFO (ASTQueryTranslatorFactory.java:47 LINE) ASTQueryTranslatorFactory.<init> -> Using ASTQueryTranslatorFactory
2015-11-24 16:15:19,55815-11-24 16:15:19  INFO (SettingsFactory.java:261 LINE) SettingsFactory.buildSettings -> Query language substitutions: {false='N', true='Y'}
2015-11-24 16:15:19,55915-11-24 16:15:19  INFO (SettingsFactory.java:266 LINE) SettingsFactory.buildSettings -> JPA-QL strict compliance: disabled
2015-11-24 16:15:19,55915-11-24 16:15:19  INFO (SettingsFactory.java:271 LINE) SettingsFactory.buildSettings -> Second-level cache: enabled
2015-11-24 16:15:19,56015-11-24 16:15:19  INFO (SettingsFactory.java:275 LINE) SettingsFactory.buildSettings -> Query cache: enabled
2015-11-24 16:15:19,56115-11-24 16:15:19  INFO (SettingsFactory.java:406 LINE) SettingsFactory.createRegionFactory -> Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
2015-11-24 16:15:19,56915-11-24 16:15:19  INFO (RegionFactoryCacheProviderBridge.java:61 LINE) RegionFactoryCacheProviderBridge.<init> -> Cache provider: org.hibernate.cache.EhCacheProvider
2015-11-24 16:15:19,57415-11-24 16:15:19  INFO (SettingsFactory.java:285 LINE) SettingsFactory.buildSettings -> Optimize cache for minimal puts: disabled
2015-11-24 16:15:19,57615-11-24 16:15:19  INFO (SettingsFactory.java:294 LINE) SettingsFactory.buildSettings -> Structured second-level cache entries: disabled
2015-11-24 16:15:19,57715-11-24 16:15:19  INFO (SettingsFactory.java:385 LINE) SettingsFactory.createQueryCacheFactory -> Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
2015-11-24 16:15:19,58715-11-24 16:15:19  INFO (SettingsFactory.java:314 LINE) SettingsFactory.buildSettings -> Echoing all SQL to stdout
2015-11-24 16:15:19,58815-11-24 16:15:19  INFO (SettingsFactory.java:323 LINE) SettingsFactory.buildSettings -> Statistics: disabled
2015-11-24 16:15:19,58915-11-24 16:15:19  INFO (SettingsFactory.java:327 LINE) SettingsFactory.buildSettings -> Deleted entity synthetic identifier rollback: disabled
2015-11-24 16:15:19,58915-11-24 16:15:19  INFO (SettingsFactory.java:343 LINE) SettingsFactory.buildSettings -> Default entity-mode: pojo
2015-11-24 16:15:19,59015-11-24 16:15:19  INFO (SettingsFactory.java:347 LINE) SettingsFactory.buildSettings -> Named query checking : enabled
2015-11-24 16:15:19,59015-11-24 16:15:19  INFO (SettingsFactory.java:351 LINE) SettingsFactory.buildSettings -> Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2015-11-24 16:15:19,61915-11-24 16:15:19  INFO (SessionFactoryImpl.java:202 LINE) SessionFactoryImpl.<init> -> building session factory
2015-11-24 16:15:19,62415-11-24 16:15:19 DEBUG (SessionFactoryImpl.java:206 LINE) SessionFactoryImpl.<init> -> Statistics initialized [enabled=false]}
2015-11-24 16:15:19,62615-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7cf60a7c
2015-11-24 16:15:19,62615-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7cf60a7c
2015-11-24 16:15:19,62615-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7cf60a7c
2015-11-24 16:15:19,62715-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@62db15e1
2015-11-24 16:15:19,62715-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@3b596684
2015-11-24 16:15:19,62715-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@633b3b2e
2015-11-24 16:15:19,62815-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@7f938cc2
2015-11-24 16:15:19,62815-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@7f938cc2
2015-11-24 16:15:19,62815-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7f938cc2
2015-11-24 16:15:19,62815-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@63849b09
2015-11-24 16:15:19,62915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@63849b09
2015-11-24 16:15:19,62915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@63849b09
2015-11-24 16:15:19,62915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@3020cc2d
2015-11-24 16:15:19,62915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@3020cc2d
2015-11-24 16:15:19,62915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3020cc2d
2015-11-24 16:15:19,63015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@65ca7e4a
2015-11-24 16:15:19,63015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@65ca7e4a
2015-11-24 16:15:19,63015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@65ca7e4a
2015-11-24 16:15:19,63115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@55071871
2015-11-24 16:15:19,63115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@55071871
2015-11-24 16:15:19,63115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@55071871
2015-11-24 16:15:19,63115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@44f9c0c
2015-11-24 16:15:19,63215-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@44f9c0c
2015-11-24 16:15:19,63215-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@44f9c0c
2015-11-24 16:15:19,64715-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@4331d29e
2015-11-24 16:15:19,64815-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@4331d29e
2015-11-24 16:15:19,64815-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4331d29e
2015-11-24 16:15:19,64915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@604dc5e1
2015-11-24 16:15:19,64915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@604dc5e1
2015-11-24 16:15:19,65015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6ea20f02
2015-11-24 16:15:19,65015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6ea20f02
2015-11-24 16:15:19,65015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@2513264a
2015-11-24 16:15:19,65015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@2513264a
2015-11-24 16:15:19,65115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@41f6576
2015-11-24 16:15:19,65115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@41f6576
2015-11-24 16:15:19,65115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@2e7c324a
2015-11-24 16:15:19,65115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@2e7c324a
2015-11-24 16:15:19,65115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@2037bd0e
2015-11-24 16:15:19,65115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2037bd0e
2015-11-24 16:15:19,67315-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@75304935
2015-11-24 16:15:19,67415-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@75304935
2015-11-24 16:15:19,68615-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@75304935
2015-11-24 16:15:19,68715-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@d69c3e2
2015-11-24 16:15:19,68715-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@1ab50384
2015-11-24 16:15:19,68715-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1ab50384
2015-11-24 16:15:19,68815-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1ab50384
2015-11-24 16:15:19,68815-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4e708fc0
2015-11-24 16:15:19,68915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@653e3e90
2015-11-24 16:15:19,68915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@653e3e90
2015-11-24 16:15:19,68915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@3af8b275
2015-11-24 16:15:19,68915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3af8b275
2015-11-24 16:15:19,68915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@560580ab
2015-11-24 16:15:19,69015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@560580ab
2015-11-24 16:15:19,69015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@1ab37bd
2015-11-24 16:15:19,69015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1ab37bd
2015-11-24 16:15:19,69015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@39fc57bd
2015-11-24 16:15:19,69115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@39fc57bd
2015-11-24 16:15:19,69115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@d003626
2015-11-24 16:15:19,69115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1287e9a9
2015-11-24 16:15:19,69115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@309c3c24
2015-11-24 16:15:19,69215-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@309c3c24
2015-11-24 16:15:19,69215-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@309c3c24
2015-11-24 16:15:19,69315-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1410770
2015-11-24 16:15:19,69315-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1410770
2015-11-24 16:15:19,69415-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1410770
2015-11-24 16:15:19,69415-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@6f220804
2015-11-24 16:15:19,69515-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@720dd4ee
2015-11-24 16:15:19,69615-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@720dd4ee
2015-11-24 16:15:19,69715-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@720dd4ee
2015-11-24 16:15:19,69715-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@664beade
2015-11-24 16:15:19,69715-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@664beade
2015-11-24 16:15:19,69815-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@664beade
2015-11-24 16:15:19,69815-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@7c56c5d5
2015-11-24 16:15:19,69815-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@4cdd7469
2015-11-24 16:15:19,69815-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4cdd7469
2015-11-24 16:15:19,69915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@28ec8597
2015-11-24 16:15:19,69915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@468f5968
2015-11-24 16:15:19,69915-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@4e9599e9
2015-11-24 16:15:19,70015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4e9599e9
2015-11-24 16:15:19,70015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@639e075e
2015-11-24 16:15:19,70015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@53c40ab7
2015-11-24 16:15:19,70015-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@4973ab0a
2015-11-24 16:15:19,70115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@44ccb229
2015-11-24 16:15:19,70115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@6a9cce0f
2015-11-24 16:15:19,70115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6a9cce0f
2015-11-24 16:15:19,70115-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@15e2160a
2015-11-24 16:15:19,70215-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2e14f5bf
2015-11-24 16:15:19,70215-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6211e63b
2015-11-24 16:15:19,70215-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5225dca
2015-11-24 16:15:19,70215-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@133b7b68
2015-11-24 16:15:19,70315-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2622f2b5
2015-11-24 16:15:19,70315-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@406c5ca2
2015-11-24 16:15:19,70315-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@a35b0b9
2015-11-24 16:15:19,70315-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1faf29f0
2015-11-24 16:15:19,70415-11-24 16:15:19  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@4973ab0a
2015-11-24 16:15:19,70415-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@1c529aa0
2015-11-24 16:15:19,70415-11-24 16:15:19  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [clob] overrides previous : org.hibernate.type.ClobType@4e9599e9
2015-11-24 16:15:19,70515-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1c529aa0
2015-11-24 16:15:19,70515-11-24 16:15:19  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@4e9599e9
2015-11-24 16:15:19,70515-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2d7c42d4
2015-11-24 16:15:19,70515-11-24 16:15:19  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@28ec8597
2015-11-24 16:15:19,70515-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@73258ce6
2015-11-24 16:15:19,70615-11-24 16:15:19  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@639e075e
2015-11-24 16:15:19,70615-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@390783a0
2015-11-24 16:15:19,70615-11-24 16:15:19  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@468f5968
2015-11-24 16:15:19,70615-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@26458b19
2015-11-24 16:15:19,70715-11-24 16:15:19  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@53c40ab7
2015-11-24 16:15:19,70715-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@47d205d2
2015-11-24 16:15:19,70715-11-24 16:15:19  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [blob] overrides previous : org.hibernate.type.BlobType@4cdd7469
2015-11-24 16:15:19,70715-11-24 16:15:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47d205d2
2015-11-24 16:15:19,70815-11-24 16:15:19  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@4cdd7469
2015-11-24 16:15:19,71015-11-24 16:15:19 DEBUG (SessionFactoryImpl.java:228 LINE) SessionFactoryImpl.<init> -> Session factory constructed with filter configurations : {}
2015-11-24 16:15:19,71015-11-24 16:15:19 DEBUG (SessionFactoryImpl.java:232 LINE) SessionFactoryImpl.<init> -> instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, sun.boot.library.path=E:\JDK1.7\bin, java.vm.version=23.7-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.cache.use_query_cache=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\workspace\mobile-user, java.runtime.version=1.7.0_17-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=E:\JDK1.7\lib\endorsed, os.arch=amd64, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\gqy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, hibernate.cache.use_second_level_cache=true, sun.jnu.encoding=GBK, hibernate.jdbc.fetch_size=50, java.library.path=E:\JDK1.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\ProgramData\Lenovo\ReadyApps;E:\JDK\bin;E:\JDK\jre\bin;E:\Go\bin;E:\winscp\WinSCP\;E:\maven\apache-maven-3.2.3\bin;C:\Program Files (x86)\DBank\ClickUp;C:\Program Files (x86)\DBank\ClickUp;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\gqy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=after_transaction, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=gqy, java.class.path=G:\workspace\mobile-user\target\test-classes;G:\workspace\mobile-user\target\classes;H:\Respositories2\repository\com\alibaba\fastjson\1.2.4\fastjson-1.2.4.jar;H:\Respositories2\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;H:\Respositories2\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;H:\Respositories2\repository\io\netty\netty\4.0.0.Alpha8\netty-4.0.0.Alpha8.jar;H:\Respositories2\repository\jstl\jstl\1.2\jstl-1.2.jar;H:\Respositories2\repository\org\springframework\spring-aop\3.2.0.RELEASE\spring-aop-3.2.0.RELEASE.jar;H:\Respositories2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;H:\Respositories2\repository\org\springframework\spring-beans\3.2.0.RELEASE\spring-beans-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context\3.2.0.RELEASE\spring-context-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-expression\3.2.0.RELEASE\spring-expression-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context-support\3.2.0.RELEASE\spring-context-support-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-core\3.2.0.RELEASE\spring-core-3.2.0.RELEASE.jar;H:\Respositories2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;H:\Respositories2\repository\org\springframework\spring-jdbc\3.2.0.RELEASE\spring-jdbc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-orm\3.2.0.RELEASE\spring-orm-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-tx\3.2.0.RELEASE\spring-tx-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-web\3.2.0.RELEASE\spring-web-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-webmvc\3.2.0.RELEASE\spring-webmvc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\amqp\spring-amqp\1.2.0.RELEASE\spring-amqp-1.2.0.RELEASE.jar;H:\Respositories2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;H:\Respositories2\repository\com\fasterxml\jackson\core\jackson-core\2.1.0\jackson-core-2.1.0.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.13\jackson-jaxrs-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-xc\1.9.13\jackson-xc-1.9.13.jar;H:\Respositories2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;H:\Respositories2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;H:\Respositories2\repository\mysql\mysql-connector-java\5.1.25\mysql-connector-java-5.1.25.jar;H:\Respositories2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;H:\Respositories2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;H:\Respositories2\repository\org\aspectj\aspectjweaver\1.6.4\aspectjweaver-1.6.4.jar;H:\Respositories2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;H:\Respositories2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;H:\Respositories2\repository\commons-beanutils\commons-beanutils\1.9.0\commons-beanutils-1.9.0.jar;H:\Respositories2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;H:\Respositories2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;H:\Respositories2\repository\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;H:\Respositories2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;H:\Respositories2\repository\org\mybatis\mybatis-spring\1.2.0\mybatis-spring-1.2.0.jar;H:\Respositories2\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;H:\Respositories2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar;H:\Respositories2\repository\org\json\json\20090211\json-20090211.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-lgpl\1.8.1\jackson-core-lgpl-1.8.1.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-lgpl\1.8.1\jackson-mapper-lgpl-1.8.1.jar;H:\Respositories2\repository\org\freemarker\freemarker\2.3.16\freemarker-2.3.16.jar;H:\Respositories2\repository\opensymphony\sitemesh\2.4.2\sitemesh-2.4.2.jar;H:\Respositories2\repository\org\testng\testng\5.9\testng-5.9-jdk15.jar;H:\Respositories2\repository\junit\junit\4.7\junit-4.7.jar;H:\Respositories2\repository\cglib\cglib-asm\1.0\cglib-asm-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-core\1.0\jxls-core-1.0.jar;H:\Respositories2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;H:\Respositories2\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml\3.7\poi-ooxml-3.7.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml-schemas\3.7\poi-ooxml-schemas-3.7.jar;H:\Respositories2\repository\org\apache\xmlbeans\xmlbeans\2.3.0\xmlbeans-2.3.0.jar;H:\Respositories2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;H:\Respositories2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-reader\1.0\jxls-reader-1.0.jar;H:\Respositories2\repository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient\4.3.2\httpclient-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient-cache\4.3.2\httpclient-cache-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpmime\4.3.2\httpmime-4.3.2.jar;H:\Respositories2\repository\org\quartz-scheduler\quartz\1.8.6\quartz-1.8.6.jar;H:\Respositories2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;H:\Respositories2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;H:\Respositories2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;H:\Respositories2\repository\net\coobird\thumbnailator\0.4.7\thumbnailator-0.4.7.jar;H:\Respositories2\repository\jcifs\jcifs\1.3.17\jcifs-1.3.17.jar;H:\Respositories2\repository\org\apache\poi\poi\3.10.1\poi-3.10.1.jar;H:\Respositories2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;H:\Respositories2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;H:\Respositories2\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;H:\Respositories2\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;H:\Respositories2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;H:\Respositories2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;H:\Respositories2\repository\net\sf\supercsv\super-csv\2.2.0\super-csv-2.2.0.jar;H:\Respositories2\repository\org\bouncycastle\bcprov-jdk16\1.45\bcprov-jdk16-1.45.jar;H:\Respositories2\repository\jdom\jdom\1.0\jdom-1.0.jar;H:\Respositories2\repository\com\belerweb\pinyin4j\2.5.0\pinyin4j-2.5.0.jar;H:\Respositories2\repository\org\glassfish\jersey\ext\jersey-spring3\2.4.1\jersey-spring3-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-server\2.4.1\jersey-server-2.4.1.jar;H:\Respositories2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-api\2.2.0-b21\hk2-api-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\javax.inject\2.2.0-b21\javax.inject-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-locator\2.2.0-b21\hk2-locator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\asm-all-repackaged\2.2.0-b21\asm-all-repackaged-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\cglib\2.2.0-b21\cglib-2.2.0-b21.jar;H:\Respositories2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;H:\Respositories2\repository\org\glassfish\jersey\containers\jersey-container-servlet-core\2.4.1\jersey-container-servlet-core-2.4.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2\2.2.0-b21\hk2-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-utils\2.2.0-b21\hk2-utils-2.2.0-b21.jar;H:\Respositories2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;H:\Respositories2\repository\org\glassfish\hk2\config-types\2.2.0-b21\config-types-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\core\2.2.0-b21\core-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-config\2.2.0-b21\hk2-config-2.2.0-b21.jar;H:\Respositories2\repository\org\jvnet\tiger-types\1.4\tiger-types-1.4.jar;H:\Respositories2\repository\org\glassfish\hk2\external\bean-validator\2.2.0-b21\bean-validator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-runlevel\2.2.0-b21\hk2-runlevel-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\class-model\2.2.0-b21\class-model-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\spring-bridge\2.2.0-b21\spring-bridge-2.2.0-b21.jar;H:\Respositories2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\2.4.1\jersey-media-json-jackson-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-common\2.4.1\jersey-common-2.4.1.jar;H:\Respositories2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;H:\Respositories2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.1\osgi-resource-locator-1.0.1.jar;H:\Respositories2\repository\org\codehaus\groovy\groovy-all\2.2.0\groovy-all-2.2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\providers\jersey-test-framework-provider-external\2.5.1\jersey-test-framework-provider-external-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\jersey-test-framework-core\2.5.1\jersey-test-framework-core-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-client\2.5.1\jersey-client-2.5.1.jar;H:\Respositories2\repository\org\springframework\spring-test\3.2.6.RELEASE\spring-test-3.2.6.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session\1.0.1.RELEASE\spring-session-1.0.1.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session-data-redis\1.0.0.RELEASE\spring-session-data-redis-1.0.0.RELEASE.jar;H:\Respositories2\repository\org\apache\commons\commons-pool2\2.2\commons-pool2-2.2.jar;H:\Respositories2\repository\redis\clients\jedis\2.6.0\jedis-2.6.0.jar;H:\Respositories2\repository\org\springframework\data\spring-data-redis\1.4.1.RELEASE\spring-data-redis-1.4.1.RELEASE.jar;H:\Respositories2\repository\net\sf\ehcache\ehcache-core\2.6.11\ehcache-core-2.6.11.jar;H:\Respositories2\repository\org\hibernate3\hibernate3\3.0.0\hibernate3-3.0.0.jar;H:\Respositories2\repository\com\google\code\gson\gson\2.1\gson-2.1.jar;H:\Respositories2\repository\org\apache\openejb\javaee-api\5.0-1\javaee-api-5.0-1.jar;H:\Respositories2\repository\com\alibaba\druid\1.0.2\druid-1.0.2.jar;H:\Respositories2\repository\javax\faces\jsf-impl\1.2_04\jsf-impl-1.2_04.jar;H:\Respositories2\repository\javax\faces\jsf-api\1.2_04\jsf-api-1.2_04.jar;H:\Respositories2\repository\javax\transaction\jta\1.1\jta-1.1.jar;H:\Respositories2\repository\org\apache\ws\wss4j\1.5.1\wss4j-1.5.1.jar;H:\Respositories2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;H:\Respositories2\repository\hibernate\antlr\2.7.5H3\antlr-2.7.5H3.jar;H:\Respositories2\repository\javassist\javassist\3.9.0.GA\javassist-3.9.0.GA.jar;H:\Respositories2\repository\com\fx\mobile\mobile-model\0.0.1-SNAPSHOT\mobile-model-0.0.1-SNAPSHOT.jar;H:\Respositories2\repository\com\fx\mobile\mobile-core\0.0.1\mobile-core-0.0.1.jar;H:\Respositories2\repository\Decoder\sun.misc.BASE64Decoder\1.0.0\sun.misc.BASE64Decoder-1.0.0.jar;H:\Respositories2\repository\marketingFile\marketingFile\0.0.1\marketingFile-0.0.1.jar;H:\Respositories2\repository\com\qq\connect\Sdk4J\1.0\Sdk4J-1.0.jar;H:\Respositories2\repository\org\apache\commons\commons-io\1.3.2\commons-io-1.3.2.jar;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.query.substitutions=true 'Y', false 'N', hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=E:\JDK1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 60889 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.fx.mobile.junit.UserOperateDaoImplTest, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_17, java.ext.dirs=E:\JDK1.7\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=E:\JDK1.7\lib\resources.jar;E:\JDK1.7\lib\rt.jar;E:\JDK1.7\lib\sunrsasign.jar;E:\JDK1.7\lib\jsse.jar;E:\JDK1.7\lib\jce.jar;E:\JDK1.7\lib\charsets.jar;E:\JDK1.7\lib\jfr.jar;E:\JDK1.7\classes, java.vendor=Oracle Corporation, hibernate.jdbc.batch_size=25, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-11-24 16:15:19,72915-11-24 16:15:19 DEBUG (CacheManager.java:684 LINE) CacheManager.parseConfiguration -> Configuring ehcache from classpath.
2015-11-24 16:15:19,73315-11-24 16:15:19 DEBUG (ConfigurationFactory.java:132 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from ehcache.xml found in the classpath: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 16:15:19,73415-11-24 16:15:19 DEBUG (ConfigurationFactory.java:98 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from URL: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 16:15:19,73415-11-24 16:15:19 DEBUG (ConfigurationFactory.java:150 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from InputStream
2015-11-24 16:15:19,78815-11-24 16:15:19 DEBUG (DiskStoreConfiguration.java:141 LINE) DiskStoreConfiguration.translatePath -> Disk Store Path: C:\Users\gqy\AppData\Local\Temp\
2015-11-24 16:15:19,84715-11-24 16:15:19 DEBUG (PropertyUtil.java:88 LINE) PropertyUtil.parseProperties -> propertiesString is null.
2015-11-24 16:15:19,86315-11-24 16:15:19 DEBUG (ConfigurationHelper.java:185 LINE) ConfigurationHelper.createCacheManagerEventListener -> No CacheManagerEventListenerFactory class specified. Skipping...
2015-11-24 16:15:19,91415-11-24 16:15:19 DEBUG (Cache.java:955 LINE) Cache.createBootstrapCacheLoader -> No BootstrapCacheLoaderFactory class specified. Skipping...
2015-11-24 16:15:19,91515-11-24 16:15:19 DEBUG (Cache.java:929 LINE) Cache.createCacheWriter -> CacheWriter factory not configured. Skipping...
2015-11-24 16:15:19,92015-11-24 16:15:19 DEBUG (ConfigurationHelper.java:96 LINE) ConfigurationHelper.createCacheExceptionHandler -> No CacheExceptionHandlerFactory class specified. Skipping...
2015-11-24 16:15:19,94015-11-24 16:15:19 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:15:19,94115-11-24 16:15:19 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:15:19,94115-11-24 16:15:19 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:15:20,15215-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.NoteNumbRecord
2015-11-24 16:15:20,15315-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from note_numb_record where id =?
2015-11-24 16:15:20,15315-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select notenumbre_.id, notenumbre_.node_numb as node2_1_ from note_numb_record notenumbre_ where notenumbre_.id=?
2015-11-24 16:15:20,15415-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into note_numb_record (node_numb, id) values (?, ?)
2015-11-24 16:15:20,15415-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update note_numb_record set node_numb=? where id=?
2015-11-24 16:15:20,15515-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from note_numb_record where id=?
2015-11-24 16:15:20,15515-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into note_numb_record (node_numb) values (?)
2015-11-24 16:15:20,16015-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.CrashLog
2015-11-24 16:15:20,16115-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from marketing1.crash_log where id =?
2015-11-24 16:15:20,16115-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select crashlog_.id, crashlog_.url as url2_, crashlog_.describes as describes2_, crashlog_.addDate as addDate2_ from marketing1.crash_log crashlog_ where crashlog_.id=?
2015-11-24 16:15:20,16215-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into marketing1.crash_log (url, describes, addDate, id) values (?, ?, ?, ?)
2015-11-24 16:15:20,16215-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update marketing1.crash_log set url=?, describes=?, addDate=? where id=?
2015-11-24 16:15:20,16215-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from marketing1.crash_log where id=?
2015-11-24 16:15:20,16215-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into marketing1.crash_log (url, describes, addDate) values (?, ?, ?)
2015-11-24 16:15:20,18515-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.UserOperate
2015-11-24 16:15:20,18515-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from user_operate where id =?
2015-11-24 16:15:20,18615-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select useroperat_.id, useroperat_.userName as userName0_, useroperat_.userPassword as userPass3_0_, useroperat_.phicomm_id as phicomm4_0_, useroperat_.userEmail as userEmail0_, useroperat_.user_PhoneNumb as user6_0_, useroperat_.userType as userType0_, useroperat_.isChecked as isChecked0_, useroperat_.nickname as nickname0_, useroperat_.figureurl as figureurl0_, useroperat_.sex as sex0_, useroperat_.province as province0_, useroperat_.city as city0_, useroperat_.birthday as birthday0_, useroperat_.open_id as open15_0_, useroperat_.open_key as open16_0_, useroperat_.access_token as access17_0_, useroperat_.expirese_in as expirese18_0_, useroperat_.devinfo as devinfo0_, useroperat_.userinfo as userinfo0_, useroperat_.openqq as openqq0_, useroperat_.openqqinfo as openqqinfo0_, useroperat_.opensina as opensina0_, useroperat_.opensinainfo as opensin24_0_, useroperat_.createTime as createTime0_, useroperat_.updateTime as updateTime0_, useroperat_.lastLoginTime as lastLog27_0_ from user_operate useroperat_ where useroperat_.id=?
2015-11-24 16:15:20,18615-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 16:15:20,18615-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update user_operate set userName=?, userPassword=?, phicomm_id=?, userEmail=?, user_PhoneNumb=?, userType=?, isChecked=?, nickname=?, figureurl=?, sex=?, province=?, city=?, birthday=?, open_id=?, open_key=?, access_token=?, expirese_in=?, devinfo=?, userinfo=?, openqq=?, openqqinfo=?, opensina=?, opensinainfo=?, createTime=?, updateTime=?, lastLoginTime=? where id=?
2015-11-24 16:15:20,18715-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from user_operate where id=?
2015-11-24 16:15:20,18715-11-24 16:15:20 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 16:15:20,20915-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [NONE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:15:20,21015-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:15:20,21015-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:15:20,21115-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE_NOWAIT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:15:20,21115-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [FORCE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:15:20,21115-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? lock in share mode
2015-11-24 16:15:20,21215-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_WRITE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:15:20,21215-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 16:15:20,21215-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:15:20,21315-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:15:20,21915-11-24 16:15:20 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:15:20,22015-11-24 16:15:20 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 16:15:20,22215-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [NONE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:15:20,22415-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:15:20,22415-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:15:20,22515-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE_NOWAIT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:15:20,22515-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [FORCE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:15:20,22515-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? lock in share mode
2015-11-24 16:15:20,22615-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_WRITE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:15:20,22615-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 16:15:20,22615-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:15:20,22615-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:15:20,23715-11-24 16:15:20 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:15:20,23715-11-24 16:15:20 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 16:15:20,23815-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [NONE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:15:20,23815-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:15:20,23915-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:15:20,23915-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE_NOWAIT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:15:20,24015-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [FORCE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:15:20,24115-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? lock in share mode
2015-11-24 16:15:20,24115-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_WRITE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:15:20,24215-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 16:15:20,24215-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:15:20,24315-11-24 16:15:20 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:15:20,24315-11-24 16:15:20 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:15:20,28015-11-24 16:15:20 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 16:15:20,28315-11-24 16:15:20 DEBUG (SessionFactoryObjectFactory.java:61 LINE) SessionFactoryObjectFactory.<clinit> -> initializing class SessionFactoryObjectFactory
2015-11-24 16:15:20,28415-11-24 16:15:20 DEBUG (SessionFactoryObjectFactory.java:99 LINE) SessionFactoryObjectFactory.addInstance -> registered: 544c8a2e-b709-4ed9-bfc3-3f61bbf8187a (unnamed)
2015-11-24 16:15:20,28515-11-24 16:15:20  INFO (SessionFactoryObjectFactory.java:105 LINE) SessionFactoryObjectFactory.addInstance -> Not binding factory to JNDI, no JNDI name configured
2015-11-24 16:15:20,28515-11-24 16:15:20 DEBUG (SessionFactoryImpl.java:369 LINE) SessionFactoryImpl.<init> -> instantiated session factory
2015-11-24 16:15:20,29415-11-24 16:15:20  INFO (SchemaUpdate.java:155 LINE) SchemaUpdate.execute -> Running hbm2ddl schema update
2015-11-24 16:15:20,29415-11-24 16:15:20  INFO (SchemaUpdate.java:167 LINE) SchemaUpdate.execute -> fetching database metadata
2015-11-24 16:15:20,29715-11-24 16:15:20  INFO (SchemaUpdate.java:179 LINE) SchemaUpdate.execute -> updating schema
2015-11-24 16:15:20,29815-11-24 16:15:20 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 16:15:20,29815-11-24 16:15:20 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 16:15:20,29915-11-24 16:15:20 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 16:15:20,29915-11-24 16:15:20 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 16:15:20,29915-11-24 16:15:20 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 16:15:20,30015-11-24 16:15:20 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 16:15:20,30015-11-24 16:15:20 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 16:15:20,30015-11-24 16:15:20 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 16:15:20,30015-11-24 16:15:20 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 16:15:20,30215-11-24 16:15:20 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 16:15:20,30215-11-24 16:15:20 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 16:15:20,30415-11-24 16:15:20 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 16:15:20,33415-11-24 16:15:20  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 16:15:20,33515-11-24 16:15:20 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:15:20,39315-11-24 16:15:20  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.note_numb_record
2015-11-24 16:15:20,39315-11-24 16:15:20  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [id, node_numb]
2015-11-24 16:15:20,39415-11-24 16:15:20  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 16:15:20,39415-11-24 16:15:20  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 16:15:20,44315-11-24 16:15:20  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.user_operate
2015-11-24 16:15:20,44415-11-24 16:15:20  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [birthday, sex, updatetime, open_id, openqq, opensina, userinfo, user_phonenumb, city, createtime, id, userpassword, username, lastlogintime, province, opensinainfo, figureurl, phicomm_id, open_key, access_token, nickname, usertype, ischecked, openqqinfo, useremail, devinfo, expirese_in]
2015-11-24 16:15:20,44415-11-24 16:15:20  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 16:15:20,44415-11-24 16:15:20  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 16:15:20,44515-11-24 16:15:20  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 16:15:20,44615-11-24 16:15:20 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:15:20,44715-11-24 16:15:20 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:15:20,44715-11-24 16:15:20 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 16:15:20,44815-11-24 16:15:20 DEBUG (SchemaUpdate.java:203 LINE) SchemaUpdate.execute -> create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 16:15:20,45115-11-24 16:15:20 ERROR (SchemaUpdate.java:212 LINE) SchemaUpdate.execute -> Unsuccessful: create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 16:15:20,45115-11-24 16:15:20 ERROR (SchemaUpdate.java:213 LINE) SchemaUpdate.execute -> Unknown database 'marketing1'
2015-11-24 16:15:20,45215-11-24 16:15:20  INFO (SchemaUpdate.java:217 LINE) SchemaUpdate.execute -> schema update complete
2015-11-24 16:15:20,45715-11-24 16:15:20  INFO (UpdateTimestampsCache.java:57 LINE) UpdateTimestampsCache.<init> -> starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:15:20,46015-11-24 16:15:20  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
2015-11-24 16:15:20,49815-11-24 16:15:20 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:15:20,51215-11-24 16:15:20 DEBUG (DiskStorePathManager.java:169 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Using diskstore path C:\Users\gqy\AppData\Local\Temp
2015-11-24 16:15:20,51215-11-24 16:15:20 DEBUG (DiskStorePathManager.java:170 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Holding exclusive lock on C:\Users\gqy\AppData\Local\Temp\.ehcache-diskstore.lock
2015-11-24 16:15:20,51715-11-24 16:15:20 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 16:15:20,51815-11-24 16:15:20 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:15:20,52815-11-24 16:15:20 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:15:20,52815-11-24 16:15:20 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 16:15:20,54015-11-24 16:15:20 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:15:20,54115-11-24 16:15:20 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.UpdateTimestampsCache'.
2015-11-24 16:15:20,54115-11-24 16:15:20 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 16:15:20,54415-11-24 16:15:20  INFO (StandardQueryCache.java:76 LINE) StandardQueryCache.<init> -> starting query cache at region: org.hibernate.cache.StandardQueryCache
2015-11-24 16:15:20,54515-11-24 16:15:20  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
2015-11-24 16:15:20,54615-11-24 16:15:20 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.StandardQueryCache
2015-11-24 16:15:20,54815-11-24 16:15:20 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 16:15:20,54815-11-24 16:15:20 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:15:20,55015-11-24 16:15:20 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:15:20,55015-11-24 16:15:20 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 16:15:20,55115-11-24 16:15:20 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.StandardQueryCache
2015-11-24 16:15:20,55215-11-24 16:15:20 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.StandardQueryCache'.
2015-11-24 16:15:20,55215-11-24 16:15:20 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.StandardQueryCache
2015-11-24 16:15:20,55215-11-24 16:15:20 DEBUG (SessionFactoryImpl.java:539 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named HQL queries
2015-11-24 16:15:20,55315-11-24 16:15:20 DEBUG (SessionFactoryImpl.java:559 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named SQL queries
2015-11-24 16:15:20,55415-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:20,55615-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'sessionFactory'
2015-11-24 16:15:20,55615-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:20,56515-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userOperateDao'
2015-11-24 16:15:20,56615-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:20,56715-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userOperateDao'
2015-11-24 16:15:20,56715-11-24 16:15:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userInterfaceDao'
2015-11-24 16:15:20,56815-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userInterfaceDao'
2015-11-24 16:15:20,56915-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userInterfaceDao' to allow for resolving potential circular references
2015-11-24 16:15:20,57615-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:15:20,57615-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userInterfaceDao'
2015-11-24 16:15:20,57615-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:20,57715-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userInterfaceDao'
2015-11-24 16:15:20,57715-11-24 16:15:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'noteNumRecordDao'
2015-11-24 16:15:20,57815-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'noteNumRecordDao'
2015-11-24 16:15:20,57815-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'noteNumRecordDao' to allow for resolving potential circular references
2015-11-24 16:15:20,58315-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:15:20,58415-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'noteNumRecordDao'
2015-11-24 16:15:20,58415-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:20,58515-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'noteNumRecordDao'
2015-11-24 16:15:20,58615-11-24 16:15:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'crashLogDao'
2015-11-24 16:15:20,58615-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'crashLogDao'
2015-11-24 16:15:20,58715-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'crashLogDao' to allow for resolving potential circular references
2015-11-24 16:15:20,65415-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:15:20,65415-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'crashLogDao'
2015-11-24 16:15:20,65515-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:20,65515-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'crashLogDao'
2015-11-24 16:15:20,65515-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'dataSource'
2015-11-24 16:15:20,65615-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:15:20,65615-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:15:20,65615-11-24 16:15:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:15:20,65615-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:15:20,65915-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2015-11-24 16:15:20,66315-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:15:20,66415-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:15:20,66415-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 16:15:20,66415-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:20,66415-11-24 16:15:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'transactionManager'
2015-11-24 16:15:20,66515-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'transactionManager'
2015-11-24 16:15:20,67415-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-11-24 16:15:20,68215-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 16:15:20,68315-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-11-24 16:15:20,69515-11-24 16:15:20  INFO (HibernateTransactionManager.java:415 LINE) HibernateTransactionManager.afterPropertiesSet -> Using DataSource [org.apache.commons.dbcp.BasicDataSource@10a25f62] of Hibernate SessionFactory for HibernateTransactionManager
2015-11-24 16:15:20,69615-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:20,69715-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'transactionManager'
2015-11-24 16:15:20,69715-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:15:20,69715-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:15:20,69815-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:15:20,69815-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:15:20,69815-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:15:20,69815-11-24 16:15:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'operateService'
2015-11-24 16:15:20,69815-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'operateService'
2015-11-24 16:15:20,70615-11-24 16:15:20 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserOperateServiceImp]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 16:15:20,70715-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'operateService' to allow for resolving potential circular references
2015-11-24 16:15:20,71015-11-24 16:15:20 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'operateService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 16:15:20,72515-11-24 16:15:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'fileRemote'
2015-11-24 16:15:20,72515-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'fileRemote'
2015-11-24 16:15:20,72815-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'fileRemote' to allow for resolving potential circular references
2015-11-24 16:15:20,75415-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'fileRemote'
2015-11-24 16:15:20,79115-11-24 16:15:20 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static
2015-11-24 16:15:20,80115-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'fileRemote'
2015-11-24 16:15:20,80215-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 16:15:20,80215-11-24 16:15:20 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'operateService' to bean named 'userOperateDao'
2015-11-24 16:15:20,80315-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:20,80815-11-24 16:15:20 DEBUG (AbstractFallbackTransactionAttributeSource.java:106 LINE) AbstractFallbackTransactionAttributeSource.getTransactionAttribute -> Adding transactional method 'registAccount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '',-java.lang.Throwable
2015-11-24 16:15:20,80915-11-24 16:15:20 DEBUG (AbstractAutoProxyCreator.java:534 LINE) AbstractAutoProxyCreator.buildAdvisors -> Creating implicit proxy for bean 'operateService' with 0 common interceptors and 1 specific interceptors
2015-11-24 16:15:20,81015-11-24 16:15:20 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.fx.mobile.user.service.impl.UserOperateServiceImp@3605ce8f]
2015-11-24 16:15:20,81815-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'operateService'
2015-11-24 16:15:20,81915-11-24 16:15:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'SpringContextUtil'
2015-11-24 16:15:20,81915-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'SpringContextUtil'
2015-11-24 16:15:20,81915-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'SpringContextUtil' to allow for resolving potential circular references
2015-11-24 16:15:20,82315-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:20,83115-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'SpringContextUtil'
2015-11-24 16:15:20,83115-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'fileRemote'
2015-11-24 16:15:20,83215-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'corePropertyConfigurer'
2015-11-24 16:15:20,83315-11-24 16:15:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userinterfaceService'
2015-11-24 16:15:20,83315-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userinterfaceService'
2015-11-24 16:15:20,83415-11-24 16:15:20 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserInterfaceServiceImpl]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 16:15:20,83415-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userinterfaceService' to allow for resolving potential circular references
2015-11-24 16:15:20,83815-11-24 16:15:20 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'userinterfaceService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 16:15:20,83915-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userInterfaceDao'
2015-11-24 16:15:20,83915-11-24 16:15:20 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'userinterfaceService' to bean named 'userInterfaceDao'
2015-11-24 16:15:20,84015-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:20,84115-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userinterfaceService'
2015-11-24 16:15:20,84115-11-24 16:15:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'urlProperties'
2015-11-24 16:15:20,84215-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'urlProperties'
2015-11-24 16:15:20,84315-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'urlProperties' to allow for resolving potential circular references
2015-11-24 16:15:20,84715-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:20,84815-11-24 16:15:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'urlProperties'
2015-11-24 16:15:20,84815-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:15:20,85015-11-24 16:15:20 DEBUG (AbstractApplicationContext.java:858 LINE) AbstractApplicationContext.initLifecycleProcessor -> Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@7f92f4dd]
2015-11-24 16:15:20,85115-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 16:15:20,85315-11-24 16:15:20 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-11-24 16:15:20,85415-11-24 16:15:20 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-11-24 16:15:20,85415-11-24 16:15:20 DEBUG (PropertySourcesPropertyResolver.java:93 LINE) PropertySourcesPropertyResolver.getProperty -> Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-11-24 16:15:20,85515-11-24 16:15:20 DEBUG (CacheAwareContextLoaderDelegate.java:93 LINE) CacheAwareContextLoaderDelegate.loadContext -> Storing ApplicationContext in cache under key [[MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 16:15:20,86115-11-24 16:15:20 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 16:15:20,86115-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 16:15:20,86215-11-24 16:15:20 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:15:20,87215-11-24 16:15:20 DEBUG (SessionFactoryUtils.java:322 LINE) SessionFactoryUtils.doGetSession -> Opening Hibernate Session
2015-11-24 16:15:20,96115-11-24 16:15:20 DEBUG (SessionImpl.java:265 LINE) SessionImpl.<init> -> opened session at timestamp: 5932453563895808
2015-11-24 16:15:21,01515-11-24 16:15:21 DEBUG (QueryTranslatorImpl.java:274 LINE) QueryTranslatorImpl.parse -> parse() - HQL: from com.fx.mobile.model.UserOperate where (userPhoneNumb=? or userName=?  or userEmail=?)  and userPassword=?
2015-11-24 16:15:21,02815-11-24 16:15:21 DEBUG (QueryTranslatorImpl.java:293 LINE) QueryTranslatorImpl.showHqlAst -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'fx'
    |           |  |  \-[IDENT] Node: 'mobile'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'UserOperate'
    \-[WHERE] Node: 'where'
       \-[AND] Node: 'and'
          +-[OR] Node: 'or'
          |  +-[OR] Node: 'or'
          |  |  +-[EQ] Node: '='
          |  |  |  +-[IDENT] Node: 'userPhoneNumb'
          |  |  |  \-[PARAM] Node: '?'
          |  |  \-[EQ] Node: '='
          |  |     +-[IDENT] Node: 'userName'
          |  |     \-[PARAM] Node: '?'
          |  \-[EQ] Node: '='
          |     +-[IDENT] Node: 'userEmail'
          |     \-[PARAM] Node: '?'
          \-[EQ] Node: '='
             +-[IDENT] Node: 'userPassword'
             \-[PARAM] Node: '?'

2015-11-24 16:15:21,02915-11-24 16:15:21 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:15:21,12415-11-24 16:15:21 DEBUG (HqlSqlBaseWalker.java:111 LINE) HqlSqlBaseWalker.beforeStatement -> select << begin [level=1, statement=select]
2015-11-24 16:15:21,15015-11-24 16:15:21 DEBUG (FromElement.java:157 LINE) FromElement.doInitialize -> FromClause{level=1} :  com.fx.mobile.model.UserOperate (no alias) -> useroperat0_
2015-11-24 16:15:21,15215-11-24 16:15:21 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:15:21,15415-11-24 16:15:21 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userPhoneNumb -> org.hibernate.type.StringType@2513264a
2015-11-24 16:15:21,15515-11-24 16:15:21 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userPhoneNumb -> useroperat0_.user_PhoneNumb
2015-11-24 16:15:21,15815-11-24 16:15:21 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:15:21,15815-11-24 16:15:21 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userName -> org.hibernate.type.StringType@2513264a
2015-11-24 16:15:21,15915-11-24 16:15:21 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userName -> useroperat0_.userName
2015-11-24 16:15:21,15915-11-24 16:15:21 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:15:21,15915-11-24 16:15:21 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userEmail -> org.hibernate.type.StringType@2513264a
2015-11-24 16:15:21,16015-11-24 16:15:21 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userEmail -> useroperat0_.userEmail
2015-11-24 16:15:21,16015-11-24 16:15:21 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 16:15:21,16015-11-24 16:15:21 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userPassword -> org.hibernate.type.StringType@2513264a
2015-11-24 16:15:21,16115-11-24 16:15:21 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userPassword -> useroperat0_.userPassword
2015-11-24 16:15:21,16115-11-24 16:15:21 DEBUG (HqlSqlBaseWalker.java:117 LINE) HqlSqlBaseWalker.beforeStatementCompletion -> select : finishing up [level=1, statement=select]
2015-11-24 16:15:21,16115-11-24 16:15:21 DEBUG (HqlSqlWalker.java:625 LINE) HqlSqlWalker.processQuery -> processQuery() :  ( SELECT ( FromClause{level=1} user_operate useroperat0_ ) ( where ( and ( or ( or ( = ( useroperat0_.user_PhoneNumb {synthetic-alias} userPhoneNumb ) ? ) ( = ( useroperat0_.userName {synthetic-alias} userName ) ? ) ) ( = ( useroperat0_.userEmail {synthetic-alias} userEmail ) ? ) ) ( = ( useroperat0_.userPassword {synthetic-alias} userPassword ) ? ) ) ) )
2015-11-24 16:15:21,16715-11-24 16:15:21 DEBUG (HqlSqlWalker.java:868 LINE) HqlSqlWalker.createSelectClauseFromFromClause -> Derived SELECT clause created.
2015-11-24 16:15:21,17315-11-24 16:15:21 DEBUG (JoinProcessor.java:179 LINE) JoinProcessor.addJoinNodes -> Using FROM fragment [user_operate useroperat0_]
2015-11-24 16:15:21,17315-11-24 16:15:21 DEBUG (HqlSqlBaseWalker.java:123 LINE) HqlSqlBaseWalker.afterStatementCompletion -> select >> end [level=1, statement=select]
2015-11-24 16:15:21,17515-11-24 16:15:21 DEBUG (QueryTranslatorImpl.java:260 LINE) QueryTranslatorImpl.analyze -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_operate)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'useroperat0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}}
    |  \-[SQL_TOKEN] SqlFragment: 'useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[useroperat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_operate useroperat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}
    \-[WHERE] SqlNode: 'where'
       \-[AND] SqlNode: 'and'
          +-[OR] SqlNode: 'or'
          |  +-[OR] SqlNode: 'or'
          |  |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  |  +-[DOT] DotNode: 'useroperat0_.user_PhoneNumb' {propertyName=userPhoneNumb,dereferenceType=ALL,propertyPath=userPhoneNumb,path={synthetic-alias}.userPhoneNumb,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |  |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  |  \-[IDENT] IdentNode: 'userPhoneNumb' {originalText=userPhoneNumb}
          |  |  |  \-[PARAM] ParameterNode: '?' {ordinal=0, expectedType=org.hibernate.type.StringType@2513264a}
          |  |  \-[EQ] BinaryLogicOperatorNode: '='
          |  |     +-[DOT] DotNode: 'useroperat0_.userName' {propertyName=userName,dereferenceType=ALL,propertyPath=userName,path={synthetic-alias}.userName,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |  |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |     |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          |  |     \-[PARAM] ParameterNode: '?' {ordinal=1, expectedType=org.hibernate.type.StringType@2513264a}
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'useroperat0_.userEmail' {propertyName=userEmail,dereferenceType=ALL,propertyPath=userEmail,path={synthetic-alias}.userEmail,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |  \-[IDENT] IdentNode: 'userEmail' {originalText=userEmail}
          |     \-[PARAM] ParameterNode: '?' {ordinal=2, expectedType=org.hibernate.type.StringType@2513264a}
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'useroperat0_.userPassword' {propertyName=userPassword,dereferenceType=ALL,propertyPath=userPassword,path={synthetic-alias}.userPassword,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'userPassword' {originalText=userPassword}
             \-[PARAM] ParameterNode: '?' {ordinal=3, expectedType=org.hibernate.type.StringType@2513264a}

2015-11-24 16:15:21,17615-11-24 16:15:21 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:15:21,19115-11-24 16:15:21 DEBUG (QueryTranslatorImpl.java:243 LINE) QueryTranslatorImpl.generate -> HQL: from com.fx.mobile.model.UserOperate where (userPhoneNumb=? or userName=?  or userEmail=?)  and userPassword=?
2015-11-24 16:15:21,19115-11-24 16:15:21 DEBUG (QueryTranslatorImpl.java:244 LINE) QueryTranslatorImpl.generate -> SQL: select useroperat0_.id as id0_, useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_ from user_operate useroperat0_ where (useroperat0_.user_PhoneNumb=? or useroperat0_.userName=? or useroperat0_.userEmail=?) and useroperat0_.userPassword=?
2015-11-24 16:15:21,19115-11-24 16:15:21 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 16:15:21,21615-11-24 16:15:21 DEBUG (AbstractBatcher.java:410 LINE) AbstractBatcher.logOpenPreparedStatement -> about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-11-24 16:15:21,21615-11-24 16:15:21 DEBUG (ConnectionManager.java:444 LINE) ConnectionManager.openConnection -> opening JDBC connection
2015-11-24 16:15:21,25115-11-24 16:15:21 DEBUG (SQLStatementLogger.java:111 LINE) SQLStatementLogger.logStatement -> 
    select
        useroperat0_.id as id0_,
        useroperat0_.userName as userName0_,
        useroperat0_.userPassword as userPass3_0_,
        useroperat0_.phicomm_id as phicomm4_0_,
        useroperat0_.userEmail as userEmail0_,
        useroperat0_.user_PhoneNumb as user6_0_,
        useroperat0_.userType as userType0_,
        useroperat0_.isChecked as isChecked0_,
        useroperat0_.nickname as nickname0_,
        useroperat0_.figureurl as figureurl0_,
        useroperat0_.sex as sex0_,
        useroperat0_.province as province0_,
        useroperat0_.city as city0_,
        useroperat0_.birthday as birthday0_,
        useroperat0_.open_id as open15_0_,
        useroperat0_.open_key as open16_0_,
        useroperat0_.access_token as access17_0_,
        useroperat0_.expirese_in as expirese18_0_,
        useroperat0_.devinfo as devinfo0_,
        useroperat0_.userinfo as userinfo0_,
        useroperat0_.openqq as openqq0_,
        useroperat0_.openqqinfo as openqqinfo0_,
        useroperat0_.opensina as opensina0_,
        useroperat0_.opensinainfo as opensin24_0_,
        useroperat0_.createTime as createTime0_,
        useroperat0_.updateTime as updateTime0_,
        useroperat0_.lastLoginTime as lastLog27_0_ 
    from
        user_operate useroperat0_ 
    where
        (
            useroperat0_.user_PhoneNumb=? 
            or useroperat0_.userName=? 
            or useroperat0_.userEmail=?
        ) 
        and useroperat0_.userPassword=?
2015-11-24 16:15:21,27415-11-24 16:15:21 DEBUG (AbstractBatcher.java:426 LINE) AbstractBatcher.logOpenResults -> about to open ResultSet (open ResultSets: 0, globally: 0)
2015-11-24 16:15:21,27515-11-24 16:15:21 DEBUG (AbstractBatcher.java:433 LINE) AbstractBatcher.logCloseResults -> about to close ResultSet (open ResultSets: 1, globally: 1)
2015-11-24 16:15:21,27515-11-24 16:15:21 DEBUG (AbstractBatcher.java:418 LINE) AbstractBatcher.logClosePreparedStatement -> about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-11-24 16:15:21,27615-11-24 16:15:21 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 16:15:21,27615-11-24 16:15:21 DEBUG (ConnectionManager.java:464 LINE) ConnectionManager.closeConnection -> releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-11-24 16:15:21,27815-11-24 16:15:21 DEBUG (StatefulPersistenceContext.java:893 LINE) StatefulPersistenceContext.initializeNonLazyCollections -> initializing non-lazy collections
2015-11-24 16:15:21,27915-11-24 16:15:21 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 16:15:21,28015-11-24 16:15:21 DEBUG (HibernateAccessor.java:389 LINE) HibernateAccessor.flushIfNecessary -> Eagerly flushing Hibernate session
2015-11-24 16:15:21,28015-11-24 16:15:21 DEBUG (SessionFactoryUtils.java:800 LINE) SessionFactoryUtils.closeSession -> Closing Hibernate Session
2015-11-24 16:15:21,28215-11-24 16:15:21 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@4dd290b5 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@3b1a82fd, testMethod = getUserByNameAndPass@UserOperateDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 16:15:21,28315-11-24 16:15:21 DEBUG (DirtiesContextTestExecutionListener.java:138 LINE) DirtiesContextTestExecutionListener.afterTestClass -> After test class: context [[TestContext@4dd290b5 testClass = UserOperateDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
2015-11-24 16:15:21,28615-11-24 16:15:21  INFO (AbstractApplicationContext.java:1042 LINE) AbstractApplicationContext.doClose -> Closing org.springframework.context.support.GenericApplicationContext@4ad9cb27: startup date [Tue Nov 24 16:15:16 CST 2015]; root of context hierarchy
2015-11-24 16:15:21,28815-11-24 16:15:21 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 16:15:21,28815-11-24 16:15:21  INFO (DefaultSingletonBeanRegistry.java:444 LINE) DefaultSingletonBeanRegistry.destroySingletons -> Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@27faefe0: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 16:15:21,29715-11-24 16:15:21 DEBUG (DefaultSingletonBeanRegistry.java:500 LINE) DefaultSingletonBeanRegistry.destroyBean -> Retrieved dependent beans for bean 'userOperateDao': [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:15:21,29715-11-24 16:15:21 DEBUG (DisposableBeanAdapter.java:219 LINE) DisposableBeanAdapter.destroy -> Invoking destroy() on bean with name 'sessionFactory'
2015-11-24 16:15:21,29815-11-24 16:15:21  INFO (AbstractSessionFactoryBean.java:223 LINE) AbstractSessionFactoryBean.destroy -> Closing Hibernate SessionFactory
2015-11-24 16:15:21,29815-11-24 16:15:21  INFO (SessionFactoryImpl.java:927 LINE) SessionFactoryImpl.close -> closing
2015-11-24 16:15:21,32615-11-24 16:15:21 DEBUG (DisposableBeanAdapter.java:295 LINE) DisposableBeanAdapter.invokeCustomDestroyMethod -> Invoking destroy method 'close' on bean with name 'dataSource'
2015-11-24 16:23:16,66415-11-24 16:23:16 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 16:23:16,77215-11-24 16:23:16 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@6ed76e89 declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 16:23:16,77415-11-24 16:23:16 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:23:16,77715-11-24 16:23:16 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 16:23:16,81315-11-24 16:23:16 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:23:16,81315-11-24 16:23:16 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:23:16,81615-11-24 16:23:16 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:23:16,81715-11-24 16:23:16 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:23:16,82115-11-24 16:23:16 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:23:16,82215-11-24 16:23:16 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:23:16,82315-11-24 16:23:16 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:23:16,82415-11-24 16:23:16 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:23:16,82515-11-24 16:23:16 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:23:16,82515-11-24 16:23:16 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:23:16,82715-11-24 16:23:16 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:23:16,82715-11-24 16:23:16 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 16:23:16,83115-11-24 16:23:16 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@3b1a82fd testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@498dce5b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 16:23:16,83115-11-24 16:23:16 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 16:23:16,83215-11-24 16:23:16 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 16:23:17,00415-11-24 16:23:17 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:23:17,00615-11-24 16:23:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:23:17,00815-11-24 16:23:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:23:17,00815-11-24 16:23:17 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:23:17,01415-11-24 16:23:17 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:23:17,01515-11-24 16:23:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:23:17,01515-11-24 16:23:17 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:23:17,01615-11-24 16:23:17 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:23:17,03015-11-24 16:23:17 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 16:23:17,03115-11-24 16:23:17 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 16:23:17,03515-11-24 16:23:17 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 16:23:17,03615-11-24 16:23:17  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 16:23:17,07315-11-24 16:23:17 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:23:17,10315-11-24 16:23:17 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 16:23:17,10815-11-24 16:23:17 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 16:23:17,11115-11-24 16:23:17 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:23:17,22615-11-24 16:23:17 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:23:17,24415-11-24 16:23:17  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 16:23:17,24715-11-24 16:23:17 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:23:17,25715-11-24 16:23:17 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:23:17,32815-11-24 16:23:17 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:23:17,34815-11-24 16:23:17  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 16:23:17,35115-11-24 16:23:17 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:23:17,36715-11-24 16:23:17 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:23:17,47615-11-24 16:23:17 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 16:23:17,48215-11-24 16:23:17 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 16:23:17,48815-11-24 16:23:17 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:23:17,50815-11-24 16:23:17 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 16:23:17,56715-11-24 16:23:17  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 16:23:17,56915-11-24 16:23:17 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:23:17,57315-11-24 16:23:17 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:23:17,66715-11-24 16:23:17 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 16:23:17,67615-11-24 16:23:17 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 16:23:17,70815-11-24 16:23:17 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:23:17,80015-11-24 16:23:17  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 16:23:17,81415-11-24 16:23:17  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 16:23:17,88515-11-24 16:23:17 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 16:23:17,88615-11-24 16:23:17 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 16:23:17,88715-11-24 16:23:17 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 16:23:17,88915-11-24 16:23:17 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 16:23:17,94815-11-24 16:23:17 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 16:23:17,95415-11-24 16:23:17 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 16:23:17,95515-11-24 16:23:17 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 16:23:17,95815-11-24 16:23:17 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 16:23:17,96615-11-24 16:23:17  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 16:23:17,96715-11-24 16:23:17  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 16:23:17,96915-11-24 16:23:17 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 16:23:17,97115-11-24 16:23:17 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 16:23:17,99115-11-24 16:23:17 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 16:23:17,99215-11-24 16:23:17 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 16:23:17,99715-11-24 16:23:17  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@20a893d5: startup date [Tue Nov 24 16:23:17 CST 2015]; root of context hierarchy
2015-11-24 16:23:17,99715-11-24 16:23:17 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@20a893d5: org.springframework.beans.factory.support.DefaultListableBeanFactory@245a690: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 16:23:18,04615-11-24 16:23:18 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:23:18,04615-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:23:18,10415-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:23:18,10715-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 16:23:18,17315-11-24 16:23:18 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 16:23:18,17315-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 16:23:18,17715-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 16:23:18,28615-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 16:23:18,28715-11-24 16:23:18  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 16:23:18,29615-11-24 16:23:18  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 16:23:18,29715-11-24 16:23:18  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 16:23:18,30915-11-24 16:23:18 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:23:18,30915-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:23:18,32115-11-24 16:23:18  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 16:23:18,33315-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:23:18,33315-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 16:23:18,33415-11-24 16:23:18 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:23:18,33415-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:23:18,33515-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:23:18,33615-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 16:23:18,33615-11-24 16:23:18 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:23:18,33615-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:23:18,34815-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:23:18,34815-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 16:23:18,34915-11-24 16:23:18 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:23:18,34915-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:23:18,35015-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 16:23:18,35115-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 16:23:18,35115-11-24 16:23:18 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:23:18,35215-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:23:18,35215-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 16:23:18,35315-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 16:23:18,35415-11-24 16:23:18 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:23:18,35515-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:23:18,37415-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 16:23:18,40615-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 16:23:18,41615-11-24 16:23:18 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@b8f0de2]
2015-11-24 16:23:18,42415-11-24 16:23:18 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1ae49bbd]
2015-11-24 16:23:18,48915-11-24 16:23:18  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@245a690: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 16:23:18,49015-11-24 16:23:18 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 16:23:18,49015-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 16:23:18,50115-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 16:23:18,53815-11-24 16:23:18 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 16:23:18,53815-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 16:23:18,57615-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 16:23:18,60515-11-24 16:23:18 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 16:23:18,60515-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 16:23:18,94415-11-24 16:23:18 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 16:23:18,97415-11-24 16:23:18 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:23:18,97615-11-24 16:23:18 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:23:18,97815-11-24 16:23:18 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:23:18,97815-11-24 16:23:18 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:23:18,98515-11-24 16:23:18 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:23:18,98815-11-24 16:23:18 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:23:18,98815-11-24 16:23:18 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:23:18,98915-11-24 16:23:18 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:23:18,99115-11-24 16:23:18 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:23:18,99315-11-24 16:23:18 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:23:18,99315-11-24 16:23:18 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:23:18,99615-11-24 16:23:18 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:23:19,00115-11-24 16:23:19 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:23:19,00315-11-24 16:23:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:23:19,00415-11-24 16:23:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:23:19,00515-11-24 16:23:19 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:23:19,00715-11-24 16:23:19 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:23:19,00915-11-24 16:23:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:23:19,00915-11-24 16:23:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:23:19,01015-11-24 16:23:19 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:23:19,02615-11-24 16:23:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:23:19,02715-11-24 16:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:23:19,02915-11-24 16:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 16:23:19,05015-11-24 16:23:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:23:19,05115-11-24 16:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:23:19,05415-11-24 16:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 16:23:19,06515-11-24 16:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 16:23:19,07315-11-24 16:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 16:23:19,11515-11-24 16:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 16:23:19,13115-11-24 16:23:19 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:23:19,13215-11-24 16:23:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:23:19,13315-11-24 16:23:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:23:19,13415-11-24 16:23:19 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:23:19,14415-11-24 16:23:19 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:23:19,14515-11-24 16:23:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:23:19,14515-11-24 16:23:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:23:19,14615-11-24 16:23:19 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:23:19,14715-11-24 16:23:19 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:23:19,14915-11-24 16:23:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:23:19,15015-11-24 16:23:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:23:19,15115-11-24 16:23:19 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:23:19,15215-11-24 16:23:19 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:23:19,15415-11-24 16:23:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:23:19,15515-11-24 16:23:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:23:19,15615-11-24 16:23:19 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:23:19,15815-11-24 16:23:19 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 16:23:19,15915-11-24 16:23:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 16:23:19,16415-11-24 16:23:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 16:23:19,16515-11-24 16:23:19 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 16:23:19,17315-11-24 16:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 16:23:19,23315-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 16:23:19,23315-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 16:23:19,23415-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7a89c626
2015-11-24 16:23:19,23615-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1ffaade5
2015-11-24 16:23:19,23815-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@7377b6fc
2015-11-24 16:23:19,23915-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@1a89ebe0
2015-11-24 16:23:19,24415-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 16:23:19,24515-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 16:23:19,24515-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2d14b355
2015-11-24 16:23:19,24715-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@2008473d
2015-11-24 16:23:19,24815-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@2008473d
2015-11-24 16:23:19,24915-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2008473d
2015-11-24 16:23:19,25215-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 16:23:19,25315-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 16:23:19,25315-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@13d982e4
2015-11-24 16:23:19,25515-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 16:23:19,25615-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 16:23:19,25615-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5a61b819
2015-11-24 16:23:19,28015-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 16:23:19,28215-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 16:23:19,28515-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@b2c6b61
2015-11-24 16:23:19,32415-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 16:23:19,32415-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 16:23:19,32415-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1c08114a
2015-11-24 16:23:19,32715-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 16:23:19,32715-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 16:23:19,33115-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5bb48c07
2015-11-24 16:23:19,33615-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@14b89cc2
2015-11-24 16:23:19,33615-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@14b89cc2
2015-11-24 16:23:19,33815-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f3080df
2015-11-24 16:23:19,33915-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f3080df
2015-11-24 16:23:19,38215-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@4564886c
2015-11-24 16:23:19,38215-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@4564886c
2015-11-24 16:23:19,38615-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@6d293c5e
2015-11-24 16:23:19,38615-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@6d293c5e
2015-11-24 16:23:19,39215-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@405d65c3
2015-11-24 16:23:19,39315-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@405d65c3
2015-11-24 16:23:19,39715-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@297d1d8b
2015-11-24 16:23:19,39715-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@297d1d8b
2015-11-24 16:23:19,40015-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@121812f9
2015-11-24 16:23:19,40115-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@121812f9
2015-11-24 16:23:19,40115-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@121812f9
2015-11-24 16:23:19,40315-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6221a993
2015-11-24 16:23:19,40515-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 16:23:19,40515-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 16:23:19,40615-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7a171efb
2015-11-24 16:23:19,40715-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1ab50384
2015-11-24 16:23:19,40815-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@56c3b8b6
2015-11-24 16:23:19,40915-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@56c3b8b6
2015-11-24 16:23:19,41115-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@6ce18074
2015-11-24 16:23:19,41115-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6ce18074
2015-11-24 16:23:19,41315-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@3b73c65e
2015-11-24 16:23:19,41415-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3b73c65e
2015-11-24 16:23:19,41615-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@6f7e20ff
2015-11-24 16:23:19,41615-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f7e20ff
2015-11-24 16:23:19,42015-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@38430e80
2015-11-24 16:23:19,42015-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@38430e80
2015-11-24 16:23:19,42215-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@75c4d215
2015-11-24 16:23:19,42415-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@23e5fd87
2015-11-24 16:23:19,42615-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 16:23:19,42715-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 16:23:19,42715-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@3b34f473
2015-11-24 16:23:19,43015-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 16:23:19,43015-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 16:23:19,43115-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4be271de
2015-11-24 16:23:19,43315-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@663d80c9
2015-11-24 16:23:19,43615-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@18f9a7a8
2015-11-24 16:23:19,43715-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@18f9a7a8
2015-11-24 16:23:19,43715-11-24 16:23:19 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@18f9a7a8
