2015-11-24 14:23:18,09715-11-24 14:23:18 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 14:23:18,20815-11-24 14:23:18 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@1c398896 declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 14:23:18,20815-11-24 14:23:18 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:23:18,22315-11-24 14:23:18 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 14:23:18,34815-11-24 14:23:18 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:23:18,36415-11-24 14:23:18 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:23:18,36415-11-24 14:23:18 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:23:18,36415-11-24 14:23:18 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:23:18,39515-11-24 14:23:18 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:23:18,39515-11-24 14:23:18 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:23:18,39515-11-24 14:23:18 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:23:18,39515-11-24 14:23:18 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:23:18,41115-11-24 14:23:18 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:23:18,41115-11-24 14:23:18 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:23:18,41115-11-24 14:23:18 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:23:18,41115-11-24 14:23:18 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:23:18,42615-11-24 14:23:18 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@7dac14dd testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@2c8df9a0, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 14:23:18,42615-11-24 14:23:18 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 14:23:18,42615-11-24 14:23:18 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:23:18,53615-11-24 14:23:18 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:23:18,53615-11-24 14:23:18 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:23:18,53615-11-24 14:23:18 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:23:18,53615-11-24 14:23:18 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:23:18,55115-11-24 14:23:18 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:23:18,55115-11-24 14:23:18 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:23:18,55115-11-24 14:23:18 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:23:18,55115-11-24 14:23:18 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:23:18,55115-11-24 14:23:18 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 14:23:18,55115-11-24 14:23:18 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 14:23:18,56715-11-24 14:23:18 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 14:23:18,56715-11-24 14:23:18  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 14:23:18,64515-11-24 14:23:18 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:23:18,67615-11-24 14:23:18 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 14:23:18,67615-11-24 14:23:18 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 14:23:18,67615-11-24 14:23:18 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:23:18,77015-11-24 14:23:18 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:23:18,78615-11-24 14:23:18  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 14:23:18,80115-11-24 14:23:18 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:23:18,80115-11-24 14:23:18 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:23:18,84815-11-24 14:23:18 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:23:18,86415-11-24 14:23:18  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 14:23:18,88015-11-24 14:23:18 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:23:18,89515-11-24 14:23:18 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:23:18,92615-11-24 14:23:18 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 14:23:18,94215-11-24 14:23:18 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:23:18,95815-11-24 14:23:18 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:23:18,95815-11-24 14:23:18 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 14:23:18,98915-11-24 14:23:18  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 14:23:19,02015-11-24 14:23:19 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:23:19,02015-11-24 14:23:19 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:23:19,03615-11-24 14:23:19 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 14:23:19,05115-11-24 14:23:19 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:23:19,06715-11-24 14:23:19 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:23:19,14515-11-24 14:23:19  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 14:23:19,14515-11-24 14:23:19  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 14:23:19,16115-11-24 14:23:19 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 14:23:19,16115-11-24 14:23:19 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:23:19,16115-11-24 14:23:19 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:23:19,20015-11-24 14:23:19 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 14:23:19,29415-11-24 14:23:19 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 14:23:19,29415-11-24 14:23:19 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 14:23:19,29415-11-24 14:23:19 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 14:23:19,30915-11-24 14:23:19 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 14:23:19,30915-11-24 14:23:19  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 14:23:19,30915-11-24 14:23:19  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 14:23:19,32515-11-24 14:23:19 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:23:19,32515-11-24 14:23:19 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:23:19,34115-11-24 14:23:19 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:23:19,34115-11-24 14:23:19 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 14:23:19,35615-11-24 14:23:19  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@683bf9ff: startup date [Tue Nov 24 14:23:19 CST 2015]; root of context hierarchy
2015-11-24 14:23:19,35615-11-24 14:23:19 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@683bf9ff: org.springframework.beans.factory.support.DefaultListableBeanFactory@8488831: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 14:23:19,43415-11-24 14:23:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:23:19,43415-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:23:19,45015-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:23:19,46615-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:23:19,55915-11-24 14:23:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:23:19,57515-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:23:19,57515-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 14:23:19,68415-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:23:19,68415-11-24 14:23:19  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 14:23:19,74715-11-24 14:23:19  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 14:23:19,74715-11-24 14:23:19  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 14:23:19,74715-11-24 14:23:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:23:19,74715-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:23:19,74715-11-24 14:23:19  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 14:23:19,74715-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:23:19,74715-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:23:19,74715-11-24 14:23:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:23:19,74715-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:23:19,74715-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:23:19,74715-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:23:19,74715-11-24 14:23:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:23:19,74715-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:23:19,76315-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:23:19,76315-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:23:19,76315-11-24 14:23:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:23:19,76315-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:23:19,76315-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:23:19,76315-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:23:19,76315-11-24 14:23:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:23:19,76315-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:23:19,76315-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 14:23:19,76315-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:23:19,76315-11-24 14:23:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:23:19,76315-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:23:19,77815-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 14:23:19,79415-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:23:19,79415-11-24 14:23:19 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6f261c6c]
2015-11-24 14:23:19,80915-11-24 14:23:19 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@54acb07d]
2015-11-24 14:23:19,80915-11-24 14:23:19  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@8488831: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:23:19,80915-11-24 14:23:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 14:23:19,80915-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 14:23:19,87215-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 14:23:19,87215-11-24 14:23:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 14:23:19,87215-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 14:23:19,95015-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 14:23:19,96615-11-24 14:23:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 14:23:19,96615-11-24 14:23:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 14:23:20,12215-11-24 14:23:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 14:23:20,12215-11-24 14:23:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:23:20,12215-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:23:20,12215-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:23:20,12215-11-24 14:23:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:23:20,13815-11-24 14:23:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:23:20,15315-11-24 14:23:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:20,15315-11-24 14:23:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:20,15315-11-24 14:23:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 14:23:20,21915-11-24 14:23:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:23:20,21915-11-24 14:23:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:23:20,21915-11-24 14:23:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 14:23:20,23415-11-24 14:23:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:23:20,23415-11-24 14:23:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:20,23415-11-24 14:23:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 14:23:20,23415-11-24 14:23:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:23:20,23415-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:23:20,23415-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:23:20,23415-11-24 14:23:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:23:20,25015-11-24 14:23:20 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 14:23:20,32815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@78fb787f
2015-11-24 14:23:20,32815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@78fb787f
2015-11-24 14:23:20,32815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78fb787f
2015-11-24 14:23:20,32815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e67f47c
2015-11-24 14:23:20,34415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@3485b49e
2015-11-24 14:23:20,34415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@7377b6fc
2015-11-24 14:23:20,34415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@61b52c64
2015-11-24 14:23:20,34415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@61b52c64
2015-11-24 14:23:20,34415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61b52c64
2015-11-24 14:23:20,34415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@46c7c485
2015-11-24 14:23:20,34415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@46c7c485
2015-11-24 14:23:20,34415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46c7c485
2015-11-24 14:23:20,34415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@79a70972
2015-11-24 14:23:20,34415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@79a70972
2015-11-24 14:23:20,34415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79a70972
2015-11-24 14:23:20,35915-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@2b7a2bfe
2015-11-24 14:23:20,35915-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@2b7a2bfe
2015-11-24 14:23:20,35915-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2b7a2bfe
2015-11-24 14:23:20,35915-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7e23c750
2015-11-24 14:23:20,35915-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7e23c750
2015-11-24 14:23:20,35915-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e23c750
2015-11-24 14:23:20,35915-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@75d16e6e
2015-11-24 14:23:20,35915-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@75d16e6e
2015-11-24 14:23:20,35915-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75d16e6e
2015-11-24 14:23:20,35915-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@47330c96
2015-11-24 14:23:20,35915-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@47330c96
2015-11-24 14:23:20,35915-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@47330c96
2015-11-24 14:23:20,37515-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@412b940e
2015-11-24 14:23:20,37515-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@412b940e
2015-11-24 14:23:20,37515-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22c4d1da
2015-11-24 14:23:20,37515-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22c4d1da
2015-11-24 14:23:20,37515-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@39c2648b
2015-11-24 14:23:20,37515-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@39c2648b
2015-11-24 14:23:20,37515-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@2ab5cc4d
2015-11-24 14:23:20,37515-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@2ab5cc4d
2015-11-24 14:23:20,39115-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@7f792cec
2015-11-24 14:23:20,39115-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f792cec
2015-11-24 14:23:20,39115-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@74bf1f08
2015-11-24 14:23:20,39115-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@74bf1f08
2015-11-24 14:23:20,42215-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@75e17ae9
2015-11-24 14:23:20,42215-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@75e17ae9
2015-11-24 14:23:20,42215-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@75e17ae9
2015-11-24 14:23:20,43815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2d29f154
2015-11-24 14:23:20,43815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@46b0b225
2015-11-24 14:23:20,43815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@46b0b225
2015-11-24 14:23:20,43815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@46b0b225
2015-11-24 14:23:20,43815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@57ec035e
2015-11-24 14:23:20,43815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@20c449e3
2015-11-24 14:23:20,43815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20c449e3
2015-11-24 14:23:20,43815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@10cbf9d9
2015-11-24 14:23:20,43815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@10cbf9d9
2015-11-24 14:23:20,43815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@17b42596
2015-11-24 14:23:20,43815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17b42596
2015-11-24 14:23:20,43815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@2eb5f307
2015-11-24 14:23:20,43815-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2eb5f307
2015-11-24 14:23:20,45315-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17af4daa
2015-11-24 14:23:20,45315-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17af4daa
2015-11-24 14:23:20,45315-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a6d125b
2015-11-24 14:23:20,45315-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@288c3eae
2015-11-24 14:23:20,48415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@58cfdc01
2015-11-24 14:23:20,48415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@58cfdc01
2015-11-24 14:23:20,48415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@58cfdc01
2015-11-24 14:23:20,48415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b24260c
2015-11-24 14:23:20,48415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b24260c
2015-11-24 14:23:20,48415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b24260c
2015-11-24 14:23:20,48415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@544f4ab4
2015-11-24 14:23:20,48415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@6a776719
2015-11-24 14:23:20,48415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@6a776719
2015-11-24 14:23:20,48415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@6a776719
2015-11-24 14:23:20,48415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@21fbf127
2015-11-24 14:23:20,48415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@21fbf127
2015-11-24 14:23:20,48415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@21fbf127
2015-11-24 14:23:20,48415-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@664beade
2015-11-24 14:23:20,50015-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@2baf0158
2015-11-24 14:23:20,50015-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2baf0158
2015-11-24 14:23:20,50015-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@600f2cb8
2015-11-24 14:23:20,50015-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@71172e7a
2015-11-24 14:23:20,50015-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@9292f91
2015-11-24 14:23:20,50015-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9292f91
2015-11-24 14:23:20,51615-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@52765b39
2015-11-24 14:23:20,51615-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@729b9707
2015-11-24 14:23:20,51615-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@6fbfb4b9
2015-11-24 14:23:20,51615-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@67eae247
2015-11-24 14:23:20,51615-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@5ac169f5
2015-11-24 14:23:20,51615-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ac169f5
2015-11-24 14:23:20,51615-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@62481601
2015-11-24 14:23:20,51615-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6a9cce0f
2015-11-24 14:23:20,51615-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c9c7177
2015-11-24 14:23:20,51615-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@22dd6b21
2015-11-24 14:23:20,51615-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@76a45568
2015-11-24 14:23:20,51615-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1ee35bb2
2015-11-24 14:23:20,51615-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@609912f5
2015-11-24 14:23:20,51615-11-24 14:23:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61abc45e
2015-11-24 14:23:20,54715-11-24 14:23:20  INFO (Version.java:37 LINE) Version.<clinit> -> Hibernate Commons Annotations 3.2.0.Final
2015-11-24 14:23:20,54715-11-24 14:23:20  INFO (Environment.java:603 LINE) Environment.<clinit> -> Hibernate 3.6.8.Final
2015-11-24 14:23:20,54715-11-24 14:23:20  INFO (Environment.java:636 LINE) Environment.<clinit> -> hibernate.properties not found
2015-11-24 14:23:20,54715-11-24 14:23:20  INFO (Environment.java:814 LINE) Environment.buildBytecodeProvider -> Bytecode provider name : javassist
2015-11-24 14:23:20,56315-11-24 14:23:20  INFO (Environment.java:695 LINE) Environment.<clinit> -> using JDK 1.4 java.sql.Timestamp handling
2015-11-24 14:23:20,67215-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2015-11-24 14:23:20,67215-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2015-11-24 14:23:20,67215-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:23:20,67215-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:23:20,68815-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2015-11-24 14:23:20,68815-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2015-11-24 14:23:20,68815-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2015-11-24 14:23:20,68815-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2015-11-24 14:23:20,68815-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2015-11-24 14:23:20,68815-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2015-11-24 14:23:20,68815-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2015-11-24 14:23:20,70315-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2015-11-24 14:23:20,70315-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2015-11-24 14:23:20,70315-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-11-24 14:23:20,70315-11-24 14:23:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2015-11-24 14:23:20,76615-11-24 14:23:20 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:23:20,76615-11-24 14:23:20  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:23:20,76615-11-24 14:23:20 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:23:20,76615-11-24 14:23:20 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:23:20,85915-11-24 14:23:20 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:23:20,87515-11-24 14:23:20  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:23:20,87515-11-24 14:23:20 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:23:20,87515-11-24 14:23:20 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:23:20,96915-11-24 14:23:20 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:23:20,96915-11-24 14:23:20  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:23:20,96915-11-24 14:23:20 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:23:20,96915-11-24 14:23:20 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:23:21,04715-11-24 14:23:21 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:23:21,07815-11-24 14:23:21  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.UserOperate -> user_operate
2015-11-24 14:23:21,09415-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:23:21,09415-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userName -> userName
2015-11-24 14:23:21,09415-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPassword -> userPassword
2015-11-24 14:23:21,09415-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: phicommId -> phicomm_id
2015-11-24 14:23:21,09415-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userEmail -> userEmail
2015-11-24 14:23:21,09415-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPhoneNumb -> user_PhoneNumb
2015-11-24 14:23:21,09415-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userType -> userType
2015-11-24 14:23:21,09415-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: isChecked -> isChecked
2015-11-24 14:23:21,09415-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nickname -> nickname
2015-11-24 14:23:21,09415-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: figureurl -> figureurl
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: sex -> sex
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: province -> province
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: city -> city
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: birthday -> birthday
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openId -> open_id
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openKey -> open_key
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: accessToken -> access_token
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: expireseIn -> expirese_in
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: devinfo -> devinfo
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userinfo -> userinfo
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqq -> openqq
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqqinfo -> openqqinfo
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensina -> opensina
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensinainfo -> opensinainfo
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: createTime -> createTime
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: updateTime -> updateTime
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: lastLoginTime -> lastLoginTime
2015-11-24 14:23:21,10915-11-24 14:23:21  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.NoteNumbRecord -> note_numb_record
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nodeNumb -> node_numb
2015-11-24 14:23:21,10915-11-24 14:23:21  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.CrashLog -> crash_log
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: url -> url
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: describes -> describes
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: addDate -> addDate
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:23:21,10915-11-24 14:23:21 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:23:21,12515-11-24 14:23:21 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:23:21,12515-11-24 14:23:21 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:23:21,12515-11-24 14:23:21  INFO (Configuration.java:1676 LINE) Configuration.applyHibernateValidatorLegacyConstraintsOnDDL -> Hibernate Validator not found: ignoring
2015-11-24 14:23:21,21915-11-24 14:23:21 DEBUG (LoggerFactory.java:29 LINE) LoggerFactory.make -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-11-24 14:23:21,21915-11-24 14:23:21  INFO (Version.java:27 LINE) Version.<clinit> -> HV000001: Hibernate Validator 5.0.0.Final
2015-11-24 14:23:21,23515-11-24 14:23:21 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:23:21,23515-11-24 14:23:21 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:23:21,25115-11-24 14:23:21 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:23:21,39215-11-24 14:23:21  INFO (LocalSessionFactoryBean.java:780 LINE) LocalSessionFactoryBean.buildSessionFactory -> Building new Hibernate SessionFactory
2015-11-24 14:23:21,39215-11-24 14:23:21 DEBUG (Configuration.java:1854 LINE) Configuration.buildSessionFactory -> Preparing to build session factory with filters : {}
2015-11-24 14:23:21,39215-11-24 14:23:21 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:23:21,39215-11-24 14:23:21 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:23:21,39215-11-24 14:23:21 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:23:21,39215-11-24 14:23:21 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:23:21,39215-11-24 14:23:21 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:23:21,39215-11-24 14:23:21 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:23:21,39215-11-24 14:23:21 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:23:21,39215-11-24 14:23:21 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:23:21,39215-11-24 14:23:21 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:23:21,39215-11-24 14:23:21 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:23:21,39215-11-24 14:23:21 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:23:21,43915-11-24 14:23:21 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:23:21,47015-11-24 14:23:21 DEBUG (Configuration.java:1896 LINE) Configuration.enableLegacyHibernateValidator -> Legacy Validator not present in classpath, ignoring event listener registration
2015-11-24 14:23:21,47015-11-24 14:23:21 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:23:21,47015-11-24 14:23:21 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:23:21,47015-11-24 14:23:21 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:23:21,47015-11-24 14:23:21 DEBUG (HibernateSearchEventListenerRegister.java:231 LINE) HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener -> Search not present in classpath, ignoring event listener registration.
2015-11-24 14:23:21,48515-11-24 14:23:21  INFO (HibernateSearchEventListenerRegister.java:75 LINE) HibernateSearchEventListenerRegister.enableHibernateSearch -> Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2015-11-24 14:23:21,48515-11-24 14:23:21  INFO (ConnectionProviderFactory.java:173 LINE) ConnectionProviderFactory.initializeConnectionProviderFromConfig -> Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2015-11-24 14:23:21,84515-11-24 14:23:21  INFO (Dialect.java:135 LINE) Dialect.<init> -> Using dialect: org.hibernate.dialect.MySQLDialect
2015-11-24 14:23:21,89215-11-24 14:23:21  INFO (SettingsFactory.java:126 LINE) SettingsFactory.buildSettings -> Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-11-24 14:23:21,89215-11-24 14:23:21  INFO (SettingsFactory.java:132 LINE) SettingsFactory.buildSettings -> Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.25 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2015-11-24 14:23:21,89215-11-24 14:23:21  INFO (TransactionFactoryFactory.java:65 LINE) TransactionFactoryFactory.buildTransactionFactory -> Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2015-11-24 14:23:21,89215-11-24 14:23:21  INFO (TransactionManagerLookupFactory.java:83 LINE) TransactionManagerLookupFactory.getTransactionManagerLookup -> No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2015-11-24 14:23:21,89215-11-24 14:23:21  INFO (SettingsFactory.java:179 LINE) SettingsFactory.buildSettings -> Automatic flush during beforeCompletion(): disabled
2015-11-24 14:23:21,89215-11-24 14:23:21  INFO (SettingsFactory.java:183 LINE) SettingsFactory.buildSettings -> Automatic session close at end of transaction: disabled
2015-11-24 14:23:21,89215-11-24 14:23:21  INFO (SettingsFactory.java:190 LINE) SettingsFactory.buildSettings -> JDBC batch size: 25
2015-11-24 14:23:21,89215-11-24 14:23:21  INFO (SettingsFactory.java:193 LINE) SettingsFactory.buildSettings -> JDBC batch updates for versioned data: disabled
2015-11-24 14:23:21,89215-11-24 14:23:21  INFO (SettingsFactory.java:198 LINE) SettingsFactory.buildSettings -> Scrollable result sets: enabled
2015-11-24 14:23:21,89215-11-24 14:23:21 DEBUG (SettingsFactory.java:202 LINE) SettingsFactory.buildSettings -> Wrap result sets: disabled
2015-11-24 14:23:21,89215-11-24 14:23:21  INFO (SettingsFactory.java:206 LINE) SettingsFactory.buildSettings -> JDBC3 getGeneratedKeys(): enabled
2015-11-24 14:23:21,89215-11-24 14:23:21  INFO (SettingsFactory.java:210 LINE) SettingsFactory.buildSettings -> JDBC result set fetch size: 50
2015-11-24 14:23:21,89215-11-24 14:23:21  INFO (SettingsFactory.java:214 LINE) SettingsFactory.buildSettings -> Connection release mode: after_transaction
2015-11-24 14:23:21,90715-11-24 14:23:21  INFO (SettingsFactory.java:238 LINE) SettingsFactory.buildSettings -> Maximum outer join fetch depth: 2
2015-11-24 14:23:21,90715-11-24 14:23:21  INFO (SettingsFactory.java:241 LINE) SettingsFactory.buildSettings -> Default batch fetch size: 1
2015-11-24 14:23:21,90715-11-24 14:23:21  INFO (SettingsFactory.java:245 LINE) SettingsFactory.buildSettings -> Generate SQL with comments: disabled
2015-11-24 14:23:21,90715-11-24 14:23:21  INFO (SettingsFactory.java:249 LINE) SettingsFactory.buildSettings -> Order SQL updates by primary key: disabled
2015-11-24 14:23:21,90715-11-24 14:23:21  INFO (SettingsFactory.java:253 LINE) SettingsFactory.buildSettings -> Order SQL inserts for batching: disabled
2015-11-24 14:23:21,90715-11-24 14:23:21  INFO (SettingsFactory.java:431 LINE) SettingsFactory.createQueryTranslatorFactory -> Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2015-11-24 14:23:21,90715-11-24 14:23:21  INFO (ASTQueryTranslatorFactory.java:47 LINE) ASTQueryTranslatorFactory.<init> -> Using ASTQueryTranslatorFactory
2015-11-24 14:23:21,90715-11-24 14:23:21  INFO (SettingsFactory.java:261 LINE) SettingsFactory.buildSettings -> Query language substitutions: {false='N', true='Y'}
2015-11-24 14:23:21,90715-11-24 14:23:21  INFO (SettingsFactory.java:266 LINE) SettingsFactory.buildSettings -> JPA-QL strict compliance: disabled
2015-11-24 14:23:21,90715-11-24 14:23:21  INFO (SettingsFactory.java:271 LINE) SettingsFactory.buildSettings -> Second-level cache: enabled
2015-11-24 14:23:21,90715-11-24 14:23:21  INFO (SettingsFactory.java:275 LINE) SettingsFactory.buildSettings -> Query cache: enabled
2015-11-24 14:23:21,90715-11-24 14:23:21  INFO (SettingsFactory.java:406 LINE) SettingsFactory.createRegionFactory -> Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
2015-11-24 14:23:21,92315-11-24 14:23:21  INFO (RegionFactoryCacheProviderBridge.java:61 LINE) RegionFactoryCacheProviderBridge.<init> -> Cache provider: org.hibernate.cache.EhCacheProvider
2015-11-24 14:23:21,93915-11-24 14:23:21  INFO (SettingsFactory.java:285 LINE) SettingsFactory.buildSettings -> Optimize cache for minimal puts: disabled
2015-11-24 14:23:21,93915-11-24 14:23:21  INFO (SettingsFactory.java:294 LINE) SettingsFactory.buildSettings -> Structured second-level cache entries: disabled
2015-11-24 14:23:21,93915-11-24 14:23:21  INFO (SettingsFactory.java:385 LINE) SettingsFactory.createQueryCacheFactory -> Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
2015-11-24 14:23:21,93915-11-24 14:23:21  INFO (SettingsFactory.java:314 LINE) SettingsFactory.buildSettings -> Echoing all SQL to stdout
2015-11-24 14:23:21,93915-11-24 14:23:21  INFO (SettingsFactory.java:323 LINE) SettingsFactory.buildSettings -> Statistics: disabled
2015-11-24 14:23:21,93915-11-24 14:23:21  INFO (SettingsFactory.java:327 LINE) SettingsFactory.buildSettings -> Deleted entity synthetic identifier rollback: disabled
2015-11-24 14:23:21,93915-11-24 14:23:21  INFO (SettingsFactory.java:343 LINE) SettingsFactory.buildSettings -> Default entity-mode: pojo
2015-11-24 14:23:21,93915-11-24 14:23:21  INFO (SettingsFactory.java:347 LINE) SettingsFactory.buildSettings -> Named query checking : enabled
2015-11-24 14:23:21,93915-11-24 14:23:21  INFO (SettingsFactory.java:351 LINE) SettingsFactory.buildSettings -> Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2015-11-24 14:23:21,95415-11-24 14:23:21  INFO (SessionFactoryImpl.java:202 LINE) SessionFactoryImpl.<init> -> building session factory
2015-11-24 14:23:21,98515-11-24 14:23:21 DEBUG (SessionFactoryImpl.java:206 LINE) SessionFactoryImpl.<init> -> Statistics initialized [enabled=false]}
2015-11-24 14:23:21,98515-11-24 14:23:21 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@78fb787f
2015-11-24 14:23:21,98515-11-24 14:23:21 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@78fb787f
2015-11-24 14:23:21,98515-11-24 14:23:21 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78fb787f
2015-11-24 14:23:21,98515-11-24 14:23:21 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e67f47c
2015-11-24 14:23:21,98515-11-24 14:23:21 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@3485b49e
2015-11-24 14:23:21,98515-11-24 14:23:21 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@7377b6fc
2015-11-24 14:23:21,98515-11-24 14:23:21 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@61b52c64
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@61b52c64
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61b52c64
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@46c7c485
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@46c7c485
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@46c7c485
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@79a70972
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@79a70972
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@79a70972
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@2b7a2bfe
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@2b7a2bfe
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@2b7a2bfe
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7e23c750
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@7e23c750
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@7e23c750
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@75d16e6e
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@75d16e6e
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@75d16e6e
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@47330c96
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@47330c96
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@47330c96
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@412b940e
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@412b940e
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@22c4d1da
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@22c4d1da
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@39c2648b
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@39c2648b
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@2ab5cc4d
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@2ab5cc4d
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@7f792cec
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@7f792cec
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@74bf1f08
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@74bf1f08
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@75e17ae9
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@75e17ae9
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@75e17ae9
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2d29f154
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@46b0b225
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@46b0b225
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@46b0b225
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@57ec035e
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@20c449e3
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@20c449e3
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@10cbf9d9
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@10cbf9d9
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@17b42596
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17b42596
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@2eb5f307
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2eb5f307
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@17af4daa
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@17af4daa
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3a6d125b
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@288c3eae
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@58cfdc01
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@58cfdc01
2015-11-24 14:23:22,00115-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@58cfdc01
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b24260c
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b24260c
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b24260c
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@544f4ab4
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@6a776719
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@6a776719
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@6a776719
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@21fbf127
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@21fbf127
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@21fbf127
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@664beade
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@2baf0158
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2baf0158
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@600f2cb8
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@71172e7a
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@9292f91
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@9292f91
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@52765b39
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@729b9707
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@6fbfb4b9
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@67eae247
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@5ac169f5
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5ac169f5
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@407773d4
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6255845c
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5c64e673
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6455b768
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@377c404e
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3e61dd57
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@b0a9ac0
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6535b8e9
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@78214ca6
2015-11-24 14:23:22,01715-11-24 14:23:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@729b9707
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@522f63e7
2015-11-24 14:23:22,01715-11-24 14:23:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@6fbfb4b9
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1d72e46d
2015-11-24 14:23:22,01715-11-24 14:23:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@600f2cb8
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@7e762d0
2015-11-24 14:23:22,01715-11-24 14:23:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [clob] overrides previous : org.hibernate.type.ClobType@9292f91
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7e762d0
2015-11-24 14:23:22,01715-11-24 14:23:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@9292f91
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@680849bd
2015-11-24 14:23:22,01715-11-24 14:23:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@52765b39
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@61f2bf35
2015-11-24 14:23:22,01715-11-24 14:23:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@71172e7a
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@7ab18869
2015-11-24 14:23:22,01715-11-24 14:23:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [blob] overrides previous : org.hibernate.type.BlobType@2baf0158
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7ab18869
2015-11-24 14:23:22,01715-11-24 14:23:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@2baf0158
2015-11-24 14:23:22,01715-11-24 14:23:22 DEBUG (SessionFactoryImpl.java:228 LINE) SessionFactoryImpl.<init> -> Session factory constructed with filter configurations : {}
2015-11-24 14:23:22,03215-11-24 14:23:22 DEBUG (SessionFactoryImpl.java:232 LINE) SessionFactoryImpl.<init> -> instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, sun.boot.library.path=E:\JDK1.7\bin, java.vm.version=23.7-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.cache.use_query_cache=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\workspace\mobile-user, java.runtime.version=1.7.0_17-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=E:\JDK1.7\lib\endorsed, os.arch=amd64, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\gqy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, hibernate.cache.use_second_level_cache=true, sun.jnu.encoding=GBK, hibernate.jdbc.fetch_size=50, java.library.path=E:\JDK1.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\ProgramData\Lenovo\ReadyApps;E:\JDK\bin;E:\JDK\jre\bin;E:\Go\bin;E:\winscp\WinSCP\;E:\maven\apache-maven-3.2.3\bin;C:\Program Files (x86)\DBank\ClickUp;C:\Program Files (x86)\DBank\ClickUp;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\gqy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=after_transaction, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=gqy, java.class.path=G:\workspace\mobile-user\target\test-classes;G:\workspace\mobile-user\target\classes;H:\Respositories2\repository\com\alibaba\fastjson\1.2.4\fastjson-1.2.4.jar;H:\Respositories2\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;H:\Respositories2\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;H:\Respositories2\repository\io\netty\netty\4.0.0.Alpha8\netty-4.0.0.Alpha8.jar;H:\Respositories2\repository\jstl\jstl\1.2\jstl-1.2.jar;H:\Respositories2\repository\org\springframework\spring-aop\3.2.0.RELEASE\spring-aop-3.2.0.RELEASE.jar;H:\Respositories2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;H:\Respositories2\repository\org\springframework\spring-beans\3.2.0.RELEASE\spring-beans-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context\3.2.0.RELEASE\spring-context-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-expression\3.2.0.RELEASE\spring-expression-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context-support\3.2.0.RELEASE\spring-context-support-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-core\3.2.0.RELEASE\spring-core-3.2.0.RELEASE.jar;H:\Respositories2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;H:\Respositories2\repository\org\springframework\spring-jdbc\3.2.0.RELEASE\spring-jdbc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-orm\3.2.0.RELEASE\spring-orm-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-tx\3.2.0.RELEASE\spring-tx-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-web\3.2.0.RELEASE\spring-web-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-webmvc\3.2.0.RELEASE\spring-webmvc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\amqp\spring-amqp\1.2.0.RELEASE\spring-amqp-1.2.0.RELEASE.jar;H:\Respositories2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;H:\Respositories2\repository\com\fasterxml\jackson\core\jackson-core\2.1.0\jackson-core-2.1.0.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.13\jackson-jaxrs-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-xc\1.9.13\jackson-xc-1.9.13.jar;H:\Respositories2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;H:\Respositories2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;H:\Respositories2\repository\mysql\mysql-connector-java\5.1.25\mysql-connector-java-5.1.25.jar;H:\Respositories2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;H:\Respositories2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;H:\Respositories2\repository\org\aspectj\aspectjweaver\1.6.4\aspectjweaver-1.6.4.jar;H:\Respositories2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;H:\Respositories2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;H:\Respositories2\repository\commons-beanutils\commons-beanutils\1.9.0\commons-beanutils-1.9.0.jar;H:\Respositories2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;H:\Respositories2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;H:\Respositories2\repository\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;H:\Respositories2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;H:\Respositories2\repository\org\mybatis\mybatis-spring\1.2.0\mybatis-spring-1.2.0.jar;H:\Respositories2\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;H:\Respositories2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar;H:\Respositories2\repository\org\json\json\20090211\json-20090211.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-lgpl\1.8.1\jackson-core-lgpl-1.8.1.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-lgpl\1.8.1\jackson-mapper-lgpl-1.8.1.jar;H:\Respositories2\repository\org\freemarker\freemarker\2.3.16\freemarker-2.3.16.jar;H:\Respositories2\repository\opensymphony\sitemesh\2.4.2\sitemesh-2.4.2.jar;H:\Respositories2\repository\org\testng\testng\5.9\testng-5.9-jdk15.jar;H:\Respositories2\repository\junit\junit\4.7\junit-4.7.jar;H:\Respositories2\repository\cglib\cglib-asm\1.0\cglib-asm-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-core\1.0\jxls-core-1.0.jar;H:\Respositories2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;H:\Respositories2\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml\3.7\poi-ooxml-3.7.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml-schemas\3.7\poi-ooxml-schemas-3.7.jar;H:\Respositories2\repository\org\apache\xmlbeans\xmlbeans\2.3.0\xmlbeans-2.3.0.jar;H:\Respositories2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;H:\Respositories2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-reader\1.0\jxls-reader-1.0.jar;H:\Respositories2\repository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient\4.3.2\httpclient-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient-cache\4.3.2\httpclient-cache-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpmime\4.3.2\httpmime-4.3.2.jar;H:\Respositories2\repository\org\quartz-scheduler\quartz\1.8.6\quartz-1.8.6.jar;H:\Respositories2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;H:\Respositories2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;H:\Respositories2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;H:\Respositories2\repository\net\coobird\thumbnailator\0.4.7\thumbnailator-0.4.7.jar;H:\Respositories2\repository\jcifs\jcifs\1.3.17\jcifs-1.3.17.jar;H:\Respositories2\repository\org\apache\poi\poi\3.10.1\poi-3.10.1.jar;H:\Respositories2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;H:\Respositories2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;H:\Respositories2\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;H:\Respositories2\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;H:\Respositories2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;H:\Respositories2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;H:\Respositories2\repository\net\sf\supercsv\super-csv\2.2.0\super-csv-2.2.0.jar;H:\Respositories2\repository\org\bouncycastle\bcprov-jdk16\1.45\bcprov-jdk16-1.45.jar;H:\Respositories2\repository\jdom\jdom\1.0\jdom-1.0.jar;H:\Respositories2\repository\com\belerweb\pinyin4j\2.5.0\pinyin4j-2.5.0.jar;H:\Respositories2\repository\org\glassfish\jersey\ext\jersey-spring3\2.4.1\jersey-spring3-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-server\2.4.1\jersey-server-2.4.1.jar;H:\Respositories2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-api\2.2.0-b21\hk2-api-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\javax.inject\2.2.0-b21\javax.inject-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-locator\2.2.0-b21\hk2-locator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\asm-all-repackaged\2.2.0-b21\asm-all-repackaged-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\cglib\2.2.0-b21\cglib-2.2.0-b21.jar;H:\Respositories2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;H:\Respositories2\repository\org\glassfish\jersey\containers\jersey-container-servlet-core\2.4.1\jersey-container-servlet-core-2.4.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2\2.2.0-b21\hk2-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-utils\2.2.0-b21\hk2-utils-2.2.0-b21.jar;H:\Respositories2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;H:\Respositories2\repository\org\glassfish\hk2\config-types\2.2.0-b21\config-types-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\core\2.2.0-b21\core-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-config\2.2.0-b21\hk2-config-2.2.0-b21.jar;H:\Respositories2\repository\org\jvnet\tiger-types\1.4\tiger-types-1.4.jar;H:\Respositories2\repository\org\glassfish\hk2\external\bean-validator\2.2.0-b21\bean-validator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-runlevel\2.2.0-b21\hk2-runlevel-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\class-model\2.2.0-b21\class-model-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\spring-bridge\2.2.0-b21\spring-bridge-2.2.0-b21.jar;H:\Respositories2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\2.4.1\jersey-media-json-jackson-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-common\2.4.1\jersey-common-2.4.1.jar;H:\Respositories2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;H:\Respositories2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.1\osgi-resource-locator-1.0.1.jar;H:\Respositories2\repository\org\codehaus\groovy\groovy-all\2.2.0\groovy-all-2.2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\providers\jersey-test-framework-provider-external\2.5.1\jersey-test-framework-provider-external-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\jersey-test-framework-core\2.5.1\jersey-test-framework-core-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-client\2.5.1\jersey-client-2.5.1.jar;H:\Respositories2\repository\org\springframework\spring-test\3.2.6.RELEASE\spring-test-3.2.6.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session\1.0.1.RELEASE\spring-session-1.0.1.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session-data-redis\1.0.0.RELEASE\spring-session-data-redis-1.0.0.RELEASE.jar;H:\Respositories2\repository\org\apache\commons\commons-pool2\2.2\commons-pool2-2.2.jar;H:\Respositories2\repository\redis\clients\jedis\2.6.0\jedis-2.6.0.jar;H:\Respositories2\repository\org\springframework\data\spring-data-redis\1.4.1.RELEASE\spring-data-redis-1.4.1.RELEASE.jar;H:\Respositories2\repository\net\sf\ehcache\ehcache-core\2.6.11\ehcache-core-2.6.11.jar;H:\Respositories2\repository\org\hibernate3\hibernate3\3.0.0\hibernate3-3.0.0.jar;H:\Respositories2\repository\com\google\code\gson\gson\2.1\gson-2.1.jar;H:\Respositories2\repository\org\apache\openejb\javaee-api\5.0-1\javaee-api-5.0-1.jar;H:\Respositories2\repository\com\alibaba\druid\1.0.2\druid-1.0.2.jar;H:\Respositories2\repository\javax\faces\jsf-impl\1.2_04\jsf-impl-1.2_04.jar;H:\Respositories2\repository\javax\faces\jsf-api\1.2_04\jsf-api-1.2_04.jar;H:\Respositories2\repository\javax\transaction\jta\1.1\jta-1.1.jar;H:\Respositories2\repository\org\apache\ws\wss4j\1.5.1\wss4j-1.5.1.jar;H:\Respositories2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;H:\Respositories2\repository\hibernate\antlr\2.7.5H3\antlr-2.7.5H3.jar;H:\Respositories2\repository\javassist\javassist\3.9.0.GA\javassist-3.9.0.GA.jar;H:\Respositories2\repository\com\fx\mobile\mobile-model\0.0.1-SNAPSHOT\mobile-model-0.0.1-SNAPSHOT.jar;H:\Respositories2\repository\com\fx\mobile\mobile-core\0.0.1\mobile-core-0.0.1.jar;H:\Respositories2\repository\Decoder\sun.misc.BASE64Decoder\1.0.0\sun.misc.BASE64Decoder-1.0.0.jar;H:\Respositories2\repository\marketingFile\marketingFile\0.0.1\marketingFile-0.0.1.jar;H:\Respositories2\repository\com\qq\connect\Sdk4J\1.0\Sdk4J-1.0.jar;H:\Respositories2\repository\org\apache\commons\commons-io\1.3.2\commons-io-1.3.2.jar;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.query.substitutions=true 'Y', false 'N', hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=E:\JDK1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 59870 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.fx.mobile.junit.UserOperateDaoImplTest, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_17, java.ext.dirs=E:\JDK1.7\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=E:\JDK1.7\lib\resources.jar;E:\JDK1.7\lib\rt.jar;E:\JDK1.7\lib\sunrsasign.jar;E:\JDK1.7\lib\jsse.jar;E:\JDK1.7\lib\jce.jar;E:\JDK1.7\lib\charsets.jar;E:\JDK1.7\lib\jfr.jar;E:\JDK1.7\classes, java.vendor=Oracle Corporation, hibernate.jdbc.batch_size=25, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-11-24 14:23:22,04815-11-24 14:23:22 DEBUG (CacheManager.java:684 LINE) CacheManager.parseConfiguration -> Configuring ehcache from classpath.
2015-11-24 14:23:22,04815-11-24 14:23:22 DEBUG (ConfigurationFactory.java:132 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from ehcache.xml found in the classpath: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:23:22,04815-11-24 14:23:22 DEBUG (ConfigurationFactory.java:98 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from URL: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:23:22,04815-11-24 14:23:22 DEBUG (ConfigurationFactory.java:150 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from InputStream
2015-11-24 14:23:22,09515-11-24 14:23:22 DEBUG (DiskStoreConfiguration.java:141 LINE) DiskStoreConfiguration.translatePath -> Disk Store Path: C:\Users\gqy\AppData\Local\Temp\
2015-11-24 14:23:22,12615-11-24 14:23:22 DEBUG (PropertyUtil.java:88 LINE) PropertyUtil.parseProperties -> propertiesString is null.
2015-11-24 14:23:22,14215-11-24 14:23:22 DEBUG (ConfigurationHelper.java:185 LINE) ConfigurationHelper.createCacheManagerEventListener -> No CacheManagerEventListenerFactory class specified. Skipping...
2015-11-24 14:23:22,20415-11-24 14:23:22 DEBUG (Cache.java:955 LINE) Cache.createBootstrapCacheLoader -> No BootstrapCacheLoaderFactory class specified. Skipping...
2015-11-24 14:23:22,20415-11-24 14:23:22 DEBUG (Cache.java:929 LINE) Cache.createCacheWriter -> CacheWriter factory not configured. Skipping...
2015-11-24 14:23:22,20415-11-24 14:23:22 DEBUG (ConfigurationHelper.java:96 LINE) ConfigurationHelper.createCacheExceptionHandler -> No CacheExceptionHandlerFactory class specified. Skipping...
2015-11-24 14:23:22,22015-11-24 14:23:22 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:23:22,22015-11-24 14:23:22 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:23:22,22015-11-24 14:23:22 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:23:22,37715-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.NoteNumbRecord
2015-11-24 14:23:22,37715-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from note_numb_record where id =?
2015-11-24 14:23:22,37715-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select notenumbre_.id, notenumbre_.node_numb as node2_1_ from note_numb_record notenumbre_ where notenumbre_.id=?
2015-11-24 14:23:22,37715-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into note_numb_record (node_numb, id) values (?, ?)
2015-11-24 14:23:22,37715-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update note_numb_record set node_numb=? where id=?
2015-11-24 14:23:22,37715-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from note_numb_record where id=?
2015-11-24 14:23:22,37715-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into note_numb_record (node_numb) values (?)
2015-11-24 14:23:22,39315-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.CrashLog
2015-11-24 14:23:22,39315-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from marketing1.crash_log where id =?
2015-11-24 14:23:22,39315-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select crashlog_.id, crashlog_.url as url2_, crashlog_.describes as describes2_, crashlog_.addDate as addDate2_ from marketing1.crash_log crashlog_ where crashlog_.id=?
2015-11-24 14:23:22,39315-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into marketing1.crash_log (url, describes, addDate, id) values (?, ?, ?, ?)
2015-11-24 14:23:22,39315-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update marketing1.crash_log set url=?, describes=?, addDate=? where id=?
2015-11-24 14:23:22,39315-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from marketing1.crash_log where id=?
2015-11-24 14:23:22,39315-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into marketing1.crash_log (url, describes, addDate) values (?, ?, ?)
2015-11-24 14:23:22,40815-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.UserOperate
2015-11-24 14:23:22,40815-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from user_operate where id =?
2015-11-24 14:23:22,40815-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select useroperat_.id, useroperat_.userName as userName0_, useroperat_.userPassword as userPass3_0_, useroperat_.phicomm_id as phicomm4_0_, useroperat_.userEmail as userEmail0_, useroperat_.user_PhoneNumb as user6_0_, useroperat_.userType as userType0_, useroperat_.isChecked as isChecked0_, useroperat_.nickname as nickname0_, useroperat_.figureurl as figureurl0_, useroperat_.sex as sex0_, useroperat_.province as province0_, useroperat_.city as city0_, useroperat_.birthday as birthday0_, useroperat_.open_id as open15_0_, useroperat_.open_key as open16_0_, useroperat_.access_token as access17_0_, useroperat_.expirese_in as expirese18_0_, useroperat_.devinfo as devinfo0_, useroperat_.userinfo as userinfo0_, useroperat_.openqq as openqq0_, useroperat_.openqqinfo as openqqinfo0_, useroperat_.opensina as opensina0_, useroperat_.opensinainfo as opensin24_0_, useroperat_.createTime as createTime0_, useroperat_.updateTime as updateTime0_, useroperat_.lastLoginTime as lastLog27_0_ from user_operate useroperat_ where useroperat_.id=?
2015-11-24 14:23:22,40815-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:23:22,40815-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update user_operate set userName=?, userPassword=?, phicomm_id=?, userEmail=?, user_PhoneNumb=?, userType=?, isChecked=?, nickname=?, figureurl=?, sex=?, province=?, city=?, birthday=?, open_id=?, open_key=?, access_token=?, expirese_in=?, devinfo=?, userinfo=?, openqq=?, openqqinfo=?, opensina=?, opensinainfo=?, createTime=?, updateTime=?, lastLoginTime=? where id=?
2015-11-24 14:23:22,40815-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from user_operate where id=?
2015-11-24 14:23:22,40815-11-24 14:23:22 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:23:22,47115-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [NONE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:23:22,47115-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:23:22,47115-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:23:22,47115-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE_NOWAIT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:23:22,47115-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [FORCE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:23:22,47115-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? lock in share mode
2015-11-24 14:23:22,47115-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_WRITE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:23:22,47115-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:23:22,47115-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:23:22,47115-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:23:22,47115-11-24 14:23:22 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:23:22,47115-11-24 14:23:22 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [NONE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE_NOWAIT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [FORCE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? lock in share mode
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_WRITE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [NONE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE_NOWAIT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [FORCE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? lock in share mode
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_WRITE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:23:22,48615-11-24 14:23:22 DEBUG (SessionFactoryObjectFactory.java:61 LINE) SessionFactoryObjectFactory.<clinit> -> initializing class SessionFactoryObjectFactory
2015-11-24 14:23:22,50215-11-24 14:23:22 DEBUG (SessionFactoryObjectFactory.java:99 LINE) SessionFactoryObjectFactory.addInstance -> registered: 69a28813-ff3c-4b39-9c07-ac164f1aae7e (unnamed)
2015-11-24 14:23:22,50215-11-24 14:23:22  INFO (SessionFactoryObjectFactory.java:105 LINE) SessionFactoryObjectFactory.addInstance -> Not binding factory to JNDI, no JNDI name configured
2015-11-24 14:23:22,50215-11-24 14:23:22 DEBUG (SessionFactoryImpl.java:369 LINE) SessionFactoryImpl.<init> -> instantiated session factory
2015-11-24 14:23:22,50215-11-24 14:23:22  INFO (SchemaUpdate.java:155 LINE) SchemaUpdate.execute -> Running hbm2ddl schema update
2015-11-24 14:23:22,50215-11-24 14:23:22  INFO (SchemaUpdate.java:167 LINE) SchemaUpdate.execute -> fetching database metadata
2015-11-24 14:23:22,51815-11-24 14:23:22  INFO (SchemaUpdate.java:179 LINE) SchemaUpdate.execute -> updating schema
2015-11-24 14:23:22,51815-11-24 14:23:22 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:23:22,51815-11-24 14:23:22 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:23:22,51815-11-24 14:23:22 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:23:22,51815-11-24 14:23:22 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:23:22,51815-11-24 14:23:22 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:23:22,51815-11-24 14:23:22 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:23:22,51815-11-24 14:23:22 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:23:22,51815-11-24 14:23:22 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:23:22,51815-11-24 14:23:22 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:23:22,51815-11-24 14:23:22 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:23:22,51815-11-24 14:23:22 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:23:22,51815-11-24 14:23:22 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:23:22,54915-11-24 14:23:22  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:23:22,58015-11-24 14:23:22 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:23:22,61115-11-24 14:23:22  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.note_numb_record
2015-11-24 14:23:22,61115-11-24 14:23:22  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [id, node_numb]
2015-11-24 14:23:22,61115-11-24 14:23:22  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:23:22,61115-11-24 14:23:22  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:23:22,64315-11-24 14:23:22  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.user_operate
2015-11-24 14:23:22,64315-11-24 14:23:22  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [birthday, sex, updatetime, open_id, openqq, opensina, userinfo, user_phonenumb, city, createtime, id, userpassword, username, lastlogintime, province, opensinainfo, figureurl, phicomm_id, open_key, access_token, nickname, usertype, ischecked, openqqinfo, useremail, devinfo, expirese_in]
2015-11-24 14:23:22,64315-11-24 14:23:22  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:23:22,64315-11-24 14:23:22  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:23:22,64315-11-24 14:23:22  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:23:22,64315-11-24 14:23:22 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:23:22,64315-11-24 14:23:22 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:23:22,64315-11-24 14:23:22 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:23:22,64315-11-24 14:23:22 DEBUG (SchemaUpdate.java:203 LINE) SchemaUpdate.execute -> create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:23:22,64315-11-24 14:23:22 ERROR (SchemaUpdate.java:212 LINE) SchemaUpdate.execute -> Unsuccessful: create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:23:22,64315-11-24 14:23:22 ERROR (SchemaUpdate.java:213 LINE) SchemaUpdate.execute -> Unknown database 'marketing1'
2015-11-24 14:23:22,64315-11-24 14:23:22  INFO (SchemaUpdate.java:217 LINE) SchemaUpdate.execute -> schema update complete
2015-11-24 14:23:22,65815-11-24 14:23:22  INFO (UpdateTimestampsCache.java:57 LINE) UpdateTimestampsCache.<init> -> starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:23:22,65815-11-24 14:23:22  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
2015-11-24 14:23:22,69015-11-24 14:23:22 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:23:22,70515-11-24 14:23:22 DEBUG (DiskStorePathManager.java:169 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Using diskstore path C:\Users\gqy\AppData\Local\Temp
2015-11-24 14:23:22,70515-11-24 14:23:22 DEBUG (DiskStorePathManager.java:170 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Holding exclusive lock on C:\Users\gqy\AppData\Local\Temp\.ehcache-diskstore.lock
2015-11-24 14:23:22,70515-11-24 14:23:22 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 14:23:22,70515-11-24 14:23:22 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:23:22,72115-11-24 14:23:22 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:23:22,72115-11-24 14:23:22 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:23:22,73615-11-24 14:23:22 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:23:22,73615-11-24 14:23:22 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.UpdateTimestampsCache'.
2015-11-24 14:23:22,73615-11-24 14:23:22 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:23:22,73615-11-24 14:23:22  INFO (StandardQueryCache.java:76 LINE) StandardQueryCache.<init> -> starting query cache at region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:23:22,73615-11-24 14:23:22  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
2015-11-24 14:23:22,73615-11-24 14:23:22 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.StandardQueryCache
2015-11-24 14:23:22,73615-11-24 14:23:22 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 14:23:22,73615-11-24 14:23:22 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:23:22,73615-11-24 14:23:22 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:23:22,73615-11-24 14:23:22 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:23:22,75215-11-24 14:23:22 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.StandardQueryCache
2015-11-24 14:23:22,75215-11-24 14:23:22 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.StandardQueryCache'.
2015-11-24 14:23:22,75215-11-24 14:23:22 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:23:22,75215-11-24 14:23:22 DEBUG (SessionFactoryImpl.java:539 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named HQL queries
2015-11-24 14:23:22,75215-11-24 14:23:22 DEBUG (SessionFactoryImpl.java:559 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named SQL queries
2015-11-24 14:23:22,75215-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:22,75215-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'sessionFactory'
2015-11-24 14:23:22,75215-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:22,75215-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userOperateDao'
2015-11-24 14:23:22,76815-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:22,76815-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userOperateDao'
2015-11-24 14:23:22,76815-11-24 14:23:22 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userInterfaceDao'
2015-11-24 14:23:22,76815-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userInterfaceDao'
2015-11-24 14:23:22,76815-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userInterfaceDao' to allow for resolving potential circular references
2015-11-24 14:23:22,76815-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:23:22,76815-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userInterfaceDao'
2015-11-24 14:23:22,76815-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:22,76815-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userInterfaceDao'
2015-11-24 14:23:22,76815-11-24 14:23:22 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'noteNumRecordDao'
2015-11-24 14:23:22,76815-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'noteNumRecordDao'
2015-11-24 14:23:22,76815-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'noteNumRecordDao' to allow for resolving potential circular references
2015-11-24 14:23:22,78315-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:23:22,78315-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'noteNumRecordDao'
2015-11-24 14:23:22,78315-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:22,78315-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'noteNumRecordDao'
2015-11-24 14:23:22,78315-11-24 14:23:22 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'crashLogDao'
2015-11-24 14:23:22,78315-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'crashLogDao'
2015-11-24 14:23:22,78315-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'crashLogDao' to allow for resolving potential circular references
2015-11-24 14:23:22,83015-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:23:22,83015-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'crashLogDao'
2015-11-24 14:23:22,83015-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:22,83015-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'crashLogDao'
2015-11-24 14:23:22,83015-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'dataSource'
2015-11-24 14:23:22,83015-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:23:22,83015-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:23:22,83015-11-24 14:23:22 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:23:22,83015-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:23:22,83015-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2015-11-24 14:23:22,84615-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:23:22,84615-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:23:22,84615-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:23:22,84615-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:22,84615-11-24 14:23:22 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'transactionManager'
2015-11-24 14:23:22,84615-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'transactionManager'
2015-11-24 14:23:22,86115-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-11-24 14:23:22,86115-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:23:22,86115-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-11-24 14:23:22,87715-11-24 14:23:22  INFO (HibernateTransactionManager.java:415 LINE) HibernateTransactionManager.afterPropertiesSet -> Using DataSource [org.apache.commons.dbcp.BasicDataSource@aff1185] of Hibernate SessionFactory for HibernateTransactionManager
2015-11-24 14:23:22,87715-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:22,87715-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'transactionManager'
2015-11-24 14:23:22,87715-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:23:22,87715-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:23:22,87715-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:23:22,87715-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:23:22,87715-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:23:22,87715-11-24 14:23:22 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'operateService'
2015-11-24 14:23:22,87715-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'operateService'
2015-11-24 14:23:22,89315-11-24 14:23:22 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserOperateServiceImp]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:23:22,89315-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'operateService' to allow for resolving potential circular references
2015-11-24 14:23:22,89315-11-24 14:23:22 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'operateService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:23:22,90815-11-24 14:23:22 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'fileRemote'
2015-11-24 14:23:22,90815-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'fileRemote'
2015-11-24 14:23:22,90815-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'fileRemote' to allow for resolving potential circular references
2015-11-24 14:23:22,92415-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'fileRemote'
2015-11-24 14:23:22,97115-11-24 14:23:22 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static
2015-11-24 14:23:22,97115-11-24 14:23:22 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'fileRemote'
2015-11-24 14:23:22,98615-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:23:22,98615-11-24 14:23:22 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'operateService' to bean named 'userOperateDao'
2015-11-24 14:23:22,98615-11-24 14:23:22 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:22,98615-11-24 14:23:22 DEBUG (AbstractFallbackTransactionAttributeSource.java:106 LINE) AbstractFallbackTransactionAttributeSource.getTransactionAttribute -> Adding transactional method 'registAccount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '',-java.lang.Throwable
2015-11-24 14:23:22,98615-11-24 14:23:22 DEBUG (AbstractAutoProxyCreator.java:534 LINE) AbstractAutoProxyCreator.buildAdvisors -> Creating implicit proxy for bean 'operateService' with 0 common interceptors and 1 specific interceptors
2015-11-24 14:23:22,98615-11-24 14:23:22 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.fx.mobile.user.service.impl.UserOperateServiceImp@352d6363]
2015-11-24 14:23:23,00215-11-24 14:23:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'operateService'
2015-11-24 14:23:23,00215-11-24 14:23:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'SpringContextUtil'
2015-11-24 14:23:23,00215-11-24 14:23:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'SpringContextUtil'
2015-11-24 14:23:23,00215-11-24 14:23:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'SpringContextUtil' to allow for resolving potential circular references
2015-11-24 14:23:23,00215-11-24 14:23:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:23,00215-11-24 14:23:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'SpringContextUtil'
2015-11-24 14:23:23,00215-11-24 14:23:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'fileRemote'
2015-11-24 14:23:23,00215-11-24 14:23:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:23:23,00215-11-24 14:23:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userinterfaceService'
2015-11-24 14:23:23,00215-11-24 14:23:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userinterfaceService'
2015-11-24 14:23:23,00215-11-24 14:23:23 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserInterfaceServiceImpl]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:23:23,00215-11-24 14:23:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userinterfaceService' to allow for resolving potential circular references
2015-11-24 14:23:23,01815-11-24 14:23:23 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'userinterfaceService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:23:23,01815-11-24 14:23:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userInterfaceDao'
2015-11-24 14:23:23,01815-11-24 14:23:23 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'userinterfaceService' to bean named 'userInterfaceDao'
2015-11-24 14:23:23,01815-11-24 14:23:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:23,01815-11-24 14:23:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userinterfaceService'
2015-11-24 14:23:23,01815-11-24 14:23:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'urlProperties'
2015-11-24 14:23:23,01815-11-24 14:23:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'urlProperties'
2015-11-24 14:23:23,01815-11-24 14:23:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'urlProperties' to allow for resolving potential circular references
2015-11-24 14:23:23,01815-11-24 14:23:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:23,03315-11-24 14:23:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'urlProperties'
2015-11-24 14:23:23,03315-11-24 14:23:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:23:23,03315-11-24 14:23:23 DEBUG (AbstractApplicationContext.java:858 LINE) AbstractApplicationContext.initLifecycleProcessor -> Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@429d8a45]
2015-11-24 14:23:23,03315-11-24 14:23:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:23:23,03315-11-24 14:23:23 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-11-24 14:23:23,03315-11-24 14:23:23 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-11-24 14:23:23,03315-11-24 14:23:23 DEBUG (PropertySourcesPropertyResolver.java:93 LINE) PropertySourcesPropertyResolver.getProperty -> Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-11-24 14:23:23,03315-11-24 14:23:23 DEBUG (CacheAwareContextLoaderDelegate.java:93 LINE) CacheAwareContextLoaderDelegate.loadContext -> Storing ApplicationContext in cache under key [[MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:23:23,04915-11-24 14:23:23 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 14:23:23,04915-11-24 14:23:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:23:23,04915-11-24 14:23:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:23:23,06515-11-24 14:23:23 DEBUG (SessionFactoryUtils.java:322 LINE) SessionFactoryUtils.doGetSession -> Opening Hibernate Session
2015-11-24 14:23:23,17415-11-24 14:23:23 DEBUG (SessionImpl.java:265 LINE) SessionImpl.<init> -> opened session at timestamp: 5932426047754240
2015-11-24 14:23:23,22115-11-24 14:23:23 DEBUG (QueryTranslatorImpl.java:274 LINE) QueryTranslatorImpl.parse -> parse() - HQL: from com.fx.mobile.model.UserOperate where userName='芳草碧连天' || userPhoneNumb='芳草碧连天'  || userEmail='芳草碧连天'
2015-11-24 14:23:23,23715-11-24 14:23:23 DEBUG (QueryTranslatorImpl.java:293 LINE) QueryTranslatorImpl.showHqlAst -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'fx'
    |           |  |  \-[IDENT] Node: 'mobile'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'UserOperate'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[EQ] Node: '='
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'userName'
          |  |  \-[METHOD_CALL] Node: '||'
          |  |     +-[IDENT] Node: 'concat'
          |  |     \-[EXPR_LIST] Node: 'concatList'
          |  |        +-[QUOTED_STRING] Node: ''\u82b3\u8349\u78a7\u8fde\u5929''
          |  |        \-[IDENT] Node: 'userPhoneNumb'
          |  \-[METHOD_CALL] Node: '||'
          |     +-[IDENT] Node: 'concat'
          |     \-[EXPR_LIST] Node: 'concatList'
          |        +-[QUOTED_STRING] Node: ''\u82b3\u8349\u78a7\u8fde\u5929''
          |        \-[IDENT] Node: 'userEmail'
          \-[QUOTED_STRING] Node: ''\u82b3\u8349\u78a7\u8fde\u5929''

2015-11-24 14:23:23,23715-11-24 14:23:23 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:23:23,28415-11-24 14:23:23 DEBUG (HqlSqlBaseWalker.java:111 LINE) HqlSqlBaseWalker.beforeStatement -> select << begin [level=1, statement=select]
2015-11-24 14:23:23,30015-11-24 14:23:23 DEBUG (FromElement.java:157 LINE) FromElement.doInitialize -> FromClause{level=1} :  com.fx.mobile.model.UserOperate (no alias) -> useroperat0_
2015-11-24 14:23:23,30015-11-24 14:23:23 ERROR (ErrorCounter.java:56 LINE) ErrorCounter.reportError -> <AST>:1:77: unexpected AST node: =
2015-11-24 14:23:23,30015-11-24 14:23:23 DEBUG (ErrorCounter.java:51 LINE) ErrorCounter.reportError -> <AST>:1:77: unexpected AST node: =
<AST>:1:77: unexpected AST node: =
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4553)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:3944)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2047)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:831)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:617)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:301)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:244)
	at org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:256)
	at org.hibernate.hql.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:187)
	at org.hibernate.hql.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:138)
	at org.hibernate.engine.query.HQLQueryPlan.<init>(HQLQueryPlan.java:101)
	at org.hibernate.engine.query.HQLQueryPlan.<init>(HQLQueryPlan.java:80)
	at org.hibernate.engine.query.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:124)
	at org.hibernate.impl.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:156)
	at org.hibernate.impl.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:135)
	at org.hibernate.impl.SessionImpl.createQuery(SessionImpl.java:1770)
	at org.springframework.orm.hibernate3.HibernateTemplate$30.doInHibernate(HibernateTemplate.java:914)
	at org.springframework.orm.hibernate3.HibernateTemplate$30.doInHibernate(HibernateTemplate.java:912)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:406)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:912)
	at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:904)
	at com.fx.mobile.user.dao.impl.UserOperateDaoImp.findUserByName(UserOperateDaoImp.java:212)
	at com.fx.mobile.junit.UserOperateDaoImplTest.getListTest(UserOperateDaoImplTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
2015-11-24 14:23:23,31615-11-24 14:23:23 ERROR (ErrorCounter.java:56 LINE) ErrorCounter.reportError ->  right-hand operand of a binary operator was null
2015-11-24 14:23:23,31615-11-24 14:23:23 DEBUG (ErrorCounter.java:51 LINE) ErrorCounter.reportError ->  right-hand operand of a binary operator was null
 right-hand operand of a binary operator was null
	at org.hibernate.hql.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:55)
	at org.hibernate.hql.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1199)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4414)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2047)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:831)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:617)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:301)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:244)
	at org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:256)
	at org.hibernate.hql.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:187)
	at org.hibernate.hql.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:138)
	at org.hibernate.engine.query.HQLQueryPlan.<init>(HQLQueryPlan.java:101)
	at org.hibernate.engine.query.HQLQueryPlan.<init>(HQLQueryPlan.java:80)
	at org.hibernate.engine.query.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:124)
	at org.hibernate.impl.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:156)
	at org.hibernate.impl.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:135)
	at org.hibernate.impl.SessionImpl.createQuery(SessionImpl.java:1770)
	at org.springframework.orm.hibernate3.HibernateTemplate$30.doInHibernate(HibernateTemplate.java:914)
	at org.springframework.orm.hibernate3.HibernateTemplate$30.doInHibernate(HibernateTemplate.java:912)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:406)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:912)
	at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:904)
	at com.fx.mobile.user.dao.impl.UserOperateDaoImp.findUserByName(UserOperateDaoImp.java:212)
	at com.fx.mobile.junit.UserOperateDaoImplTest.getListTest(UserOperateDaoImplTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
2015-11-24 14:23:23,31615-11-24 14:23:23 DEBUG (HqlSqlBaseWalker.java:117 LINE) HqlSqlBaseWalker.beforeStatementCompletion -> select : finishing up [level=1, statement=select]
2015-11-24 14:23:23,31615-11-24 14:23:23 DEBUG (HqlSqlWalker.java:625 LINE) HqlSqlWalker.processQuery -> processQuery() :  ( SELECT ( FromClause{level=1} user_operate useroperat0_ ) ( where ( = '芳草碧连天' ) ) )
2015-11-24 14:23:23,31615-11-24 14:23:23 DEBUG (HqlSqlWalker.java:868 LINE) HqlSqlWalker.createSelectClauseFromFromClause -> Derived SELECT clause created.
2015-11-24 14:23:23,33115-11-24 14:23:23 DEBUG (JoinProcessor.java:179 LINE) JoinProcessor.addJoinNodes -> Using FROM fragment [user_operate useroperat0_]
2015-11-24 14:23:23,33115-11-24 14:23:23 DEBUG (HqlSqlBaseWalker.java:123 LINE) HqlSqlBaseWalker.afterStatementCompletion -> select >> end [level=1, statement=select]
2015-11-24 14:23:23,33115-11-24 14:23:23 DEBUG (QueryTranslatorImpl.java:260 LINE) QueryTranslatorImpl.analyze -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_operate)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'useroperat0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}}
    |  \-[SQL_TOKEN] SqlFragment: 'useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[useroperat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_operate useroperat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          \-[QUOTED_STRING] LiteralNode: ''\u82b3\u8349\u78a7\u8fde\u5929''

2015-11-24 14:23:23,33115-11-24 14:23:23 DEBUG (SessionFactoryUtils.java:800 LINE) SessionFactoryUtils.closeSession -> Closing Hibernate Session
2015-11-24 14:23:23,33115-11-24 14:23:23 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@7dac14dd testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@2c8df9a0, testMethod = getListTest@UserOperateDaoImplTest, testException = org.springframework.orm.hibernate3.HibernateQueryException: unexpected AST node: = near line 1, column 77 [from com.fx.mobile.model.UserOperate where userName='芳草碧连天' || userPhoneNumb='芳草碧连天'  || userEmail='芳草碧连天']; nested exception is org.hibernate.hql.ast.QuerySyntaxException: unexpected AST node: = near line 1, column 77 [from com.fx.mobile.model.UserOperate where userName='芳草碧连天' || userPhoneNumb='芳草碧连天'  || userEmail='芳草碧连天'], mergedContextConfiguration = [MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 14:23:23,36215-11-24 14:23:23 DEBUG (DirtiesContextTestExecutionListener.java:138 LINE) DirtiesContextTestExecutionListener.afterTestClass -> After test class: context [[TestContext@7dac14dd testClass = UserOperateDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1cff8e3a testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
2015-11-24 14:23:23,36215-11-24 14:23:23  INFO (AbstractApplicationContext.java:1042 LINE) AbstractApplicationContext.doClose -> Closing org.springframework.context.support.GenericApplicationContext@683bf9ff: startup date [Tue Nov 24 14:23:19 CST 2015]; root of context hierarchy
2015-11-24 14:23:23,36215-11-24 14:23:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:23:23,36215-11-24 14:23:23  INFO (DefaultSingletonBeanRegistry.java:444 LINE) DefaultSingletonBeanRegistry.destroySingletons -> Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@8488831: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:23:23,36215-11-24 14:23:23 DEBUG (DefaultSingletonBeanRegistry.java:500 LINE) DefaultSingletonBeanRegistry.destroyBean -> Retrieved dependent beans for bean 'userOperateDao': [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:23:23,36215-11-24 14:23:23 DEBUG (DisposableBeanAdapter.java:219 LINE) DisposableBeanAdapter.destroy -> Invoking destroy() on bean with name 'sessionFactory'
2015-11-24 14:23:23,36215-11-24 14:23:23  INFO (AbstractSessionFactoryBean.java:223 LINE) AbstractSessionFactoryBean.destroy -> Closing Hibernate SessionFactory
2015-11-24 14:23:23,36215-11-24 14:23:23  INFO (SessionFactoryImpl.java:927 LINE) SessionFactoryImpl.close -> closing
2015-11-24 14:23:23,37815-11-24 14:23:23 DEBUG (DisposableBeanAdapter.java:295 LINE) DisposableBeanAdapter.invokeCustomDestroyMethod -> Invoking destroy method 'close' on bean with name 'dataSource'
2015-11-24 14:24:59,79415-11-24 14:24:59 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 14:24:59,87215-11-24 14:24:59 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@d1735f5 declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 14:24:59,88715-11-24 14:24:59 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:24:59,88715-11-24 14:24:59 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 14:24:59,90315-11-24 14:24:59 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:24:59,90315-11-24 14:24:59 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:24:59,91915-11-24 14:24:59 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:24:59,91915-11-24 14:24:59 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:24:59,91915-11-24 14:24:59 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:24:59,91915-11-24 14:24:59 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:24:59,91915-11-24 14:24:59 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:24:59,93415-11-24 14:24:59 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:24:59,93415-11-24 14:24:59 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:24:59,93415-11-24 14:24:59 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:24:59,93415-11-24 14:24:59 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:24:59,93415-11-24 14:24:59 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:24:59,93415-11-24 14:24:59 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@4dd290b5 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@3b1a82fd, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 14:24:59,93415-11-24 14:24:59 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 14:24:59,93415-11-24 14:24:59 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:25:00,05915-11-24 14:25:00 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:25:00,05915-11-24 14:25:00 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:25:00,05915-11-24 14:25:00 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:25:00,05915-11-24 14:25:00 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:25:00,05915-11-24 14:25:00 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:25:00,05915-11-24 14:25:00 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:25:00,05915-11-24 14:25:00 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:25:00,05915-11-24 14:25:00 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:25:00,07515-11-24 14:25:00 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 14:25:00,07515-11-24 14:25:00 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 14:25:00,07515-11-24 14:25:00 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 14:25:00,07515-11-24 14:25:00  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 14:25:00,09015-11-24 14:25:00 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:25:00,10615-11-24 14:25:00 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 14:25:00,12215-11-24 14:25:00 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 14:25:00,12215-11-24 14:25:00 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:25:00,16915-11-24 14:25:00 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:25:00,18415-11-24 14:25:00  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 14:25:00,18415-11-24 14:25:00 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:25:00,18415-11-24 14:25:00 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:25:00,24915-11-24 14:25:00 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:25:00,24915-11-24 14:25:00  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 14:25:00,24915-11-24 14:25:00 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:25:00,26415-11-24 14:25:00 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:25:00,29615-11-24 14:25:00 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 14:25:00,29615-11-24 14:25:00 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:25:00,31115-11-24 14:25:00 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:25:00,31115-11-24 14:25:00 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 14:25:00,34215-11-24 14:25:00  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 14:25:00,34215-11-24 14:25:00 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:25:00,34215-11-24 14:25:00 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:25:00,35815-11-24 14:25:00 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 14:25:00,37415-11-24 14:25:00 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:25:00,37415-11-24 14:25:00 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:25:00,40515-11-24 14:25:00  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 14:25:00,40515-11-24 14:25:00  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 14:25:00,43615-11-24 14:25:00 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 14:25:00,43615-11-24 14:25:00 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:25:00,43615-11-24 14:25:00 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:25:00,43615-11-24 14:25:00 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 14:25:00,46715-11-24 14:25:00 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 14:25:00,46715-11-24 14:25:00 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 14:25:00,46715-11-24 14:25:00 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 14:25:00,48315-11-24 14:25:00 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 14:25:00,48315-11-24 14:25:00  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 14:25:00,48315-11-24 14:25:00  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 14:25:00,48315-11-24 14:25:00 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:25:00,49915-11-24 14:25:00 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:25:00,51415-11-24 14:25:00 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:25:00,51415-11-24 14:25:00 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 14:25:00,51415-11-24 14:25:00  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@4ad9cb27: startup date [Tue Nov 24 14:25:00 CST 2015]; root of context hierarchy
2015-11-24 14:25:00,51415-11-24 14:25:00 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@4ad9cb27: org.springframework.beans.factory.support.DefaultListableBeanFactory@25303e3b: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 14:25:00,54615-11-24 14:25:00 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:25:00,54615-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:25:00,56115-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:25:00,56115-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:25:00,68615-11-24 14:25:00 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:25:00,68615-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:25:00,68615-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 14:25:00,73315-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:25:00,73315-11-24 14:25:00  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 14:25:00,74915-11-24 14:25:00  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 14:25:00,74915-11-24 14:25:00  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 14:25:00,79615-11-24 14:25:00 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:25:00,79615-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:25:00,79615-11-24 14:25:00  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 14:25:00,79615-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:25:00,79615-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:25:00,79615-11-24 14:25:00 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:25:00,79615-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:25:00,79615-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:25:00,79615-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:25:00,79615-11-24 14:25:00 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:25:00,79615-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:25:00,82715-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:25:00,82715-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:25:00,82715-11-24 14:25:00 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:25:00,84215-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:25:00,84215-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:25:00,84215-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:25:00,84215-11-24 14:25:00 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:25:00,84215-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:25:00,84215-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 14:25:00,84215-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:25:00,84215-11-24 14:25:00 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:25:00,84215-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:25:00,84215-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 14:25:00,87415-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:25:00,87415-11-24 14:25:00 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2f142f76]
2015-11-24 14:25:00,87415-11-24 14:25:00 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@157709f9]
2015-11-24 14:25:00,88915-11-24 14:25:00  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@25303e3b: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:25:00,88915-11-24 14:25:00 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 14:25:00,88915-11-24 14:25:00 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 14:25:01,01415-11-24 14:25:01 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 14:25:01,03015-11-24 14:25:01 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 14:25:01,03015-11-24 14:25:01 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 14:25:01,04615-11-24 14:25:01 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 14:25:01,06115-11-24 14:25:01 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 14:25:01,06115-11-24 14:25:01 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 14:25:01,15515-11-24 14:25:01 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:25:01,17115-11-24 14:25:01 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:25:01,18615-11-24 14:25:01 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:25:01,18615-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:25:01,18615-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:25:01,18615-11-24 14:25:01 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:25:01,23415-11-24 14:25:01 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:01,23415-11-24 14:25:01 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:01,23415-11-24 14:25:01 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 14:25:01,29715-11-24 14:25:01 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:25:01,29715-11-24 14:25:01 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:25:01,29715-11-24 14:25:01 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 14:25:01,29715-11-24 14:25:01 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:25:01,29715-11-24 14:25:01 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:25:01,31215-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:25:01,32815-11-24 14:25:01 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:25:01,32815-11-24 14:25:01 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:25:01,32815-11-24 14:25:01 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 14:25:01,42215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@2051acec
2015-11-24 14:25:01,42215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@2051acec
2015-11-24 14:25:01,42215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2051acec
2015-11-24 14:25:01,42215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@322d115e
2015-11-24 14:25:01,43715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f51e779
2015-11-24 14:25:01,43715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@74cee5ed
2015-11-24 14:25:01,43715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@11b5e706
2015-11-24 14:25:01,43715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@11b5e706
2015-11-24 14:25:01,43715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@11b5e706
2015-11-24 14:25:01,43715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@47ed5550
2015-11-24 14:25:01,43715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@47ed5550
2015-11-24 14:25:01,43715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47ed5550
2015-11-24 14:25:01,45315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@355971ce
2015-11-24 14:25:01,45315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@355971ce
2015-11-24 14:25:01,45315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@355971ce
2015-11-24 14:25:01,45315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@4389f6ad
2015-11-24 14:25:01,45315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@4389f6ad
2015-11-24 14:25:01,45315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4389f6ad
2015-11-24 14:25:01,45315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4fbd89c9
2015-11-24 14:25:01,45315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4fbd89c9
2015-11-24 14:25:01,45315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fbd89c9
2015-11-24 14:25:01,45315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1e60a696
2015-11-24 14:25:01,45315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1e60a696
2015-11-24 14:25:01,45315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1e60a696
2015-11-24 14:25:01,45315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@1bc0e7b8
2015-11-24 14:25:01,45315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@1bc0e7b8
2015-11-24 14:25:01,53115-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1bc0e7b8
2015-11-24 14:25:01,53115-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4caa1b37
2015-11-24 14:25:01,53115-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4caa1b37
2015-11-24 14:25:01,53115-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@12efdb85
2015-11-24 14:25:01,53115-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@12efdb85
2015-11-24 14:25:01,53115-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@3c564b26
2015-11-24 14:25:01,53115-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@3c564b26
2015-11-24 14:25:01,54715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@64ae8c15
2015-11-24 14:25:01,54715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@64ae8c15
2015-11-24 14:25:01,54715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@74eb711e
2015-11-24 14:25:01,54715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@74eb711e
2015-11-24 14:25:01,54715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@65c98bf3
2015-11-24 14:25:01,54715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@65c98bf3
2015-11-24 14:25:01,54715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@56ff3d
2015-11-24 14:25:01,54715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56ff3d
2015-11-24 14:25:01,54715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56ff3d
2015-11-24 14:25:01,54715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1bde4427
2015-11-24 14:25:01,54715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@1154d30d
2015-11-24 14:25:01,54715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1154d30d
2015-11-24 14:25:01,54715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1154d30d
2015-11-24 14:25:01,54715-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3f32f5c
2015-11-24 14:25:01,56215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@320e61b6
2015-11-24 14:25:01,56215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@320e61b6
2015-11-24 14:25:01,56215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@4f94aaa1
2015-11-24 14:25:01,56215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f94aaa1
2015-11-24 14:25:01,56215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@5117c3e6
2015-11-24 14:25:01,56215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5117c3e6
2015-11-24 14:25:01,56215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@54d03269
2015-11-24 14:25:01,56215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54d03269
2015-11-24 14:25:01,56215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@323283f6
2015-11-24 14:25:01,56215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@323283f6
2015-11-24 14:25:01,56215-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39fc57bd
2015-11-24 14:25:01,57815-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@460367c3
2015-11-24 14:25:01,57815-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@57d47ef4
2015-11-24 14:25:01,57815-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@57d47ef4
2015-11-24 14:25:01,57815-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@57d47ef4
2015-11-24 14:25:01,57815-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ad420ad
2015-11-24 14:25:01,57815-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ad420ad
2015-11-24 14:25:01,57815-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ad420ad
2015-11-24 14:25:01,57815-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@63c7b5d1
2015-11-24 14:25:01,57815-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@5bcc83fe
2015-11-24 14:25:01,57815-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@5bcc83fe
2015-11-24 14:25:01,57815-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@5bcc83fe
2015-11-24 14:25:01,57815-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31245703
2015-11-24 14:25:01,57815-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31245703
2015-11-24 14:25:01,57815-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31245703
2015-11-24 14:25:01,59315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@2a24f902
2015-11-24 14:25:01,59315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@332933cb
2015-11-24 14:25:01,59315-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@332933cb
2015-11-24 14:25:01,60915-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5f05c0eb
2015-11-24 14:25:01,60915-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@3e8a0821
2015-11-24 14:25:01,60915-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@5771c6d6
2015-11-24 14:25:01,60915-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5771c6d6
2015-11-24 14:25:01,60915-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3fabb84d
2015-11-24 14:25:01,60915-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1bf5df6a
2015-11-24 14:25:01,60915-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@6b9b9f57
2015-11-24 14:25:01,62515-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@1567ca08
2015-11-24 14:25:01,62515-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@43d9b738
2015-11-24 14:25:01,62515-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43d9b738
2015-11-24 14:25:01,62515-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@22dd6b21
2015-11-24 14:25:01,62515-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76a45568
2015-11-24 14:25:01,62515-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1ee35bb2
2015-11-24 14:25:01,62515-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@609912f5
2015-11-24 14:25:01,62515-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61abc45e
2015-11-24 14:25:01,62515-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53e9296a
2015-11-24 14:25:01,62515-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@709e192f
2015-11-24 14:25:01,62515-11-24 14:25:01 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b87966c
2015-11-24 14:25:01,65615-11-24 14:25:01  INFO (Version.java:37 LINE) Version.<clinit> -> Hibernate Commons Annotations 3.2.0.Final
2015-11-24 14:25:01,67215-11-24 14:25:01  INFO (Environment.java:603 LINE) Environment.<clinit> -> Hibernate 3.6.8.Final
2015-11-24 14:25:01,67215-11-24 14:25:01  INFO (Environment.java:636 LINE) Environment.<clinit> -> hibernate.properties not found
2015-11-24 14:25:01,67215-11-24 14:25:01  INFO (Environment.java:814 LINE) Environment.buildBytecodeProvider -> Bytecode provider name : javassist
2015-11-24 14:25:01,67215-11-24 14:25:01  INFO (Environment.java:695 LINE) Environment.<clinit> -> using JDK 1.4 java.sql.Timestamp handling
2015-11-24 14:25:01,73415-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2015-11-24 14:25:01,73415-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2015-11-24 14:25:01,75015-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:25:01,75015-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:25:01,75015-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2015-11-24 14:25:01,75015-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2015-11-24 14:25:01,75015-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2015-11-24 14:25:01,75015-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2015-11-24 14:25:01,75015-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2015-11-24 14:25:01,75015-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2015-11-24 14:25:01,75015-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2015-11-24 14:25:01,75015-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2015-11-24 14:25:01,75015-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2015-11-24 14:25:01,75015-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-11-24 14:25:01,75015-11-24 14:25:01 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2015-11-24 14:25:01,85915-11-24 14:25:01 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:25:01,85915-11-24 14:25:01  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:25:01,85915-11-24 14:25:01 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:25:01,85915-11-24 14:25:01 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:25:01,96815-11-24 14:25:01 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:25:01,96815-11-24 14:25:01  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:25:01,96815-11-24 14:25:01 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:25:01,96815-11-24 14:25:01 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:25:02,09315-11-24 14:25:02 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:25:02,09315-11-24 14:25:02  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:25:02,09315-11-24 14:25:02 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:25:02,09315-11-24 14:25:02 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:25:02,17215-11-24 14:25:02 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:25:02,20315-11-24 14:25:02  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.UserOperate -> user_operate
2015-11-24 14:25:02,20315-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userName -> userName
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPassword -> userPassword
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: phicommId -> phicomm_id
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userEmail -> userEmail
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPhoneNumb -> user_PhoneNumb
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userType -> userType
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: isChecked -> isChecked
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nickname -> nickname
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: figureurl -> figureurl
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: sex -> sex
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: province -> province
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: city -> city
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: birthday -> birthday
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openId -> open_id
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openKey -> open_key
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: accessToken -> access_token
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: expireseIn -> expirese_in
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: devinfo -> devinfo
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userinfo -> userinfo
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqq -> openqq
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqqinfo -> openqqinfo
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensina -> opensina
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensinainfo -> opensinainfo
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: createTime -> createTime
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: updateTime -> updateTime
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: lastLoginTime -> lastLoginTime
2015-11-24 14:25:02,26615-11-24 14:25:02  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.NoteNumbRecord -> note_numb_record
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nodeNumb -> node_numb
2015-11-24 14:25:02,26615-11-24 14:25:02  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.CrashLog -> crash_log
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: url -> url
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: describes -> describes
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: addDate -> addDate
2015-11-24 14:25:02,26615-11-24 14:25:02 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:25:02,28215-11-24 14:25:02 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:25:02,28215-11-24 14:25:02 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:25:02,28215-11-24 14:25:02 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:25:02,28215-11-24 14:25:02 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:25:02,28215-11-24 14:25:02 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:25:02,28215-11-24 14:25:02 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:25:02,28215-11-24 14:25:02 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:25:02,28215-11-24 14:25:02  INFO (Configuration.java:1676 LINE) Configuration.applyHibernateValidatorLegacyConstraintsOnDDL -> Hibernate Validator not found: ignoring
2015-11-24 14:25:02,36015-11-24 14:25:02 DEBUG (LoggerFactory.java:29 LINE) LoggerFactory.make -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-11-24 14:25:02,36015-11-24 14:25:02  INFO (Version.java:27 LINE) Version.<clinit> -> HV000001: Hibernate Validator 5.0.0.Final
2015-11-24 14:25:02,42315-11-24 14:25:02 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:25:02,43815-11-24 14:25:02 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:25:02,50115-11-24 14:25:02 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:25:02,76615-11-24 14:25:02  INFO (LocalSessionFactoryBean.java:780 LINE) LocalSessionFactoryBean.buildSessionFactory -> Building new Hibernate SessionFactory
2015-11-24 14:25:02,76615-11-24 14:25:02 DEBUG (Configuration.java:1854 LINE) Configuration.buildSessionFactory -> Preparing to build session factory with filters : {}
2015-11-24 14:25:02,76615-11-24 14:25:02 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:25:02,76615-11-24 14:25:02 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:25:02,76615-11-24 14:25:02 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:25:02,76615-11-24 14:25:02 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:25:02,76615-11-24 14:25:02 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:25:02,76615-11-24 14:25:02 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:25:02,76615-11-24 14:25:02 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:25:02,76615-11-24 14:25:02 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:25:02,76615-11-24 14:25:02 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:25:02,76615-11-24 14:25:02 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:25:02,76615-11-24 14:25:02 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:25:02,76615-11-24 14:25:02 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:25:02,79815-11-24 14:25:02 DEBUG (Configuration.java:1896 LINE) Configuration.enableLegacyHibernateValidator -> Legacy Validator not present in classpath, ignoring event listener registration
2015-11-24 14:25:02,79815-11-24 14:25:02 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:25:02,79815-11-24 14:25:02 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:25:02,79815-11-24 14:25:02 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:25:02,84415-11-24 14:25:02 DEBUG (HibernateSearchEventListenerRegister.java:231 LINE) HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener -> Search not present in classpath, ignoring event listener registration.
2015-11-24 14:25:02,84415-11-24 14:25:02  INFO (HibernateSearchEventListenerRegister.java:75 LINE) HibernateSearchEventListenerRegister.enableHibernateSearch -> Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2015-11-24 14:25:02,86015-11-24 14:25:02  INFO (ConnectionProviderFactory.java:173 LINE) ConnectionProviderFactory.initializeConnectionProviderFromConfig -> Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2015-11-24 14:25:03,21915-11-24 14:25:03  INFO (Dialect.java:135 LINE) Dialect.<init> -> Using dialect: org.hibernate.dialect.MySQLDialect
2015-11-24 14:25:03,23615-11-24 14:25:03  INFO (SettingsFactory.java:126 LINE) SettingsFactory.buildSettings -> Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-11-24 14:25:03,23615-11-24 14:25:03  INFO (SettingsFactory.java:132 LINE) SettingsFactory.buildSettings -> Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.25 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2015-11-24 14:25:03,23615-11-24 14:25:03  INFO (TransactionFactoryFactory.java:65 LINE) TransactionFactoryFactory.buildTransactionFactory -> Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (TransactionManagerLookupFactory.java:83 LINE) TransactionManagerLookupFactory.getTransactionManagerLookup -> No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:179 LINE) SettingsFactory.buildSettings -> Automatic flush during beforeCompletion(): disabled
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:183 LINE) SettingsFactory.buildSettings -> Automatic session close at end of transaction: disabled
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:190 LINE) SettingsFactory.buildSettings -> JDBC batch size: 25
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:193 LINE) SettingsFactory.buildSettings -> JDBC batch updates for versioned data: disabled
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:198 LINE) SettingsFactory.buildSettings -> Scrollable result sets: enabled
2015-11-24 14:25:03,25215-11-24 14:25:03 DEBUG (SettingsFactory.java:202 LINE) SettingsFactory.buildSettings -> Wrap result sets: disabled
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:206 LINE) SettingsFactory.buildSettings -> JDBC3 getGeneratedKeys(): enabled
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:210 LINE) SettingsFactory.buildSettings -> JDBC result set fetch size: 50
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:214 LINE) SettingsFactory.buildSettings -> Connection release mode: after_transaction
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:238 LINE) SettingsFactory.buildSettings -> Maximum outer join fetch depth: 2
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:241 LINE) SettingsFactory.buildSettings -> Default batch fetch size: 1
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:245 LINE) SettingsFactory.buildSettings -> Generate SQL with comments: disabled
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:249 LINE) SettingsFactory.buildSettings -> Order SQL updates by primary key: disabled
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:253 LINE) SettingsFactory.buildSettings -> Order SQL inserts for batching: disabled
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:431 LINE) SettingsFactory.createQueryTranslatorFactory -> Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (ASTQueryTranslatorFactory.java:47 LINE) ASTQueryTranslatorFactory.<init> -> Using ASTQueryTranslatorFactory
2015-11-24 14:25:03,25215-11-24 14:25:03  INFO (SettingsFactory.java:261 LINE) SettingsFactory.buildSettings -> Query language substitutions: {false='N', true='Y'}
2015-11-24 14:25:03,26715-11-24 14:25:03  INFO (SettingsFactory.java:266 LINE) SettingsFactory.buildSettings -> JPA-QL strict compliance: disabled
2015-11-24 14:25:03,26715-11-24 14:25:03  INFO (SettingsFactory.java:271 LINE) SettingsFactory.buildSettings -> Second-level cache: enabled
2015-11-24 14:25:03,26715-11-24 14:25:03  INFO (SettingsFactory.java:275 LINE) SettingsFactory.buildSettings -> Query cache: enabled
2015-11-24 14:25:03,26715-11-24 14:25:03  INFO (SettingsFactory.java:406 LINE) SettingsFactory.createRegionFactory -> Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
2015-11-24 14:25:03,26715-11-24 14:25:03  INFO (RegionFactoryCacheProviderBridge.java:61 LINE) RegionFactoryCacheProviderBridge.<init> -> Cache provider: org.hibernate.cache.EhCacheProvider
2015-11-24 14:25:03,26715-11-24 14:25:03  INFO (SettingsFactory.java:285 LINE) SettingsFactory.buildSettings -> Optimize cache for minimal puts: disabled
2015-11-24 14:25:03,26715-11-24 14:25:03  INFO (SettingsFactory.java:294 LINE) SettingsFactory.buildSettings -> Structured second-level cache entries: disabled
2015-11-24 14:25:03,26715-11-24 14:25:03  INFO (SettingsFactory.java:385 LINE) SettingsFactory.createQueryCacheFactory -> Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
2015-11-24 14:25:03,28315-11-24 14:25:03  INFO (SettingsFactory.java:314 LINE) SettingsFactory.buildSettings -> Echoing all SQL to stdout
2015-11-24 14:25:03,28315-11-24 14:25:03  INFO (SettingsFactory.java:323 LINE) SettingsFactory.buildSettings -> Statistics: disabled
2015-11-24 14:25:03,28315-11-24 14:25:03  INFO (SettingsFactory.java:327 LINE) SettingsFactory.buildSettings -> Deleted entity synthetic identifier rollback: disabled
2015-11-24 14:25:03,28315-11-24 14:25:03  INFO (SettingsFactory.java:343 LINE) SettingsFactory.buildSettings -> Default entity-mode: pojo
2015-11-24 14:25:03,28315-11-24 14:25:03  INFO (SettingsFactory.java:347 LINE) SettingsFactory.buildSettings -> Named query checking : enabled
2015-11-24 14:25:03,28315-11-24 14:25:03  INFO (SettingsFactory.java:351 LINE) SettingsFactory.buildSettings -> Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2015-11-24 14:25:03,31415-11-24 14:25:03  INFO (SessionFactoryImpl.java:202 LINE) SessionFactoryImpl.<init> -> building session factory
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (SessionFactoryImpl.java:206 LINE) SessionFactoryImpl.<init> -> Statistics initialized [enabled=false]}
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@2051acec
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@2051acec
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2051acec
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@322d115e
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f51e779
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@74cee5ed
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@11b5e706
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@11b5e706
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@11b5e706
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@47ed5550
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@47ed5550
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47ed5550
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@355971ce
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@355971ce
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@355971ce
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@4389f6ad
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@4389f6ad
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4389f6ad
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4fbd89c9
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4fbd89c9
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fbd89c9
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1e60a696
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1e60a696
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1e60a696
2015-11-24 14:25:03,37715-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@1bc0e7b8
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@1bc0e7b8
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1bc0e7b8
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4caa1b37
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4caa1b37
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@12efdb85
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@12efdb85
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@3c564b26
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@3c564b26
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@64ae8c15
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@64ae8c15
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@74eb711e
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@74eb711e
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@65c98bf3
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@65c98bf3
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@56ff3d
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56ff3d
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56ff3d
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1bde4427
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@1154d30d
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1154d30d
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1154d30d
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3f32f5c
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@320e61b6
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@320e61b6
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@4f94aaa1
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f94aaa1
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@5117c3e6
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5117c3e6
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@54d03269
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54d03269
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@323283f6
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@323283f6
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39fc57bd
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@460367c3
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@57d47ef4
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@57d47ef4
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@57d47ef4
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ad420ad
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ad420ad
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ad420ad
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@63c7b5d1
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@5bcc83fe
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@5bcc83fe
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@5bcc83fe
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31245703
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31245703
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31245703
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@2a24f902
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@332933cb
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@332933cb
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5f05c0eb
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@3e8a0821
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@5771c6d6
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5771c6d6
2015-11-24 14:25:03,39215-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3fabb84d
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1bf5df6a
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@6b9b9f57
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@1567ca08
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@43d9b738
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43d9b738
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c64e673
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6455b768
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@377c404e
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3e61dd57
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b0a9ac0
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6535b8e9
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@29fefce8
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@238df8e2
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@78214ca6
2015-11-24 14:25:03,40815-11-24 14:25:03  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [clob] overrides previous : org.hibernate.type.ClobType@5771c6d6
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@78214ca6
2015-11-24 14:25:03,40815-11-24 14:25:03  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@5771c6d6
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@1928dc07
2015-11-24 14:25:03,40815-11-24 14:25:03  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@6b9b9f57
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@522f63e7
2015-11-24 14:25:03,40815-11-24 14:25:03  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@3fabb84d
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@2547fcd8
2015-11-24 14:25:03,40815-11-24 14:25:03  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@1bf5df6a
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7e762d0
2015-11-24 14:25:03,40815-11-24 14:25:03  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@5f05c0eb
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@680849bd
2015-11-24 14:25:03,40815-11-24 14:25:03  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@3e8a0821
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@61f2bf35
2015-11-24 14:25:03,40815-11-24 14:25:03  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [blob] overrides previous : org.hibernate.type.BlobType@332933cb
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@61f2bf35
2015-11-24 14:25:03,40815-11-24 14:25:03  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@332933cb
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (SessionFactoryImpl.java:228 LINE) SessionFactoryImpl.<init> -> Session factory constructed with filter configurations : {}
2015-11-24 14:25:03,40815-11-24 14:25:03 DEBUG (SessionFactoryImpl.java:232 LINE) SessionFactoryImpl.<init> -> instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, sun.boot.library.path=E:\JDK1.7\bin, java.vm.version=23.7-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.cache.use_query_cache=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\workspace\mobile-user, java.runtime.version=1.7.0_17-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=E:\JDK1.7\lib\endorsed, os.arch=amd64, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\gqy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, hibernate.cache.use_second_level_cache=true, sun.jnu.encoding=GBK, hibernate.jdbc.fetch_size=50, java.library.path=E:\JDK1.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\ProgramData\Lenovo\ReadyApps;E:\JDK\bin;E:\JDK\jre\bin;E:\Go\bin;E:\winscp\WinSCP\;E:\maven\apache-maven-3.2.3\bin;C:\Program Files (x86)\DBank\ClickUp;C:\Program Files (x86)\DBank\ClickUp;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\gqy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=after_transaction, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=gqy, java.class.path=G:\workspace\mobile-user\target\test-classes;G:\workspace\mobile-user\target\classes;H:\Respositories2\repository\com\alibaba\fastjson\1.2.4\fastjson-1.2.4.jar;H:\Respositories2\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;H:\Respositories2\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;H:\Respositories2\repository\io\netty\netty\4.0.0.Alpha8\netty-4.0.0.Alpha8.jar;H:\Respositories2\repository\jstl\jstl\1.2\jstl-1.2.jar;H:\Respositories2\repository\org\springframework\spring-aop\3.2.0.RELEASE\spring-aop-3.2.0.RELEASE.jar;H:\Respositories2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;H:\Respositories2\repository\org\springframework\spring-beans\3.2.0.RELEASE\spring-beans-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context\3.2.0.RELEASE\spring-context-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-expression\3.2.0.RELEASE\spring-expression-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context-support\3.2.0.RELEASE\spring-context-support-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-core\3.2.0.RELEASE\spring-core-3.2.0.RELEASE.jar;H:\Respositories2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;H:\Respositories2\repository\org\springframework\spring-jdbc\3.2.0.RELEASE\spring-jdbc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-orm\3.2.0.RELEASE\spring-orm-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-tx\3.2.0.RELEASE\spring-tx-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-web\3.2.0.RELEASE\spring-web-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-webmvc\3.2.0.RELEASE\spring-webmvc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\amqp\spring-amqp\1.2.0.RELEASE\spring-amqp-1.2.0.RELEASE.jar;H:\Respositories2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;H:\Respositories2\repository\com\fasterxml\jackson\core\jackson-core\2.1.0\jackson-core-2.1.0.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.13\jackson-jaxrs-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-xc\1.9.13\jackson-xc-1.9.13.jar;H:\Respositories2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;H:\Respositories2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;H:\Respositories2\repository\mysql\mysql-connector-java\5.1.25\mysql-connector-java-5.1.25.jar;H:\Respositories2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;H:\Respositories2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;H:\Respositories2\repository\org\aspectj\aspectjweaver\1.6.4\aspectjweaver-1.6.4.jar;H:\Respositories2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;H:\Respositories2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;H:\Respositories2\repository\commons-beanutils\commons-beanutils\1.9.0\commons-beanutils-1.9.0.jar;H:\Respositories2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;H:\Respositories2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;H:\Respositories2\repository\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;H:\Respositories2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;H:\Respositories2\repository\org\mybatis\mybatis-spring\1.2.0\mybatis-spring-1.2.0.jar;H:\Respositories2\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;H:\Respositories2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar;H:\Respositories2\repository\org\json\json\20090211\json-20090211.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-lgpl\1.8.1\jackson-core-lgpl-1.8.1.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-lgpl\1.8.1\jackson-mapper-lgpl-1.8.1.jar;H:\Respositories2\repository\org\freemarker\freemarker\2.3.16\freemarker-2.3.16.jar;H:\Respositories2\repository\opensymphony\sitemesh\2.4.2\sitemesh-2.4.2.jar;H:\Respositories2\repository\org\testng\testng\5.9\testng-5.9-jdk15.jar;H:\Respositories2\repository\junit\junit\4.7\junit-4.7.jar;H:\Respositories2\repository\cglib\cglib-asm\1.0\cglib-asm-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-core\1.0\jxls-core-1.0.jar;H:\Respositories2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;H:\Respositories2\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml\3.7\poi-ooxml-3.7.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml-schemas\3.7\poi-ooxml-schemas-3.7.jar;H:\Respositories2\repository\org\apache\xmlbeans\xmlbeans\2.3.0\xmlbeans-2.3.0.jar;H:\Respositories2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;H:\Respositories2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-reader\1.0\jxls-reader-1.0.jar;H:\Respositories2\repository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient\4.3.2\httpclient-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient-cache\4.3.2\httpclient-cache-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpmime\4.3.2\httpmime-4.3.2.jar;H:\Respositories2\repository\org\quartz-scheduler\quartz\1.8.6\quartz-1.8.6.jar;H:\Respositories2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;H:\Respositories2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;H:\Respositories2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;H:\Respositories2\repository\net\coobird\thumbnailator\0.4.7\thumbnailator-0.4.7.jar;H:\Respositories2\repository\jcifs\jcifs\1.3.17\jcifs-1.3.17.jar;H:\Respositories2\repository\org\apache\poi\poi\3.10.1\poi-3.10.1.jar;H:\Respositories2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;H:\Respositories2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;H:\Respositories2\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;H:\Respositories2\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;H:\Respositories2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;H:\Respositories2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;H:\Respositories2\repository\net\sf\supercsv\super-csv\2.2.0\super-csv-2.2.0.jar;H:\Respositories2\repository\org\bouncycastle\bcprov-jdk16\1.45\bcprov-jdk16-1.45.jar;H:\Respositories2\repository\jdom\jdom\1.0\jdom-1.0.jar;H:\Respositories2\repository\com\belerweb\pinyin4j\2.5.0\pinyin4j-2.5.0.jar;H:\Respositories2\repository\org\glassfish\jersey\ext\jersey-spring3\2.4.1\jersey-spring3-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-server\2.4.1\jersey-server-2.4.1.jar;H:\Respositories2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-api\2.2.0-b21\hk2-api-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\javax.inject\2.2.0-b21\javax.inject-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-locator\2.2.0-b21\hk2-locator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\asm-all-repackaged\2.2.0-b21\asm-all-repackaged-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\cglib\2.2.0-b21\cglib-2.2.0-b21.jar;H:\Respositories2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;H:\Respositories2\repository\org\glassfish\jersey\containers\jersey-container-servlet-core\2.4.1\jersey-container-servlet-core-2.4.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2\2.2.0-b21\hk2-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-utils\2.2.0-b21\hk2-utils-2.2.0-b21.jar;H:\Respositories2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;H:\Respositories2\repository\org\glassfish\hk2\config-types\2.2.0-b21\config-types-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\core\2.2.0-b21\core-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-config\2.2.0-b21\hk2-config-2.2.0-b21.jar;H:\Respositories2\repository\org\jvnet\tiger-types\1.4\tiger-types-1.4.jar;H:\Respositories2\repository\org\glassfish\hk2\external\bean-validator\2.2.0-b21\bean-validator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-runlevel\2.2.0-b21\hk2-runlevel-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\class-model\2.2.0-b21\class-model-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\spring-bridge\2.2.0-b21\spring-bridge-2.2.0-b21.jar;H:\Respositories2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\2.4.1\jersey-media-json-jackson-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-common\2.4.1\jersey-common-2.4.1.jar;H:\Respositories2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;H:\Respositories2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.1\osgi-resource-locator-1.0.1.jar;H:\Respositories2\repository\org\codehaus\groovy\groovy-all\2.2.0\groovy-all-2.2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\providers\jersey-test-framework-provider-external\2.5.1\jersey-test-framework-provider-external-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\jersey-test-framework-core\2.5.1\jersey-test-framework-core-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-client\2.5.1\jersey-client-2.5.1.jar;H:\Respositories2\repository\org\springframework\spring-test\3.2.6.RELEASE\spring-test-3.2.6.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session\1.0.1.RELEASE\spring-session-1.0.1.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session-data-redis\1.0.0.RELEASE\spring-session-data-redis-1.0.0.RELEASE.jar;H:\Respositories2\repository\org\apache\commons\commons-pool2\2.2\commons-pool2-2.2.jar;H:\Respositories2\repository\redis\clients\jedis\2.6.0\jedis-2.6.0.jar;H:\Respositories2\repository\org\springframework\data\spring-data-redis\1.4.1.RELEASE\spring-data-redis-1.4.1.RELEASE.jar;H:\Respositories2\repository\net\sf\ehcache\ehcache-core\2.6.11\ehcache-core-2.6.11.jar;H:\Respositories2\repository\org\hibernate3\hibernate3\3.0.0\hibernate3-3.0.0.jar;H:\Respositories2\repository\com\google\code\gson\gson\2.1\gson-2.1.jar;H:\Respositories2\repository\org\apache\openejb\javaee-api\5.0-1\javaee-api-5.0-1.jar;H:\Respositories2\repository\com\alibaba\druid\1.0.2\druid-1.0.2.jar;H:\Respositories2\repository\javax\faces\jsf-impl\1.2_04\jsf-impl-1.2_04.jar;H:\Respositories2\repository\javax\faces\jsf-api\1.2_04\jsf-api-1.2_04.jar;H:\Respositories2\repository\javax\transaction\jta\1.1\jta-1.1.jar;H:\Respositories2\repository\org\apache\ws\wss4j\1.5.1\wss4j-1.5.1.jar;H:\Respositories2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;H:\Respositories2\repository\hibernate\antlr\2.7.5H3\antlr-2.7.5H3.jar;H:\Respositories2\repository\javassist\javassist\3.9.0.GA\javassist-3.9.0.GA.jar;H:\Respositories2\repository\com\fx\mobile\mobile-model\0.0.1-SNAPSHOT\mobile-model-0.0.1-SNAPSHOT.jar;H:\Respositories2\repository\com\fx\mobile\mobile-core\0.0.1\mobile-core-0.0.1.jar;H:\Respositories2\repository\Decoder\sun.misc.BASE64Decoder\1.0.0\sun.misc.BASE64Decoder-1.0.0.jar;H:\Respositories2\repository\marketingFile\marketingFile\0.0.1\marketingFile-0.0.1.jar;H:\Respositories2\repository\com\qq\connect\Sdk4J\1.0\Sdk4J-1.0.jar;H:\Respositories2\repository\org\apache\commons\commons-io\1.3.2\commons-io-1.3.2.jar;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.query.substitutions=true 'Y', false 'N', hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=E:\JDK1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 59874 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.fx.mobile.junit.UserOperateDaoImplTest, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_17, java.ext.dirs=E:\JDK1.7\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=E:\JDK1.7\lib\resources.jar;E:\JDK1.7\lib\rt.jar;E:\JDK1.7\lib\sunrsasign.jar;E:\JDK1.7\lib\jsse.jar;E:\JDK1.7\lib\jce.jar;E:\JDK1.7\lib\charsets.jar;E:\JDK1.7\lib\jfr.jar;E:\JDK1.7\classes, java.vendor=Oracle Corporation, hibernate.jdbc.batch_size=25, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-11-24 14:25:03,45515-11-24 14:25:03 DEBUG (CacheManager.java:684 LINE) CacheManager.parseConfiguration -> Configuring ehcache from classpath.
2015-11-24 14:25:03,47015-11-24 14:25:03 DEBUG (ConfigurationFactory.java:132 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from ehcache.xml found in the classpath: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:25:03,47015-11-24 14:25:03 DEBUG (ConfigurationFactory.java:98 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from URL: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:25:03,47015-11-24 14:25:03 DEBUG (ConfigurationFactory.java:150 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from InputStream
2015-11-24 14:25:03,54915-11-24 14:25:03 DEBUG (DiskStoreConfiguration.java:141 LINE) DiskStoreConfiguration.translatePath -> Disk Store Path: C:\Users\gqy\AppData\Local\Temp\
2015-11-24 14:25:03,56415-11-24 14:25:03 DEBUG (PropertyUtil.java:88 LINE) PropertyUtil.parseProperties -> propertiesString is null.
2015-11-24 14:25:03,62715-11-24 14:25:03 DEBUG (ConfigurationHelper.java:185 LINE) ConfigurationHelper.createCacheManagerEventListener -> No CacheManagerEventListenerFactory class specified. Skipping...
2015-11-24 14:25:03,68915-11-24 14:25:03 DEBUG (Cache.java:955 LINE) Cache.createBootstrapCacheLoader -> No BootstrapCacheLoaderFactory class specified. Skipping...
2015-11-24 14:25:03,68915-11-24 14:25:03 DEBUG (Cache.java:929 LINE) Cache.createCacheWriter -> CacheWriter factory not configured. Skipping...
2015-11-24 14:25:03,68915-11-24 14:25:03 DEBUG (ConfigurationHelper.java:96 LINE) ConfigurationHelper.createCacheExceptionHandler -> No CacheExceptionHandlerFactory class specified. Skipping...
2015-11-24 14:25:03,72015-11-24 14:25:03 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:25:03,72015-11-24 14:25:03 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:25:03,73615-11-24 14:25:03 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:25:03,90815-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.NoteNumbRecord
2015-11-24 14:25:03,90815-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from note_numb_record where id =?
2015-11-24 14:25:03,90815-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select notenumbre_.id, notenumbre_.node_numb as node2_1_ from note_numb_record notenumbre_ where notenumbre_.id=?
2015-11-24 14:25:03,90815-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into note_numb_record (node_numb, id) values (?, ?)
2015-11-24 14:25:03,90815-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update note_numb_record set node_numb=? where id=?
2015-11-24 14:25:03,90815-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from note_numb_record where id=?
2015-11-24 14:25:03,90815-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into note_numb_record (node_numb) values (?)
2015-11-24 14:25:03,90815-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.CrashLog
2015-11-24 14:25:03,92415-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from marketing1.crash_log where id =?
2015-11-24 14:25:03,92415-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select crashlog_.id, crashlog_.url as url2_, crashlog_.describes as describes2_, crashlog_.addDate as addDate2_ from marketing1.crash_log crashlog_ where crashlog_.id=?
2015-11-24 14:25:03,92415-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into marketing1.crash_log (url, describes, addDate, id) values (?, ?, ?, ?)
2015-11-24 14:25:03,92415-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update marketing1.crash_log set url=?, describes=?, addDate=? where id=?
2015-11-24 14:25:03,92415-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from marketing1.crash_log where id=?
2015-11-24 14:25:03,92415-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into marketing1.crash_log (url, describes, addDate) values (?, ?, ?)
2015-11-24 14:25:03,95515-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.UserOperate
2015-11-24 14:25:03,95515-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from user_operate where id =?
2015-11-24 14:25:03,95515-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select useroperat_.id, useroperat_.userName as userName0_, useroperat_.userPassword as userPass3_0_, useroperat_.phicomm_id as phicomm4_0_, useroperat_.userEmail as userEmail0_, useroperat_.user_PhoneNumb as user6_0_, useroperat_.userType as userType0_, useroperat_.isChecked as isChecked0_, useroperat_.nickname as nickname0_, useroperat_.figureurl as figureurl0_, useroperat_.sex as sex0_, useroperat_.province as province0_, useroperat_.city as city0_, useroperat_.birthday as birthday0_, useroperat_.open_id as open15_0_, useroperat_.open_key as open16_0_, useroperat_.access_token as access17_0_, useroperat_.expirese_in as expirese18_0_, useroperat_.devinfo as devinfo0_, useroperat_.userinfo as userinfo0_, useroperat_.openqq as openqq0_, useroperat_.openqqinfo as openqqinfo0_, useroperat_.opensina as opensina0_, useroperat_.opensinainfo as opensin24_0_, useroperat_.createTime as createTime0_, useroperat_.updateTime as updateTime0_, useroperat_.lastLoginTime as lastLog27_0_ from user_operate useroperat_ where useroperat_.id=?
2015-11-24 14:25:03,95515-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:25:03,95515-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update user_operate set userName=?, userPassword=?, phicomm_id=?, userEmail=?, user_PhoneNumb=?, userType=?, isChecked=?, nickname=?, figureurl=?, sex=?, province=?, city=?, birthday=?, open_id=?, open_key=?, access_token=?, expirese_in=?, devinfo=?, userinfo=?, openqq=?, openqqinfo=?, opensina=?, opensinainfo=?, createTime=?, updateTime=?, lastLoginTime=? where id=?
2015-11-24 14:25:03,95515-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from user_operate where id=?
2015-11-24 14:25:03,95515-11-24 14:25:03 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:25:03,97015-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [NONE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:25:03,97015-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:25:03,97015-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:25:03,97015-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE_NOWAIT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:25:03,97015-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [FORCE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? lock in share mode
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_WRITE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [NONE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE_NOWAIT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [FORCE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? lock in share mode
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_WRITE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:25:03,98615-11-24 14:25:03 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [NONE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE_NOWAIT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [FORCE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? lock in share mode
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_WRITE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (SessionFactoryObjectFactory.java:61 LINE) SessionFactoryObjectFactory.<clinit> -> initializing class SessionFactoryObjectFactory
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (SessionFactoryObjectFactory.java:99 LINE) SessionFactoryObjectFactory.addInstance -> registered: b985394b-d0b2-4cfa-a3db-a7418daa7e98 (unnamed)
2015-11-24 14:25:04,00215-11-24 14:25:04  INFO (SessionFactoryObjectFactory.java:105 LINE) SessionFactoryObjectFactory.addInstance -> Not binding factory to JNDI, no JNDI name configured
2015-11-24 14:25:04,00215-11-24 14:25:04 DEBUG (SessionFactoryImpl.java:369 LINE) SessionFactoryImpl.<init> -> instantiated session factory
2015-11-24 14:25:04,00215-11-24 14:25:04  INFO (SchemaUpdate.java:155 LINE) SchemaUpdate.execute -> Running hbm2ddl schema update
2015-11-24 14:25:04,00215-11-24 14:25:04  INFO (SchemaUpdate.java:167 LINE) SchemaUpdate.execute -> fetching database metadata
2015-11-24 14:25:04,01715-11-24 14:25:04  INFO (SchemaUpdate.java:179 LINE) SchemaUpdate.execute -> updating schema
2015-11-24 14:25:04,01715-11-24 14:25:04 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:25:04,01715-11-24 14:25:04 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:25:04,01715-11-24 14:25:04 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:25:04,01715-11-24 14:25:04 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:25:04,01715-11-24 14:25:04 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:25:04,01715-11-24 14:25:04 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:25:04,01715-11-24 14:25:04 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:25:04,01715-11-24 14:25:04 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:25:04,01715-11-24 14:25:04 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:25:04,01715-11-24 14:25:04 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:25:04,01715-11-24 14:25:04 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:25:04,01715-11-24 14:25:04 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:25:04,06415-11-24 14:25:04  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:25:04,06415-11-24 14:25:04 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:25:04,09515-11-24 14:25:04  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.note_numb_record
2015-11-24 14:25:04,09515-11-24 14:25:04  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [id, node_numb]
2015-11-24 14:25:04,09515-11-24 14:25:04  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:25:04,09515-11-24 14:25:04  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:25:04,11115-11-24 14:25:04  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.user_operate
2015-11-24 14:25:04,11115-11-24 14:25:04  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [birthday, sex, updatetime, open_id, openqq, opensina, userinfo, user_phonenumb, city, createtime, id, userpassword, username, lastlogintime, province, opensinainfo, figureurl, phicomm_id, open_key, access_token, nickname, usertype, ischecked, openqqinfo, useremail, devinfo, expirese_in]
2015-11-24 14:25:04,11115-11-24 14:25:04  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:25:04,11115-11-24 14:25:04  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:25:04,11115-11-24 14:25:04  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:25:04,11115-11-24 14:25:04 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:25:04,11115-11-24 14:25:04 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:25:04,11115-11-24 14:25:04 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:25:04,11115-11-24 14:25:04 DEBUG (SchemaUpdate.java:203 LINE) SchemaUpdate.execute -> create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:25:04,12715-11-24 14:25:04 ERROR (SchemaUpdate.java:212 LINE) SchemaUpdate.execute -> Unsuccessful: create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:25:04,12715-11-24 14:25:04 ERROR (SchemaUpdate.java:213 LINE) SchemaUpdate.execute -> Unknown database 'marketing1'
2015-11-24 14:25:04,12715-11-24 14:25:04  INFO (SchemaUpdate.java:217 LINE) SchemaUpdate.execute -> schema update complete
2015-11-24 14:25:04,12715-11-24 14:25:04  INFO (UpdateTimestampsCache.java:57 LINE) UpdateTimestampsCache.<init> -> starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:25:04,14215-11-24 14:25:04  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
2015-11-24 14:25:04,17415-11-24 14:25:04 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:25:04,18915-11-24 14:25:04 DEBUG (DiskStorePathManager.java:169 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Using diskstore path C:\Users\gqy\AppData\Local\Temp
2015-11-24 14:25:04,18915-11-24 14:25:04 DEBUG (DiskStorePathManager.java:170 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Holding exclusive lock on C:\Users\gqy\AppData\Local\Temp\.ehcache-diskstore.lock
2015-11-24 14:25:04,18915-11-24 14:25:04 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 14:25:04,18915-11-24 14:25:04 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:25:04,18915-11-24 14:25:04 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:25:04,20515-11-24 14:25:04 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:25:04,23615-11-24 14:25:04 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:25:04,23615-11-24 14:25:04 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.UpdateTimestampsCache'.
2015-11-24 14:25:04,23615-11-24 14:25:04 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:25:04,23615-11-24 14:25:04  INFO (StandardQueryCache.java:76 LINE) StandardQueryCache.<init> -> starting query cache at region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:25:04,23615-11-24 14:25:04  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
2015-11-24 14:25:04,25215-11-24 14:25:04 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.StandardQueryCache
2015-11-24 14:25:04,25315-11-24 14:25:04 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 14:25:04,25315-11-24 14:25:04 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:25:04,25315-11-24 14:25:04 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:25:04,25315-11-24 14:25:04 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:25:04,25315-11-24 14:25:04 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.StandardQueryCache
2015-11-24 14:25:04,25315-11-24 14:25:04 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.StandardQueryCache'.
2015-11-24 14:25:04,25315-11-24 14:25:04 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:25:04,25315-11-24 14:25:04 DEBUG (SessionFactoryImpl.java:539 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named HQL queries
2015-11-24 14:25:04,25315-11-24 14:25:04 DEBUG (SessionFactoryImpl.java:559 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named SQL queries
2015-11-24 14:25:04,25315-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:04,25315-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'sessionFactory'
2015-11-24 14:25:04,25315-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userOperateDao'
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userOperateDao'
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userInterfaceDao'
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userInterfaceDao'
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userInterfaceDao' to allow for resolving potential circular references
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userInterfaceDao'
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userInterfaceDao'
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'noteNumRecordDao'
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'noteNumRecordDao'
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'noteNumRecordDao' to allow for resolving potential circular references
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'noteNumRecordDao'
2015-11-24 14:25:04,26815-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:04,28415-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'noteNumRecordDao'
2015-11-24 14:25:04,28415-11-24 14:25:04 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'crashLogDao'
2015-11-24 14:25:04,28415-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'crashLogDao'
2015-11-24 14:25:04,28415-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'crashLogDao' to allow for resolving potential circular references
2015-11-24 14:25:04,28415-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:25:04,28415-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'crashLogDao'
2015-11-24 14:25:04,28415-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:04,28415-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'crashLogDao'
2015-11-24 14:25:04,28415-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'dataSource'
2015-11-24 14:25:04,28415-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:25:04,28415-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:25:04,28415-11-24 14:25:04 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:25:04,28415-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:25:04,28415-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2015-11-24 14:25:04,30015-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:25:04,30015-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:25:04,30015-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:25:04,30015-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:04,30015-11-24 14:25:04 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'transactionManager'
2015-11-24 14:25:04,30015-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'transactionManager'
2015-11-24 14:25:04,30015-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-11-24 14:25:04,31515-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:25:04,31515-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-11-24 14:25:04,31515-11-24 14:25:04  INFO (HibernateTransactionManager.java:415 LINE) HibernateTransactionManager.afterPropertiesSet -> Using DataSource [org.apache.commons.dbcp.BasicDataSource@40542fa7] of Hibernate SessionFactory for HibernateTransactionManager
2015-11-24 14:25:04,31515-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:04,31515-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'transactionManager'
2015-11-24 14:25:04,31515-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:25:04,31515-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:25:04,31515-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:25:04,31515-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:25:04,31515-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:25:04,31515-11-24 14:25:04 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'operateService'
2015-11-24 14:25:04,31515-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'operateService'
2015-11-24 14:25:04,37815-11-24 14:25:04 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserOperateServiceImp]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:25:04,37815-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'operateService' to allow for resolving potential circular references
2015-11-24 14:25:04,37815-11-24 14:25:04 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'operateService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:25:04,39315-11-24 14:25:04 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'fileRemote'
2015-11-24 14:25:04,39315-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'fileRemote'
2015-11-24 14:25:04,39315-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'fileRemote' to allow for resolving potential circular references
2015-11-24 14:25:04,40915-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'fileRemote'
2015-11-24 14:25:04,42515-11-24 14:25:04 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static
2015-11-24 14:25:04,42515-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'fileRemote'
2015-11-24 14:25:04,42515-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:25:04,42515-11-24 14:25:04 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'operateService' to bean named 'userOperateDao'
2015-11-24 14:25:04,42515-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:04,44015-11-24 14:25:04 DEBUG (AbstractFallbackTransactionAttributeSource.java:106 LINE) AbstractFallbackTransactionAttributeSource.getTransactionAttribute -> Adding transactional method 'registAccount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '',-java.lang.Throwable
2015-11-24 14:25:04,44015-11-24 14:25:04 DEBUG (AbstractAutoProxyCreator.java:534 LINE) AbstractAutoProxyCreator.buildAdvisors -> Creating implicit proxy for bean 'operateService' with 0 common interceptors and 1 specific interceptors
2015-11-24 14:25:04,44015-11-24 14:25:04 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.fx.mobile.user.service.impl.UserOperateServiceImp@4ebbd9cc]
2015-11-24 14:25:04,45615-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'operateService'
2015-11-24 14:25:04,45615-11-24 14:25:04 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'SpringContextUtil'
2015-11-24 14:25:04,45615-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'SpringContextUtil'
2015-11-24 14:25:04,45615-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'SpringContextUtil' to allow for resolving potential circular references
2015-11-24 14:25:04,45615-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:04,45615-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'SpringContextUtil'
2015-11-24 14:25:04,45615-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'fileRemote'
2015-11-24 14:25:04,45615-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:25:04,45615-11-24 14:25:04 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userinterfaceService'
2015-11-24 14:25:04,45615-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userinterfaceService'
2015-11-24 14:25:04,45615-11-24 14:25:04 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserInterfaceServiceImpl]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:25:04,45615-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userinterfaceService' to allow for resolving potential circular references
2015-11-24 14:25:04,45615-11-24 14:25:04 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'userinterfaceService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:25:04,47115-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userInterfaceDao'
2015-11-24 14:25:04,47115-11-24 14:25:04 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'userinterfaceService' to bean named 'userInterfaceDao'
2015-11-24 14:25:04,47115-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:04,47115-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userinterfaceService'
2015-11-24 14:25:04,47115-11-24 14:25:04 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'urlProperties'
2015-11-24 14:25:04,47115-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'urlProperties'
2015-11-24 14:25:04,47115-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'urlProperties' to allow for resolving potential circular references
2015-11-24 14:25:04,47115-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:04,47115-11-24 14:25:04 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'urlProperties'
2015-11-24 14:25:04,47115-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:25:04,47115-11-24 14:25:04 DEBUG (AbstractApplicationContext.java:858 LINE) AbstractApplicationContext.initLifecycleProcessor -> Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@22b2806]
2015-11-24 14:25:04,47115-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:25:04,47115-11-24 14:25:04 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-11-24 14:25:04,47115-11-24 14:25:04 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-11-24 14:25:04,48715-11-24 14:25:04 DEBUG (PropertySourcesPropertyResolver.java:93 LINE) PropertySourcesPropertyResolver.getProperty -> Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-11-24 14:25:04,48715-11-24 14:25:04 DEBUG (CacheAwareContextLoaderDelegate.java:93 LINE) CacheAwareContextLoaderDelegate.loadContext -> Storing ApplicationContext in cache under key [[MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:25:04,48715-11-24 14:25:04 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 14:25:04,48715-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:25:04,48715-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:25:04,50315-11-24 14:25:04 DEBUG (SessionFactoryUtils.java:322 LINE) SessionFactoryUtils.doGetSession -> Opening Hibernate Session
2015-11-24 14:25:04,58115-11-24 14:25:04 DEBUG (SessionImpl.java:265 LINE) SessionImpl.<init> -> opened session at timestamp: 5932426463244288
2015-11-24 14:25:04,65915-11-24 14:25:04 DEBUG (QueryTranslatorImpl.java:274 LINE) QueryTranslatorImpl.parse -> parse() - HQL: from com.fx.mobile.model.UserOperate where userName='芳草碧连天' || userPhoneNumb='芳草碧连天'  || userEmail='芳草碧连天'
2015-11-24 14:25:04,65915-11-24 14:25:04 DEBUG (QueryTranslatorImpl.java:293 LINE) QueryTranslatorImpl.showHqlAst -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'fx'
    |           |  |  \-[IDENT] Node: 'mobile'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'UserOperate'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[EQ] Node: '='
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'userName'
          |  |  \-[METHOD_CALL] Node: '||'
          |  |     +-[IDENT] Node: 'concat'
          |  |     \-[EXPR_LIST] Node: 'concatList'
          |  |        +-[QUOTED_STRING] Node: ''\u82b3\u8349\u78a7\u8fde\u5929''
          |  |        \-[IDENT] Node: 'userPhoneNumb'
          |  \-[METHOD_CALL] Node: '||'
          |     +-[IDENT] Node: 'concat'
          |     \-[EXPR_LIST] Node: 'concatList'
          |        +-[QUOTED_STRING] Node: ''\u82b3\u8349\u78a7\u8fde\u5929''
          |        \-[IDENT] Node: 'userEmail'
          \-[QUOTED_STRING] Node: ''\u82b3\u8349\u78a7\u8fde\u5929''

2015-11-24 14:25:04,65915-11-24 14:25:04 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:25:04,70615-11-24 14:25:04 DEBUG (HqlSqlBaseWalker.java:111 LINE) HqlSqlBaseWalker.beforeStatement -> select << begin [level=1, statement=select]
2015-11-24 14:25:04,73715-11-24 14:25:04 DEBUG (FromElement.java:157 LINE) FromElement.doInitialize -> FromClause{level=1} :  com.fx.mobile.model.UserOperate (no alias) -> useroperat0_
2015-11-24 14:25:04,73715-11-24 14:25:04 ERROR (ErrorCounter.java:56 LINE) ErrorCounter.reportError -> <AST>:1:77: unexpected AST node: =
2015-11-24 14:25:04,73715-11-24 14:25:04 DEBUG (ErrorCounter.java:51 LINE) ErrorCounter.reportError -> <AST>:1:77: unexpected AST node: =
<AST>:1:77: unexpected AST node: =
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4553)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:3944)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2047)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:831)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:617)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:301)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:244)
	at org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:256)
	at org.hibernate.hql.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:187)
	at org.hibernate.hql.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:138)
	at org.hibernate.engine.query.HQLQueryPlan.<init>(HQLQueryPlan.java:101)
	at org.hibernate.engine.query.HQLQueryPlan.<init>(HQLQueryPlan.java:80)
	at org.hibernate.engine.query.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:124)
	at org.hibernate.impl.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:156)
	at org.hibernate.impl.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:135)
	at org.hibernate.impl.SessionImpl.createQuery(SessionImpl.java:1770)
	at org.springframework.orm.hibernate3.HibernateTemplate$30.doInHibernate(HibernateTemplate.java:914)
	at org.springframework.orm.hibernate3.HibernateTemplate$30.doInHibernate(HibernateTemplate.java:912)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:406)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:912)
	at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:904)
	at com.fx.mobile.user.dao.impl.UserOperateDaoImp.findUserByName(UserOperateDaoImp.java:212)
	at com.fx.mobile.junit.UserOperateDaoImplTest.getListTest(UserOperateDaoImplTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
2015-11-24 14:25:04,73715-11-24 14:25:04 ERROR (ErrorCounter.java:56 LINE) ErrorCounter.reportError ->  right-hand operand of a binary operator was null
2015-11-24 14:25:04,73715-11-24 14:25:04 DEBUG (ErrorCounter.java:51 LINE) ErrorCounter.reportError ->  right-hand operand of a binary operator was null
 right-hand operand of a binary operator was null
	at org.hibernate.hql.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:55)
	at org.hibernate.hql.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1199)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4414)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2047)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:831)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:617)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:301)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:244)
	at org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:256)
	at org.hibernate.hql.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:187)
	at org.hibernate.hql.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:138)
	at org.hibernate.engine.query.HQLQueryPlan.<init>(HQLQueryPlan.java:101)
	at org.hibernate.engine.query.HQLQueryPlan.<init>(HQLQueryPlan.java:80)
	at org.hibernate.engine.query.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:124)
	at org.hibernate.impl.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:156)
	at org.hibernate.impl.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:135)
	at org.hibernate.impl.SessionImpl.createQuery(SessionImpl.java:1770)
	at org.springframework.orm.hibernate3.HibernateTemplate$30.doInHibernate(HibernateTemplate.java:914)
	at org.springframework.orm.hibernate3.HibernateTemplate$30.doInHibernate(HibernateTemplate.java:912)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:406)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:912)
	at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:904)
	at com.fx.mobile.user.dao.impl.UserOperateDaoImp.findUserByName(UserOperateDaoImp.java:212)
	at com.fx.mobile.junit.UserOperateDaoImplTest.getListTest(UserOperateDaoImplTest.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
2015-11-24 14:25:04,73715-11-24 14:25:04 DEBUG (HqlSqlBaseWalker.java:117 LINE) HqlSqlBaseWalker.beforeStatementCompletion -> select : finishing up [level=1, statement=select]
2015-11-24 14:25:04,73715-11-24 14:25:04 DEBUG (HqlSqlWalker.java:625 LINE) HqlSqlWalker.processQuery -> processQuery() :  ( SELECT ( FromClause{level=1} user_operate useroperat0_ ) ( where ( = '芳草碧连天' ) ) )
2015-11-24 14:25:04,75315-11-24 14:25:04 DEBUG (HqlSqlWalker.java:868 LINE) HqlSqlWalker.createSelectClauseFromFromClause -> Derived SELECT clause created.
2015-11-24 14:25:04,75315-11-24 14:25:04 DEBUG (JoinProcessor.java:179 LINE) JoinProcessor.addJoinNodes -> Using FROM fragment [user_operate useroperat0_]
2015-11-24 14:25:04,75315-11-24 14:25:04 DEBUG (HqlSqlBaseWalker.java:123 LINE) HqlSqlBaseWalker.afterStatementCompletion -> select >> end [level=1, statement=select]
2015-11-24 14:25:04,75315-11-24 14:25:04 DEBUG (QueryTranslatorImpl.java:260 LINE) QueryTranslatorImpl.analyze -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_operate)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'useroperat0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}}
    |  \-[SQL_TOKEN] SqlFragment: 'useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[useroperat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_operate useroperat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          \-[QUOTED_STRING] LiteralNode: ''\u82b3\u8349\u78a7\u8fde\u5929''

2015-11-24 14:25:04,75315-11-24 14:25:04 DEBUG (SessionFactoryUtils.java:800 LINE) SessionFactoryUtils.closeSession -> Closing Hibernate Session
2015-11-24 14:25:04,75315-11-24 14:25:04 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@4dd290b5 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@3b1a82fd, testMethod = getListTest@UserOperateDaoImplTest, testException = org.springframework.orm.hibernate3.HibernateQueryException: unexpected AST node: = near line 1, column 77 [from com.fx.mobile.model.UserOperate where userName='芳草碧连天' || userPhoneNumb='芳草碧连天'  || userEmail='芳草碧连天']; nested exception is org.hibernate.hql.ast.QuerySyntaxException: unexpected AST node: = near line 1, column 77 [from com.fx.mobile.model.UserOperate where userName='芳草碧连天' || userPhoneNumb='芳草碧连天'  || userEmail='芳草碧连天'], mergedContextConfiguration = [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 14:25:04,75315-11-24 14:25:04 DEBUG (DirtiesContextTestExecutionListener.java:138 LINE) DirtiesContextTestExecutionListener.afterTestClass -> After test class: context [[TestContext@4dd290b5 testClass = UserOperateDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@498dce5b testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
2015-11-24 14:25:04,76815-11-24 14:25:04  INFO (AbstractApplicationContext.java:1042 LINE) AbstractApplicationContext.doClose -> Closing org.springframework.context.support.GenericApplicationContext@4ad9cb27: startup date [Tue Nov 24 14:25:00 CST 2015]; root of context hierarchy
2015-11-24 14:25:04,76815-11-24 14:25:04 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:25:04,76815-11-24 14:25:04  INFO (DefaultSingletonBeanRegistry.java:444 LINE) DefaultSingletonBeanRegistry.destroySingletons -> Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@25303e3b: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:25:04,76815-11-24 14:25:04 DEBUG (DefaultSingletonBeanRegistry.java:500 LINE) DefaultSingletonBeanRegistry.destroyBean -> Retrieved dependent beans for bean 'userOperateDao': [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:25:04,76815-11-24 14:25:04 DEBUG (DisposableBeanAdapter.java:219 LINE) DisposableBeanAdapter.destroy -> Invoking destroy() on bean with name 'sessionFactory'
2015-11-24 14:25:04,76815-11-24 14:25:04  INFO (AbstractSessionFactoryBean.java:223 LINE) AbstractSessionFactoryBean.destroy -> Closing Hibernate SessionFactory
2015-11-24 14:25:04,76815-11-24 14:25:04  INFO (SessionFactoryImpl.java:927 LINE) SessionFactoryImpl.close -> closing
2015-11-24 14:25:04,78415-11-24 14:25:04 DEBUG (DisposableBeanAdapter.java:295 LINE) DisposableBeanAdapter.invokeCustomDestroyMethod -> Invoking destroy method 'close' on bean with name 'dataSource'
2015-11-24 14:26:18,93115-11-24 14:26:18 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 14:26:18,99315-11-24 14:26:18 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@6ed76e89 declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 14:26:18,99315-11-24 14:26:18 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:26:18,99315-11-24 14:26:18 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 14:26:19,05615-11-24 14:26:19 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:26:19,05615-11-24 14:26:19 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:26:19,05615-11-24 14:26:19 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:26:19,05615-11-24 14:26:19 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:26:19,05615-11-24 14:26:19 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:26:19,05615-11-24 14:26:19 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:26:19,07215-11-24 14:26:19 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:26:19,07215-11-24 14:26:19 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:26:19,07215-11-24 14:26:19 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:26:19,07215-11-24 14:26:19 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:26:19,07215-11-24 14:26:19 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:26:19,07215-11-24 14:26:19 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:26:19,07215-11-24 14:26:19 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@3b1a82fd testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@498dce5b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 14:26:19,07215-11-24 14:26:19 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 14:26:19,07215-11-24 14:26:19 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:26:19,19715-11-24 14:26:19 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:26:19,19715-11-24 14:26:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:26:19,19715-11-24 14:26:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:26:19,19715-11-24 14:26:19 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:26:19,21215-11-24 14:26:19 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:26:19,21215-11-24 14:26:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:26:19,21215-11-24 14:26:19 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:26:19,21215-11-24 14:26:19 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:26:19,22815-11-24 14:26:19 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 14:26:19,22815-11-24 14:26:19 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 14:26:19,22815-11-24 14:26:19 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 14:26:19,22815-11-24 14:26:19  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 14:26:19,22815-11-24 14:26:19 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:26:19,25915-11-24 14:26:19 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 14:26:19,25915-11-24 14:26:19 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 14:26:19,25915-11-24 14:26:19 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:26:19,33715-11-24 14:26:19 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:26:19,33715-11-24 14:26:19  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 14:26:19,35315-11-24 14:26:19 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:26:19,35315-11-24 14:26:19 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:26:19,40015-11-24 14:26:19 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:26:19,41515-11-24 14:26:19  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 14:26:19,41515-11-24 14:26:19 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:26:19,43115-11-24 14:26:19 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:26:19,46315-11-24 14:26:19 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 14:26:19,47915-11-24 14:26:19 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:26:19,47915-11-24 14:26:19 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:26:19,49415-11-24 14:26:19 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 14:26:19,52615-11-24 14:26:19  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 14:26:19,52615-11-24 14:26:19 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:26:19,52615-11-24 14:26:19 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:26:19,55715-11-24 14:26:19 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 14:26:19,55715-11-24 14:26:19 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:26:19,55715-11-24 14:26:19 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:26:19,60415-11-24 14:26:19  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 14:26:19,60415-11-24 14:26:19  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 14:26:19,61915-11-24 14:26:19 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 14:26:19,61915-11-24 14:26:19 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:26:19,61915-11-24 14:26:19 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:26:19,61915-11-24 14:26:19 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 14:26:19,65115-11-24 14:26:19 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 14:26:19,65115-11-24 14:26:19 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 14:26:19,65115-11-24 14:26:19 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 14:26:19,66615-11-24 14:26:19 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 14:26:19,66615-11-24 14:26:19  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 14:26:19,66615-11-24 14:26:19  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 14:26:19,66615-11-24 14:26:19 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:26:19,68215-11-24 14:26:19 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:26:19,69815-11-24 14:26:19 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:26:19,69815-11-24 14:26:19 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 14:26:19,69815-11-24 14:26:19  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@20a893d5: startup date [Tue Nov 24 14:26:19 CST 2015]; root of context hierarchy
2015-11-24 14:26:19,69815-11-24 14:26:19 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@20a893d5: org.springframework.beans.factory.support.DefaultListableBeanFactory@245a690: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 14:26:19,74415-11-24 14:26:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:26:19,74415-11-24 14:26:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:26:19,76015-11-24 14:26:19 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:26:19,77615-11-24 14:26:19 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:26:19,85415-11-24 14:26:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:26:19,85415-11-24 14:26:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:26:19,86915-11-24 14:26:19 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 14:26:19,96315-11-24 14:26:19 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:26:19,96315-11-24 14:26:19  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 14:26:19,96315-11-24 14:26:19  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 14:26:19,96315-11-24 14:26:19  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 14:26:19,97915-11-24 14:26:19 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:26:19,97915-11-24 14:26:19 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:26:19,97915-11-24 14:26:19  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 14:26:20,01015-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:26:20,01015-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:26:20,01015-11-24 14:26:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:26:20,01015-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:26:20,01015-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:26:20,01015-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:26:20,01015-11-24 14:26:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:26:20,01015-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:26:20,01015-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:26:20,01015-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:26:20,01015-11-24 14:26:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:26:20,01015-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:26:20,02615-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:26:20,02615-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:26:20,02615-11-24 14:26:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:26:20,02615-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:26:20,02615-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 14:26:20,02615-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:26:20,02615-11-24 14:26:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:26:20,02615-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:26:20,04115-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 14:26:20,05715-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:26:20,05715-11-24 14:26:20 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@48ec350d]
2015-11-24 14:26:20,05715-11-24 14:26:20 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@3dd1d4b8]
2015-11-24 14:26:20,07315-11-24 14:26:20  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@245a690: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:26:20,07315-11-24 14:26:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 14:26:20,07315-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 14:26:20,07315-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 14:26:20,08815-11-24 14:26:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 14:26:20,08815-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 14:26:20,10415-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 14:26:20,11915-11-24 14:26:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 14:26:20,11915-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 14:26:20,21315-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:26:20,22915-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:26:20,24415-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:26:20,24415-11-24 14:26:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:26:20,24415-11-24 14:26:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:20,24415-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:20,24415-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 14:26:20,32315-11-24 14:26:20 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:26:20,32315-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:26:20,32315-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 14:26:20,33815-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:26:20,33815-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:20,33815-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 14:26:20,33815-11-24 14:26:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:26:20,33815-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:26:20,33815-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:26:20,33815-11-24 14:26:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:26:20,33815-11-24 14:26:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:26:20,33815-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:26:20,33815-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:26:20,33815-11-24 14:26:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:26:20,33815-11-24 14:26:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:26:20,35415-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:26:20,35415-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:26:20,35415-11-24 14:26:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:26:20,35415-11-24 14:26:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:26:20,35415-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:26:20,35415-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:26:20,35415-11-24 14:26:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:26:20,35415-11-24 14:26:20 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:26:20,35415-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:26:20,35415-11-24 14:26:20 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:26:20,35415-11-24 14:26:20 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:26:20,35415-11-24 14:26:20 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 14:26:20,41615-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@2051acec
2015-11-24 14:26:20,41615-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@2051acec
2015-11-24 14:26:20,41615-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2051acec
2015-11-24 14:26:20,41615-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@322d115e
2015-11-24 14:26:20,43215-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f51e779
2015-11-24 14:26:20,43215-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@74cee5ed
2015-11-24 14:26:20,43215-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@11b5e706
2015-11-24 14:26:20,43215-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@11b5e706
2015-11-24 14:26:20,43215-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@11b5e706
2015-11-24 14:26:20,43215-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@47ed5550
2015-11-24 14:26:20,43215-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@47ed5550
2015-11-24 14:26:20,43215-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47ed5550
2015-11-24 14:26:20,44915-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@355971ce
2015-11-24 14:26:20,44915-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@355971ce
2015-11-24 14:26:20,44915-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@355971ce
2015-11-24 14:26:20,44915-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@4389f6ad
2015-11-24 14:26:20,44915-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@4389f6ad
2015-11-24 14:26:20,44915-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4389f6ad
2015-11-24 14:26:20,44915-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4fbd89c9
2015-11-24 14:26:20,44915-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4fbd89c9
2015-11-24 14:26:20,44915-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fbd89c9
2015-11-24 14:26:20,44915-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1e60a696
2015-11-24 14:26:20,44915-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1e60a696
2015-11-24 14:26:20,44915-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1e60a696
2015-11-24 14:26:20,46415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@1bc0e7b8
2015-11-24 14:26:20,46415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@1bc0e7b8
2015-11-24 14:26:20,46415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1bc0e7b8
2015-11-24 14:26:20,46415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4caa1b37
2015-11-24 14:26:20,46415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4caa1b37
2015-11-24 14:26:20,46415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@12efdb85
2015-11-24 14:26:20,46415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@12efdb85
2015-11-24 14:26:20,46415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@3c564b26
2015-11-24 14:26:20,46415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@3c564b26
2015-11-24 14:26:20,48015-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@64ae8c15
2015-11-24 14:26:20,48015-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@64ae8c15
2015-11-24 14:26:20,48015-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@74eb711e
2015-11-24 14:26:20,48015-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@74eb711e
2015-11-24 14:26:20,48015-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@65c98bf3
2015-11-24 14:26:20,48015-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@65c98bf3
2015-11-24 14:26:20,48015-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@56ff3d
2015-11-24 14:26:20,49515-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56ff3d
2015-11-24 14:26:20,49515-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56ff3d
2015-11-24 14:26:20,49515-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1bde4427
2015-11-24 14:26:20,49515-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@1154d30d
2015-11-24 14:26:20,49515-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1154d30d
2015-11-24 14:26:20,49515-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1154d30d
2015-11-24 14:26:20,49515-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3f32f5c
2015-11-24 14:26:20,49515-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@320e61b6
2015-11-24 14:26:20,49515-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@320e61b6
2015-11-24 14:26:20,49515-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@4f94aaa1
2015-11-24 14:26:20,49515-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f94aaa1
2015-11-24 14:26:20,49515-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@5117c3e6
2015-11-24 14:26:20,49515-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5117c3e6
2015-11-24 14:26:20,51115-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@54d03269
2015-11-24 14:26:20,51115-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54d03269
2015-11-24 14:26:20,51115-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@323283f6
2015-11-24 14:26:20,51115-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@323283f6
2015-11-24 14:26:20,51115-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39fc57bd
2015-11-24 14:26:20,51115-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@460367c3
2015-11-24 14:26:20,51115-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@57d47ef4
2015-11-24 14:26:20,51115-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@57d47ef4
2015-11-24 14:26:20,51115-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@57d47ef4
2015-11-24 14:26:20,52715-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ad420ad
2015-11-24 14:26:20,52715-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ad420ad
2015-11-24 14:26:20,52715-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ad420ad
2015-11-24 14:26:20,52715-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@63c7b5d1
2015-11-24 14:26:20,52715-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@5bcc83fe
2015-11-24 14:26:20,52715-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@5bcc83fe
2015-11-24 14:26:20,52715-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@5bcc83fe
2015-11-24 14:26:20,52715-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31245703
2015-11-24 14:26:20,52715-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31245703
2015-11-24 14:26:20,52715-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31245703
2015-11-24 14:26:20,52715-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@2a24f902
2015-11-24 14:26:20,54215-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@332933cb
2015-11-24 14:26:20,54215-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@332933cb
2015-11-24 14:26:20,54215-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5f05c0eb
2015-11-24 14:26:20,54215-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@3e8a0821
2015-11-24 14:26:20,55815-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@5771c6d6
2015-11-24 14:26:20,55815-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5771c6d6
2015-11-24 14:26:20,55815-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3fabb84d
2015-11-24 14:26:20,55815-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1bf5df6a
2015-11-24 14:26:20,55815-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@6b9b9f57
2015-11-24 14:26:20,57415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@1567ca08
2015-11-24 14:26:20,57415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@43d9b738
2015-11-24 14:26:20,57415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43d9b738
2015-11-24 14:26:20,57415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@22dd6b21
2015-11-24 14:26:20,57415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76a45568
2015-11-24 14:26:20,57415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1ee35bb2
2015-11-24 14:26:20,57415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@609912f5
2015-11-24 14:26:20,57415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61abc45e
2015-11-24 14:26:20,57415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@53e9296a
2015-11-24 14:26:20,57415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@709e192f
2015-11-24 14:26:20,57415-11-24 14:26:20 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1b87966c
2015-11-24 14:26:20,62015-11-24 14:26:20  INFO (Version.java:37 LINE) Version.<clinit> -> Hibernate Commons Annotations 3.2.0.Final
2015-11-24 14:26:20,63615-11-24 14:26:20  INFO (Environment.java:603 LINE) Environment.<clinit> -> Hibernate 3.6.8.Final
2015-11-24 14:26:20,63615-11-24 14:26:20  INFO (Environment.java:636 LINE) Environment.<clinit> -> hibernate.properties not found
2015-11-24 14:26:20,63615-11-24 14:26:20  INFO (Environment.java:814 LINE) Environment.buildBytecodeProvider -> Bytecode provider name : javassist
2015-11-24 14:26:20,63615-11-24 14:26:20  INFO (Environment.java:695 LINE) Environment.<clinit> -> using JDK 1.4 java.sql.Timestamp handling
2015-11-24 14:26:20,73015-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2015-11-24 14:26:20,73015-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2015-11-24 14:26:20,73015-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:26:20,73015-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:26:20,73015-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2015-11-24 14:26:20,73015-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2015-11-24 14:26:20,73015-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2015-11-24 14:26:20,73015-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2015-11-24 14:26:20,74515-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2015-11-24 14:26:20,74515-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2015-11-24 14:26:20,74515-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2015-11-24 14:26:20,74515-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2015-11-24 14:26:20,74515-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2015-11-24 14:26:20,74515-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-11-24 14:26:20,74515-11-24 14:26:20 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2015-11-24 14:26:20,80815-11-24 14:26:20 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:26:20,80815-11-24 14:26:20  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:26:20,80815-11-24 14:26:20 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:26:20,80815-11-24 14:26:20 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:26:20,87015-11-24 14:26:20 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:26:20,87015-11-24 14:26:20  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:26:20,87015-11-24 14:26:20 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:26:20,87015-11-24 14:26:20 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:26:20,90215-11-24 14:26:20 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:26:20,90215-11-24 14:26:20  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:26:20,90215-11-24 14:26:20 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:26:20,90215-11-24 14:26:20 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:26:21,12015-11-24 14:26:21 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:26:21,15215-11-24 14:26:21  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.UserOperate -> user_operate
2015-11-24 14:26:21,16715-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:26:21,16715-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userName -> userName
2015-11-24 14:26:21,16715-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPassword -> userPassword
2015-11-24 14:26:21,16715-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: phicommId -> phicomm_id
2015-11-24 14:26:21,16715-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userEmail -> userEmail
2015-11-24 14:26:21,16715-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPhoneNumb -> user_PhoneNumb
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userType -> userType
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: isChecked -> isChecked
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nickname -> nickname
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: figureurl -> figureurl
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: sex -> sex
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: province -> province
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: city -> city
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: birthday -> birthday
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openId -> open_id
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openKey -> open_key
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: accessToken -> access_token
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: expireseIn -> expirese_in
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: devinfo -> devinfo
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userinfo -> userinfo
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqq -> openqq
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqqinfo -> openqqinfo
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensina -> opensina
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensinainfo -> opensinainfo
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: createTime -> createTime
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: updateTime -> updateTime
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: lastLoginTime -> lastLoginTime
2015-11-24 14:26:21,18315-11-24 14:26:21  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.NoteNumbRecord -> note_numb_record
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nodeNumb -> node_numb
2015-11-24 14:26:21,18315-11-24 14:26:21  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.CrashLog -> crash_log
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: url -> url
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: describes -> describes
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: addDate -> addDate
2015-11-24 14:26:21,18315-11-24 14:26:21 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:26:21,19915-11-24 14:26:21 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:26:21,19915-11-24 14:26:21 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:26:21,19915-11-24 14:26:21 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:26:21,19915-11-24 14:26:21 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:26:21,19915-11-24 14:26:21 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:26:21,19915-11-24 14:26:21 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:26:21,19915-11-24 14:26:21 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:26:21,19915-11-24 14:26:21  INFO (Configuration.java:1676 LINE) Configuration.applyHibernateValidatorLegacyConstraintsOnDDL -> Hibernate Validator not found: ignoring
2015-11-24 14:26:21,26115-11-24 14:26:21 DEBUG (LoggerFactory.java:29 LINE) LoggerFactory.make -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-11-24 14:26:21,26115-11-24 14:26:21  INFO (Version.java:27 LINE) Version.<clinit> -> HV000001: Hibernate Validator 5.0.0.Final
2015-11-24 14:26:21,29215-11-24 14:26:21 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:26:21,30815-11-24 14:26:21 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:26:21,32415-11-24 14:26:21 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:26:21,58915-11-24 14:26:21  INFO (LocalSessionFactoryBean.java:780 LINE) LocalSessionFactoryBean.buildSessionFactory -> Building new Hibernate SessionFactory
2015-11-24 14:26:21,58915-11-24 14:26:21 DEBUG (Configuration.java:1854 LINE) Configuration.buildSessionFactory -> Preparing to build session factory with filters : {}
2015-11-24 14:26:21,58915-11-24 14:26:21 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:26:21,58915-11-24 14:26:21 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:26:21,58915-11-24 14:26:21 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:26:21,58915-11-24 14:26:21 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:26:21,58915-11-24 14:26:21 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:26:21,58915-11-24 14:26:21 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:26:21,58915-11-24 14:26:21 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:26:21,58915-11-24 14:26:21 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:26:21,58915-11-24 14:26:21 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:26:21,58915-11-24 14:26:21 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:26:21,58915-11-24 14:26:21 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:26:21,58915-11-24 14:26:21 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:26:21,65315-11-24 14:26:21 DEBUG (Configuration.java:1896 LINE) Configuration.enableLegacyHibernateValidator -> Legacy Validator not present in classpath, ignoring event listener registration
2015-11-24 14:26:21,65315-11-24 14:26:21 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:26:21,65315-11-24 14:26:21 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:26:21,65315-11-24 14:26:21 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:26:21,66815-11-24 14:26:21 DEBUG (HibernateSearchEventListenerRegister.java:231 LINE) HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener -> Search not present in classpath, ignoring event listener registration.
2015-11-24 14:26:21,66815-11-24 14:26:21  INFO (HibernateSearchEventListenerRegister.java:75 LINE) HibernateSearchEventListenerRegister.enableHibernateSearch -> Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2015-11-24 14:26:21,68415-11-24 14:26:21  INFO (ConnectionProviderFactory.java:173 LINE) ConnectionProviderFactory.initializeConnectionProviderFromConfig -> Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2015-11-24 14:26:22,13715-11-24 14:26:22  INFO (Dialect.java:135 LINE) Dialect.<init> -> Using dialect: org.hibernate.dialect.MySQLDialect
2015-11-24 14:26:22,18415-11-24 14:26:22  INFO (SettingsFactory.java:126 LINE) SettingsFactory.buildSettings -> Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-11-24 14:26:22,18415-11-24 14:26:22  INFO (SettingsFactory.java:132 LINE) SettingsFactory.buildSettings -> Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.25 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2015-11-24 14:26:22,18415-11-24 14:26:22  INFO (TransactionFactoryFactory.java:65 LINE) TransactionFactoryFactory.buildTransactionFactory -> Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2015-11-24 14:26:22,18415-11-24 14:26:22  INFO (TransactionManagerLookupFactory.java:83 LINE) TransactionManagerLookupFactory.getTransactionManagerLookup -> No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2015-11-24 14:26:22,18415-11-24 14:26:22  INFO (SettingsFactory.java:179 LINE) SettingsFactory.buildSettings -> Automatic flush during beforeCompletion(): disabled
2015-11-24 14:26:22,18415-11-24 14:26:22  INFO (SettingsFactory.java:183 LINE) SettingsFactory.buildSettings -> Automatic session close at end of transaction: disabled
2015-11-24 14:26:22,18415-11-24 14:26:22  INFO (SettingsFactory.java:190 LINE) SettingsFactory.buildSettings -> JDBC batch size: 25
2015-11-24 14:26:22,18415-11-24 14:26:22  INFO (SettingsFactory.java:193 LINE) SettingsFactory.buildSettings -> JDBC batch updates for versioned data: disabled
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:198 LINE) SettingsFactory.buildSettings -> Scrollable result sets: enabled
2015-11-24 14:26:22,20015-11-24 14:26:22 DEBUG (SettingsFactory.java:202 LINE) SettingsFactory.buildSettings -> Wrap result sets: disabled
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:206 LINE) SettingsFactory.buildSettings -> JDBC3 getGeneratedKeys(): enabled
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:210 LINE) SettingsFactory.buildSettings -> JDBC result set fetch size: 50
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:214 LINE) SettingsFactory.buildSettings -> Connection release mode: after_transaction
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:238 LINE) SettingsFactory.buildSettings -> Maximum outer join fetch depth: 2
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:241 LINE) SettingsFactory.buildSettings -> Default batch fetch size: 1
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:245 LINE) SettingsFactory.buildSettings -> Generate SQL with comments: disabled
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:249 LINE) SettingsFactory.buildSettings -> Order SQL updates by primary key: disabled
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:253 LINE) SettingsFactory.buildSettings -> Order SQL inserts for batching: disabled
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:431 LINE) SettingsFactory.createQueryTranslatorFactory -> Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (ASTQueryTranslatorFactory.java:47 LINE) ASTQueryTranslatorFactory.<init> -> Using ASTQueryTranslatorFactory
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:261 LINE) SettingsFactory.buildSettings -> Query language substitutions: {false='N', true='Y'}
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:266 LINE) SettingsFactory.buildSettings -> JPA-QL strict compliance: disabled
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:271 LINE) SettingsFactory.buildSettings -> Second-level cache: enabled
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:275 LINE) SettingsFactory.buildSettings -> Query cache: enabled
2015-11-24 14:26:22,20015-11-24 14:26:22  INFO (SettingsFactory.java:406 LINE) SettingsFactory.createRegionFactory -> Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
2015-11-24 14:26:22,21515-11-24 14:26:22  INFO (RegionFactoryCacheProviderBridge.java:61 LINE) RegionFactoryCacheProviderBridge.<init> -> Cache provider: org.hibernate.cache.EhCacheProvider
2015-11-24 14:26:22,21515-11-24 14:26:22  INFO (SettingsFactory.java:285 LINE) SettingsFactory.buildSettings -> Optimize cache for minimal puts: disabled
2015-11-24 14:26:22,21515-11-24 14:26:22  INFO (SettingsFactory.java:294 LINE) SettingsFactory.buildSettings -> Structured second-level cache entries: disabled
2015-11-24 14:26:22,21515-11-24 14:26:22  INFO (SettingsFactory.java:385 LINE) SettingsFactory.createQueryCacheFactory -> Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
2015-11-24 14:26:22,21515-11-24 14:26:22  INFO (SettingsFactory.java:314 LINE) SettingsFactory.buildSettings -> Echoing all SQL to stdout
2015-11-24 14:26:22,23115-11-24 14:26:22  INFO (SettingsFactory.java:323 LINE) SettingsFactory.buildSettings -> Statistics: disabled
2015-11-24 14:26:22,23115-11-24 14:26:22  INFO (SettingsFactory.java:327 LINE) SettingsFactory.buildSettings -> Deleted entity synthetic identifier rollback: disabled
2015-11-24 14:26:22,23115-11-24 14:26:22  INFO (SettingsFactory.java:343 LINE) SettingsFactory.buildSettings -> Default entity-mode: pojo
2015-11-24 14:26:22,23115-11-24 14:26:22  INFO (SettingsFactory.java:347 LINE) SettingsFactory.buildSettings -> Named query checking : enabled
2015-11-24 14:26:22,23115-11-24 14:26:22  INFO (SettingsFactory.java:351 LINE) SettingsFactory.buildSettings -> Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2015-11-24 14:26:22,24715-11-24 14:26:22  INFO (SessionFactoryImpl.java:202 LINE) SessionFactoryImpl.<init> -> building session factory
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (SessionFactoryImpl.java:206 LINE) SessionFactoryImpl.<init> -> Statistics initialized [enabled=false]}
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@2051acec
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@2051acec
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2051acec
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@322d115e
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f51e779
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@74cee5ed
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@11b5e706
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@11b5e706
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@11b5e706
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@47ed5550
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@47ed5550
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47ed5550
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@355971ce
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@355971ce
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@355971ce
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@4389f6ad
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@4389f6ad
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4389f6ad
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4fbd89c9
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4fbd89c9
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@4fbd89c9
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1e60a696
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@1e60a696
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1e60a696
2015-11-24 14:26:22,26215-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@1bc0e7b8
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@1bc0e7b8
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1bc0e7b8
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4caa1b37
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4caa1b37
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@12efdb85
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@12efdb85
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@3c564b26
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@3c564b26
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@64ae8c15
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@64ae8c15
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@74eb711e
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@74eb711e
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@65c98bf3
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@65c98bf3
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@56ff3d
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56ff3d
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56ff3d
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1bde4427
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@1154d30d
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1154d30d
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1154d30d
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3f32f5c
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@320e61b6
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@320e61b6
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@4f94aaa1
2015-11-24 14:26:22,27815-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4f94aaa1
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@5117c3e6
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5117c3e6
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@54d03269
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54d03269
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@323283f6
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@323283f6
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39fc57bd
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@460367c3
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@57d47ef4
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@57d47ef4
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@57d47ef4
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3ad420ad
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3ad420ad
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3ad420ad
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@63c7b5d1
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@5bcc83fe
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@5bcc83fe
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@5bcc83fe
2015-11-24 14:26:22,30915-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@31245703
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@31245703
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@31245703
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@2a24f902
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@332933cb
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@332933cb
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5f05c0eb
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@3e8a0821
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@5771c6d6
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5771c6d6
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3fabb84d
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1bf5df6a
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@6b9b9f57
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@1567ca08
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@43d9b738
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@43d9b738
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6455b768
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@377c404e
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e61dd57
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@b0a9ac0
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6535b8e9
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@29fefce8
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@238df8e2
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3dcecfaa
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@78214ca6
2015-11-24 14:26:22,32515-11-24 14:26:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@3e8a0821
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@1928dc07
2015-11-24 14:26:22,32515-11-24 14:26:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@1bf5df6a
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@522f63e7
2015-11-24 14:26:22,32515-11-24 14:26:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [clob] overrides previous : org.hibernate.type.ClobType@5771c6d6
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@522f63e7
2015-11-24 14:26:22,32515-11-24 14:26:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@5771c6d6
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2547fcd8
2015-11-24 14:26:22,32515-11-24 14:26:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@3fabb84d
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@7e762d0
2015-11-24 14:26:22,32515-11-24 14:26:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [blob] overrides previous : org.hibernate.type.BlobType@332933cb
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e762d0
2015-11-24 14:26:22,32515-11-24 14:26:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@332933cb
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@680849bd
2015-11-24 14:26:22,32515-11-24 14:26:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@5f05c0eb
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@49855c78
2015-11-24 14:26:22,32515-11-24 14:26:22  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@6b9b9f57
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (SessionFactoryImpl.java:228 LINE) SessionFactoryImpl.<init> -> Session factory constructed with filter configurations : {}
2015-11-24 14:26:22,32515-11-24 14:26:22 DEBUG (SessionFactoryImpl.java:232 LINE) SessionFactoryImpl.<init> -> instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, sun.boot.library.path=E:\JDK1.7\bin, java.vm.version=23.7-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.cache.use_query_cache=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\workspace\mobile-user, java.runtime.version=1.7.0_17-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=E:\JDK1.7\lib\endorsed, os.arch=amd64, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\gqy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, hibernate.cache.use_second_level_cache=true, sun.jnu.encoding=GBK, hibernate.jdbc.fetch_size=50, java.library.path=E:\JDK1.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\ProgramData\Lenovo\ReadyApps;E:\JDK\bin;E:\JDK\jre\bin;E:\Go\bin;E:\winscp\WinSCP\;E:\maven\apache-maven-3.2.3\bin;C:\Program Files (x86)\DBank\ClickUp;C:\Program Files (x86)\DBank\ClickUp;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\gqy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=after_transaction, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=gqy, java.class.path=G:\workspace\mobile-user\target\test-classes;G:\workspace\mobile-user\target\classes;H:\Respositories2\repository\com\alibaba\fastjson\1.2.4\fastjson-1.2.4.jar;H:\Respositories2\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;H:\Respositories2\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;H:\Respositories2\repository\io\netty\netty\4.0.0.Alpha8\netty-4.0.0.Alpha8.jar;H:\Respositories2\repository\jstl\jstl\1.2\jstl-1.2.jar;H:\Respositories2\repository\org\springframework\spring-aop\3.2.0.RELEASE\spring-aop-3.2.0.RELEASE.jar;H:\Respositories2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;H:\Respositories2\repository\org\springframework\spring-beans\3.2.0.RELEASE\spring-beans-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context\3.2.0.RELEASE\spring-context-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-expression\3.2.0.RELEASE\spring-expression-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context-support\3.2.0.RELEASE\spring-context-support-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-core\3.2.0.RELEASE\spring-core-3.2.0.RELEASE.jar;H:\Respositories2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;H:\Respositories2\repository\org\springframework\spring-jdbc\3.2.0.RELEASE\spring-jdbc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-orm\3.2.0.RELEASE\spring-orm-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-tx\3.2.0.RELEASE\spring-tx-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-web\3.2.0.RELEASE\spring-web-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-webmvc\3.2.0.RELEASE\spring-webmvc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\amqp\spring-amqp\1.2.0.RELEASE\spring-amqp-1.2.0.RELEASE.jar;H:\Respositories2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;H:\Respositories2\repository\com\fasterxml\jackson\core\jackson-core\2.1.0\jackson-core-2.1.0.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.13\jackson-jaxrs-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-xc\1.9.13\jackson-xc-1.9.13.jar;H:\Respositories2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;H:\Respositories2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;H:\Respositories2\repository\mysql\mysql-connector-java\5.1.25\mysql-connector-java-5.1.25.jar;H:\Respositories2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;H:\Respositories2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;H:\Respositories2\repository\org\aspectj\aspectjweaver\1.6.4\aspectjweaver-1.6.4.jar;H:\Respositories2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;H:\Respositories2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;H:\Respositories2\repository\commons-beanutils\commons-beanutils\1.9.0\commons-beanutils-1.9.0.jar;H:\Respositories2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;H:\Respositories2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;H:\Respositories2\repository\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;H:\Respositories2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;H:\Respositories2\repository\org\mybatis\mybatis-spring\1.2.0\mybatis-spring-1.2.0.jar;H:\Respositories2\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;H:\Respositories2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar;H:\Respositories2\repository\org\json\json\20090211\json-20090211.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-lgpl\1.8.1\jackson-core-lgpl-1.8.1.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-lgpl\1.8.1\jackson-mapper-lgpl-1.8.1.jar;H:\Respositories2\repository\org\freemarker\freemarker\2.3.16\freemarker-2.3.16.jar;H:\Respositories2\repository\opensymphony\sitemesh\2.4.2\sitemesh-2.4.2.jar;H:\Respositories2\repository\org\testng\testng\5.9\testng-5.9-jdk15.jar;H:\Respositories2\repository\junit\junit\4.7\junit-4.7.jar;H:\Respositories2\repository\cglib\cglib-asm\1.0\cglib-asm-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-core\1.0\jxls-core-1.0.jar;H:\Respositories2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;H:\Respositories2\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml\3.7\poi-ooxml-3.7.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml-schemas\3.7\poi-ooxml-schemas-3.7.jar;H:\Respositories2\repository\org\apache\xmlbeans\xmlbeans\2.3.0\xmlbeans-2.3.0.jar;H:\Respositories2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;H:\Respositories2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-reader\1.0\jxls-reader-1.0.jar;H:\Respositories2\repository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient\4.3.2\httpclient-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient-cache\4.3.2\httpclient-cache-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpmime\4.3.2\httpmime-4.3.2.jar;H:\Respositories2\repository\org\quartz-scheduler\quartz\1.8.6\quartz-1.8.6.jar;H:\Respositories2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;H:\Respositories2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;H:\Respositories2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;H:\Respositories2\repository\net\coobird\thumbnailator\0.4.7\thumbnailator-0.4.7.jar;H:\Respositories2\repository\jcifs\jcifs\1.3.17\jcifs-1.3.17.jar;H:\Respositories2\repository\org\apache\poi\poi\3.10.1\poi-3.10.1.jar;H:\Respositories2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;H:\Respositories2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;H:\Respositories2\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;H:\Respositories2\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;H:\Respositories2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;H:\Respositories2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;H:\Respositories2\repository\net\sf\supercsv\super-csv\2.2.0\super-csv-2.2.0.jar;H:\Respositories2\repository\org\bouncycastle\bcprov-jdk16\1.45\bcprov-jdk16-1.45.jar;H:\Respositories2\repository\jdom\jdom\1.0\jdom-1.0.jar;H:\Respositories2\repository\com\belerweb\pinyin4j\2.5.0\pinyin4j-2.5.0.jar;H:\Respositories2\repository\org\glassfish\jersey\ext\jersey-spring3\2.4.1\jersey-spring3-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-server\2.4.1\jersey-server-2.4.1.jar;H:\Respositories2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-api\2.2.0-b21\hk2-api-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\javax.inject\2.2.0-b21\javax.inject-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-locator\2.2.0-b21\hk2-locator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\asm-all-repackaged\2.2.0-b21\asm-all-repackaged-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\cglib\2.2.0-b21\cglib-2.2.0-b21.jar;H:\Respositories2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;H:\Respositories2\repository\org\glassfish\jersey\containers\jersey-container-servlet-core\2.4.1\jersey-container-servlet-core-2.4.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2\2.2.0-b21\hk2-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-utils\2.2.0-b21\hk2-utils-2.2.0-b21.jar;H:\Respositories2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;H:\Respositories2\repository\org\glassfish\hk2\config-types\2.2.0-b21\config-types-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\core\2.2.0-b21\core-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-config\2.2.0-b21\hk2-config-2.2.0-b21.jar;H:\Respositories2\repository\org\jvnet\tiger-types\1.4\tiger-types-1.4.jar;H:\Respositories2\repository\org\glassfish\hk2\external\bean-validator\2.2.0-b21\bean-validator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-runlevel\2.2.0-b21\hk2-runlevel-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\class-model\2.2.0-b21\class-model-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\spring-bridge\2.2.0-b21\spring-bridge-2.2.0-b21.jar;H:\Respositories2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\2.4.1\jersey-media-json-jackson-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-common\2.4.1\jersey-common-2.4.1.jar;H:\Respositories2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;H:\Respositories2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.1\osgi-resource-locator-1.0.1.jar;H:\Respositories2\repository\org\codehaus\groovy\groovy-all\2.2.0\groovy-all-2.2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\providers\jersey-test-framework-provider-external\2.5.1\jersey-test-framework-provider-external-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\jersey-test-framework-core\2.5.1\jersey-test-framework-core-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-client\2.5.1\jersey-client-2.5.1.jar;H:\Respositories2\repository\org\springframework\spring-test\3.2.6.RELEASE\spring-test-3.2.6.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session\1.0.1.RELEASE\spring-session-1.0.1.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session-data-redis\1.0.0.RELEASE\spring-session-data-redis-1.0.0.RELEASE.jar;H:\Respositories2\repository\org\apache\commons\commons-pool2\2.2\commons-pool2-2.2.jar;H:\Respositories2\repository\redis\clients\jedis\2.6.0\jedis-2.6.0.jar;H:\Respositories2\repository\org\springframework\data\spring-data-redis\1.4.1.RELEASE\spring-data-redis-1.4.1.RELEASE.jar;H:\Respositories2\repository\net\sf\ehcache\ehcache-core\2.6.11\ehcache-core-2.6.11.jar;H:\Respositories2\repository\org\hibernate3\hibernate3\3.0.0\hibernate3-3.0.0.jar;H:\Respositories2\repository\com\google\code\gson\gson\2.1\gson-2.1.jar;H:\Respositories2\repository\org\apache\openejb\javaee-api\5.0-1\javaee-api-5.0-1.jar;H:\Respositories2\repository\com\alibaba\druid\1.0.2\druid-1.0.2.jar;H:\Respositories2\repository\javax\faces\jsf-impl\1.2_04\jsf-impl-1.2_04.jar;H:\Respositories2\repository\javax\faces\jsf-api\1.2_04\jsf-api-1.2_04.jar;H:\Respositories2\repository\javax\transaction\jta\1.1\jta-1.1.jar;H:\Respositories2\repository\org\apache\ws\wss4j\1.5.1\wss4j-1.5.1.jar;H:\Respositories2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;H:\Respositories2\repository\hibernate\antlr\2.7.5H3\antlr-2.7.5H3.jar;H:\Respositories2\repository\javassist\javassist\3.9.0.GA\javassist-3.9.0.GA.jar;H:\Respositories2\repository\com\fx\mobile\mobile-model\0.0.1-SNAPSHOT\mobile-model-0.0.1-SNAPSHOT.jar;H:\Respositories2\repository\com\fx\mobile\mobile-core\0.0.1\mobile-core-0.0.1.jar;H:\Respositories2\repository\Decoder\sun.misc.BASE64Decoder\1.0.0\sun.misc.BASE64Decoder-1.0.0.jar;H:\Respositories2\repository\marketingFile\marketingFile\0.0.1\marketingFile-0.0.1.jar;H:\Respositories2\repository\com\qq\connect\Sdk4J\1.0\Sdk4J-1.0.jar;H:\Respositories2\repository\org\apache\commons\commons-io\1.3.2\commons-io-1.3.2.jar;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.query.substitutions=true 'Y', false 'N', hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=E:\JDK1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 59878 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.fx.mobile.junit.UserOperateDaoImplTest, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_17, java.ext.dirs=E:\JDK1.7\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=E:\JDK1.7\lib\resources.jar;E:\JDK1.7\lib\rt.jar;E:\JDK1.7\lib\sunrsasign.jar;E:\JDK1.7\lib\jsse.jar;E:\JDK1.7\lib\jce.jar;E:\JDK1.7\lib\charsets.jar;E:\JDK1.7\lib\jfr.jar;E:\JDK1.7\classes, java.vendor=Oracle Corporation, hibernate.jdbc.batch_size=25, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-11-24 14:26:22,35615-11-24 14:26:22 DEBUG (CacheManager.java:684 LINE) CacheManager.parseConfiguration -> Configuring ehcache from classpath.
2015-11-24 14:26:22,35615-11-24 14:26:22 DEBUG (ConfigurationFactory.java:132 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from ehcache.xml found in the classpath: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:26:22,35615-11-24 14:26:22 DEBUG (ConfigurationFactory.java:98 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from URL: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:26:22,35615-11-24 14:26:22 DEBUG (ConfigurationFactory.java:150 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from InputStream
2015-11-24 14:26:22,38715-11-24 14:26:22 DEBUG (DiskStoreConfiguration.java:141 LINE) DiskStoreConfiguration.translatePath -> Disk Store Path: C:\Users\gqy\AppData\Local\Temp\
2015-11-24 14:26:22,41815-11-24 14:26:22 DEBUG (PropertyUtil.java:88 LINE) PropertyUtil.parseProperties -> propertiesString is null.
2015-11-24 14:26:22,43415-11-24 14:26:22 DEBUG (ConfigurationHelper.java:185 LINE) ConfigurationHelper.createCacheManagerEventListener -> No CacheManagerEventListenerFactory class specified. Skipping...
2015-11-24 14:26:22,51215-11-24 14:26:22 DEBUG (Cache.java:955 LINE) Cache.createBootstrapCacheLoader -> No BootstrapCacheLoaderFactory class specified. Skipping...
2015-11-24 14:26:22,51215-11-24 14:26:22 DEBUG (Cache.java:929 LINE) Cache.createCacheWriter -> CacheWriter factory not configured. Skipping...
2015-11-24 14:26:22,51215-11-24 14:26:22 DEBUG (ConfigurationHelper.java:96 LINE) ConfigurationHelper.createCacheExceptionHandler -> No CacheExceptionHandlerFactory class specified. Skipping...
2015-11-24 14:26:22,54315-11-24 14:26:22 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:26:22,54315-11-24 14:26:22 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:26:22,54315-11-24 14:26:22 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:26:22,73115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.NoteNumbRecord
2015-11-24 14:26:22,73115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from note_numb_record where id =?
2015-11-24 14:26:22,73115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select notenumbre_.id, notenumbre_.node_numb as node2_1_ from note_numb_record notenumbre_ where notenumbre_.id=?
2015-11-24 14:26:22,73115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into note_numb_record (node_numb, id) values (?, ?)
2015-11-24 14:26:22,73115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update note_numb_record set node_numb=? where id=?
2015-11-24 14:26:22,73115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from note_numb_record where id=?
2015-11-24 14:26:22,73115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into note_numb_record (node_numb) values (?)
2015-11-24 14:26:22,73115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.CrashLog
2015-11-24 14:26:22,73115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from marketing1.crash_log where id =?
2015-11-24 14:26:22,73115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select crashlog_.id, crashlog_.url as url2_, crashlog_.describes as describes2_, crashlog_.addDate as addDate2_ from marketing1.crash_log crashlog_ where crashlog_.id=?
2015-11-24 14:26:22,73115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into marketing1.crash_log (url, describes, addDate, id) values (?, ?, ?, ?)
2015-11-24 14:26:22,73115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update marketing1.crash_log set url=?, describes=?, addDate=? where id=?
2015-11-24 14:26:22,73115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from marketing1.crash_log where id=?
2015-11-24 14:26:22,73115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into marketing1.crash_log (url, describes, addDate) values (?, ?, ?)
2015-11-24 14:26:22,77115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.UserOperate
2015-11-24 14:26:22,77115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from user_operate where id =?
2015-11-24 14:26:22,77115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select useroperat_.id, useroperat_.userName as userName0_, useroperat_.userPassword as userPass3_0_, useroperat_.phicomm_id as phicomm4_0_, useroperat_.userEmail as userEmail0_, useroperat_.user_PhoneNumb as user6_0_, useroperat_.userType as userType0_, useroperat_.isChecked as isChecked0_, useroperat_.nickname as nickname0_, useroperat_.figureurl as figureurl0_, useroperat_.sex as sex0_, useroperat_.province as province0_, useroperat_.city as city0_, useroperat_.birthday as birthday0_, useroperat_.open_id as open15_0_, useroperat_.open_key as open16_0_, useroperat_.access_token as access17_0_, useroperat_.expirese_in as expirese18_0_, useroperat_.devinfo as devinfo0_, useroperat_.userinfo as userinfo0_, useroperat_.openqq as openqq0_, useroperat_.openqqinfo as openqqinfo0_, useroperat_.opensina as opensina0_, useroperat_.opensinainfo as opensin24_0_, useroperat_.createTime as createTime0_, useroperat_.updateTime as updateTime0_, useroperat_.lastLoginTime as lastLog27_0_ from user_operate useroperat_ where useroperat_.id=?
2015-11-24 14:26:22,77115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:26:22,77115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update user_operate set userName=?, userPassword=?, phicomm_id=?, userEmail=?, user_PhoneNumb=?, userType=?, isChecked=?, nickname=?, figureurl=?, sex=?, province=?, city=?, birthday=?, open_id=?, open_key=?, access_token=?, expirese_in=?, devinfo=?, userinfo=?, openqq=?, openqqinfo=?, opensina=?, opensinainfo=?, createTime=?, updateTime=?, lastLoginTime=? where id=?
2015-11-24 14:26:22,77115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from user_operate where id=?
2015-11-24 14:26:22,77115-11-24 14:26:22 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:26:22,78715-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [NONE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:26:22,78715-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:26:22,78715-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:26:22,78715-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE_NOWAIT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:26:22,78715-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [FORCE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:26:22,78715-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? lock in share mode
2015-11-24 14:26:22,78715-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_WRITE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:26:22,78715-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:26:22,78715-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:26:22,78715-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:26:22,80215-11-24 14:26:22 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:26:22,80215-11-24 14:26:22 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:26:22,80215-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [NONE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:26:22,80215-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:26:22,80215-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:26:22,80215-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE_NOWAIT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:26:22,80215-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [FORCE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:26:22,80215-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? lock in share mode
2015-11-24 14:26:22,80215-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_WRITE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:26:22,80215-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:26:22,80215-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:26:22,80215-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:26:22,80215-11-24 14:26:22 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:26:22,80215-11-24 14:26:22 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [NONE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE_NOWAIT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [FORCE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? lock in share mode
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_WRITE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (SessionFactoryObjectFactory.java:61 LINE) SessionFactoryObjectFactory.<clinit> -> initializing class SessionFactoryObjectFactory
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (SessionFactoryObjectFactory.java:99 LINE) SessionFactoryObjectFactory.addInstance -> registered: c1485e4f-b44d-4df8-a018-e837382e2426 (unnamed)
2015-11-24 14:26:22,81815-11-24 14:26:22  INFO (SessionFactoryObjectFactory.java:105 LINE) SessionFactoryObjectFactory.addInstance -> Not binding factory to JNDI, no JNDI name configured
2015-11-24 14:26:22,81815-11-24 14:26:22 DEBUG (SessionFactoryImpl.java:369 LINE) SessionFactoryImpl.<init> -> instantiated session factory
2015-11-24 14:26:22,83415-11-24 14:26:22  INFO (SchemaUpdate.java:155 LINE) SchemaUpdate.execute -> Running hbm2ddl schema update
2015-11-24 14:26:22,83415-11-24 14:26:22  INFO (SchemaUpdate.java:167 LINE) SchemaUpdate.execute -> fetching database metadata
2015-11-24 14:26:22,83415-11-24 14:26:22  INFO (SchemaUpdate.java:179 LINE) SchemaUpdate.execute -> updating schema
2015-11-24 14:26:22,83415-11-24 14:26:22 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:26:22,83415-11-24 14:26:22 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:26:22,83415-11-24 14:26:22 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:26:22,83415-11-24 14:26:22 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:26:22,83415-11-24 14:26:22 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:26:22,83415-11-24 14:26:22 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:26:22,83415-11-24 14:26:22 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:26:22,83415-11-24 14:26:22 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:26:22,83415-11-24 14:26:22 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:26:22,83415-11-24 14:26:22 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:26:22,83415-11-24 14:26:22 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:26:22,83415-11-24 14:26:22 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:26:22,88115-11-24 14:26:22  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:26:22,88115-11-24 14:26:22 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:26:22,91215-11-24 14:26:22  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.note_numb_record
2015-11-24 14:26:22,91215-11-24 14:26:22  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [id, node_numb]
2015-11-24 14:26:22,91215-11-24 14:26:22  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:26:22,91215-11-24 14:26:22  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:26:22,99015-11-24 14:26:22  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.user_operate
2015-11-24 14:26:22,99015-11-24 14:26:22  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [birthday, sex, updatetime, open_id, openqq, opensina, userinfo, user_phonenumb, city, createtime, id, userpassword, username, lastlogintime, province, opensinainfo, figureurl, phicomm_id, open_key, access_token, nickname, usertype, ischecked, openqqinfo, useremail, devinfo, expirese_in]
2015-11-24 14:26:22,99015-11-24 14:26:22  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:26:22,99015-11-24 14:26:22  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:26:22,99015-11-24 14:26:22  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:26:22,99015-11-24 14:26:22 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:26:22,99015-11-24 14:26:22 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:26:22,99015-11-24 14:26:22 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:26:22,99015-11-24 14:26:22 DEBUG (SchemaUpdate.java:203 LINE) SchemaUpdate.execute -> create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:26:22,99015-11-24 14:26:22 ERROR (SchemaUpdate.java:212 LINE) SchemaUpdate.execute -> Unsuccessful: create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:26:22,99015-11-24 14:26:22 ERROR (SchemaUpdate.java:213 LINE) SchemaUpdate.execute -> Unknown database 'marketing1'
2015-11-24 14:26:22,99015-11-24 14:26:22  INFO (SchemaUpdate.java:217 LINE) SchemaUpdate.execute -> schema update complete
2015-11-24 14:26:22,99015-11-24 14:26:22  INFO (UpdateTimestampsCache.java:57 LINE) UpdateTimestampsCache.<init> -> starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:26:23,00615-11-24 14:26:23  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
2015-11-24 14:26:23,02115-11-24 14:26:23 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:26:23,03715-11-24 14:26:23 DEBUG (DiskStorePathManager.java:169 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Using diskstore path C:\Users\gqy\AppData\Local\Temp
2015-11-24 14:26:23,03715-11-24 14:26:23 DEBUG (DiskStorePathManager.java:170 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Holding exclusive lock on C:\Users\gqy\AppData\Local\Temp\.ehcache-diskstore.lock
2015-11-24 14:26:23,03715-11-24 14:26:23 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 14:26:23,03715-11-24 14:26:23 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:26:23,06815-11-24 14:26:23 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:26:23,06815-11-24 14:26:23 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:26:23,11515-11-24 14:26:23 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:26:23,11515-11-24 14:26:23 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.UpdateTimestampsCache'.
2015-11-24 14:26:23,11515-11-24 14:26:23 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:26:23,13115-11-24 14:26:23  INFO (StandardQueryCache.java:76 LINE) StandardQueryCache.<init> -> starting query cache at region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:26:23,13115-11-24 14:26:23  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
2015-11-24 14:26:23,13115-11-24 14:26:23 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.StandardQueryCache
2015-11-24 14:26:23,13115-11-24 14:26:23 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 14:26:23,13115-11-24 14:26:23 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:26:23,13115-11-24 14:26:23 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:26:23,13115-11-24 14:26:23 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:26:23,13115-11-24 14:26:23 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.StandardQueryCache
2015-11-24 14:26:23,13115-11-24 14:26:23 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.StandardQueryCache'.
2015-11-24 14:26:23,13115-11-24 14:26:23 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:26:23,13115-11-24 14:26:23 DEBUG (SessionFactoryImpl.java:539 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named HQL queries
2015-11-24 14:26:23,13115-11-24 14:26:23 DEBUG (SessionFactoryImpl.java:559 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named SQL queries
2015-11-24 14:26:23,13115-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:23,13115-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'sessionFactory'
2015-11-24 14:26:23,13115-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userOperateDao'
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userOperateDao'
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userInterfaceDao'
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userInterfaceDao'
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userInterfaceDao' to allow for resolving potential circular references
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userInterfaceDao'
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userInterfaceDao'
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'noteNumRecordDao'
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'noteNumRecordDao'
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'noteNumRecordDao' to allow for resolving potential circular references
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'noteNumRecordDao'
2015-11-24 14:26:23,14615-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:23,16215-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'noteNumRecordDao'
2015-11-24 14:26:23,16215-11-24 14:26:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'crashLogDao'
2015-11-24 14:26:23,16215-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'crashLogDao'
2015-11-24 14:26:23,16215-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'crashLogDao' to allow for resolving potential circular references
2015-11-24 14:26:23,17715-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:26:23,17715-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'crashLogDao'
2015-11-24 14:26:23,17715-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:23,17715-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'crashLogDao'
2015-11-24 14:26:23,17715-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'dataSource'
2015-11-24 14:26:23,17715-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:26:23,17715-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:26:23,17715-11-24 14:26:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:26:23,17715-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:26:23,19315-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2015-11-24 14:26:23,19315-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:26:23,19315-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:26:23,19315-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:26:23,19315-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:23,19315-11-24 14:26:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'transactionManager'
2015-11-24 14:26:23,19315-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'transactionManager'
2015-11-24 14:26:23,20915-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-11-24 14:26:23,20915-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:26:23,20915-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-11-24 14:26:23,22415-11-24 14:26:23  INFO (HibernateTransactionManager.java:415 LINE) HibernateTransactionManager.afterPropertiesSet -> Using DataSource [org.apache.commons.dbcp.BasicDataSource@57049def] of Hibernate SessionFactory for HibernateTransactionManager
2015-11-24 14:26:23,22415-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:23,22415-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'transactionManager'
2015-11-24 14:26:23,22415-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:26:23,22415-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:26:23,22415-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:26:23,22415-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:26:23,22415-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:26:23,22415-11-24 14:26:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'operateService'
2015-11-24 14:26:23,22415-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'operateService'
2015-11-24 14:26:23,22415-11-24 14:26:23 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserOperateServiceImp]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:26:23,22415-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'operateService' to allow for resolving potential circular references
2015-11-24 14:26:23,25615-11-24 14:26:23 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'operateService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:26:23,27115-11-24 14:26:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'fileRemote'
2015-11-24 14:26:23,27115-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'fileRemote'
2015-11-24 14:26:23,27115-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'fileRemote' to allow for resolving potential circular references
2015-11-24 14:26:23,28715-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'fileRemote'
2015-11-24 14:26:23,30215-11-24 14:26:23 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static
2015-11-24 14:26:23,31815-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'fileRemote'
2015-11-24 14:26:23,31815-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:26:23,31815-11-24 14:26:23 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'operateService' to bean named 'userOperateDao'
2015-11-24 14:26:23,31815-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:23,31815-11-24 14:26:23 DEBUG (AbstractFallbackTransactionAttributeSource.java:106 LINE) AbstractFallbackTransactionAttributeSource.getTransactionAttribute -> Adding transactional method 'registAccount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '',-java.lang.Throwable
2015-11-24 14:26:23,31815-11-24 14:26:23 DEBUG (AbstractAutoProxyCreator.java:534 LINE) AbstractAutoProxyCreator.buildAdvisors -> Creating implicit proxy for bean 'operateService' with 0 common interceptors and 1 specific interceptors
2015-11-24 14:26:23,31815-11-24 14:26:23 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.fx.mobile.user.service.impl.UserOperateServiceImp@4ebbd9cc]
2015-11-24 14:26:23,33415-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'operateService'
2015-11-24 14:26:23,33415-11-24 14:26:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'SpringContextUtil'
2015-11-24 14:26:23,33415-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'SpringContextUtil'
2015-11-24 14:26:23,33415-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'SpringContextUtil' to allow for resolving potential circular references
2015-11-24 14:26:23,33415-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:23,33415-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'SpringContextUtil'
2015-11-24 14:26:23,33415-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'fileRemote'
2015-11-24 14:26:23,33415-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:26:23,33415-11-24 14:26:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userinterfaceService'
2015-11-24 14:26:23,33415-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userinterfaceService'
2015-11-24 14:26:23,33415-11-24 14:26:23 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserInterfaceServiceImpl]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:26:23,33415-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userinterfaceService' to allow for resolving potential circular references
2015-11-24 14:26:23,33415-11-24 14:26:23 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'userinterfaceService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:26:23,34915-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userInterfaceDao'
2015-11-24 14:26:23,34915-11-24 14:26:23 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'userinterfaceService' to bean named 'userInterfaceDao'
2015-11-24 14:26:23,34915-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:23,34915-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userinterfaceService'
2015-11-24 14:26:23,34915-11-24 14:26:23 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'urlProperties'
2015-11-24 14:26:23,34915-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'urlProperties'
2015-11-24 14:26:23,34915-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'urlProperties' to allow for resolving potential circular references
2015-11-24 14:26:23,34915-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:23,34915-11-24 14:26:23 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'urlProperties'
2015-11-24 14:26:23,34915-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:26:23,34915-11-24 14:26:23 DEBUG (AbstractApplicationContext.java:858 LINE) AbstractApplicationContext.initLifecycleProcessor -> Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@22b2806]
2015-11-24 14:26:23,34915-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:26:23,36515-11-24 14:26:23 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-11-24 14:26:23,36515-11-24 14:26:23 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-11-24 14:26:23,36515-11-24 14:26:23 DEBUG (PropertySourcesPropertyResolver.java:93 LINE) PropertySourcesPropertyResolver.getProperty -> Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-11-24 14:26:23,36515-11-24 14:26:23 DEBUG (CacheAwareContextLoaderDelegate.java:93 LINE) CacheAwareContextLoaderDelegate.loadContext -> Storing ApplicationContext in cache under key [[MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:26:23,36515-11-24 14:26:23 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 14:26:23,36515-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:26:23,36515-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:26:23,36515-11-24 14:26:23 DEBUG (SessionFactoryUtils.java:322 LINE) SessionFactoryUtils.doGetSession -> Opening Hibernate Session
2015-11-24 14:26:23,41215-11-24 14:26:23 DEBUG (SessionImpl.java:265 LINE) SessionImpl.<init> -> opened session at timestamp: 5932426786263040
2015-11-24 14:26:23,47415-11-24 14:26:23 DEBUG (QueryTranslatorImpl.java:274 LINE) QueryTranslatorImpl.parse -> parse() - HQL: from com.fx.mobile.model.UserOperate where userName='芳草碧连天' || userPhoneNumb='芳草碧连天'  || userEmail='芳草碧连天'
2015-11-24 14:26:23,49015-11-24 14:26:23 DEBUG (QueryTranslatorImpl.java:293 LINE) QueryTranslatorImpl.showHqlAst -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'fx'
    |           |  |  \-[IDENT] Node: 'mobile'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'UserOperate'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[EQ] Node: '='
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'userName'
          |  |  \-[METHOD_CALL] Node: '||'
          |  |     +-[IDENT] Node: 'concat'
          |  |     \-[EXPR_LIST] Node: 'concatList'
          |  |        +-[QUOTED_STRING] Node: ''\u82b3\u8349\u78a7\u8fde\u5929''
          |  |        \-[IDENT] Node: 'userPhoneNumb'
          |  \-[METHOD_CALL] Node: '||'
          |     +-[IDENT] Node: 'concat'
          |     \-[EXPR_LIST] Node: 'concatList'
          |        +-[QUOTED_STRING] Node: ''\u82b3\u8349\u78a7\u8fde\u5929''
          |        \-[IDENT] Node: 'userEmail'
          \-[QUOTED_STRING] Node: ''\u82b3\u8349\u78a7\u8fde\u5929''

2015-11-24 14:26:23,49015-11-24 14:26:23 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:26:23,53715-11-24 14:26:23 DEBUG (HqlSqlBaseWalker.java:111 LINE) HqlSqlBaseWalker.beforeStatement -> select << begin [level=1, statement=select]
2015-11-24 14:26:23,55215-11-24 14:26:23 DEBUG (FromElement.java:157 LINE) FromElement.doInitialize -> FromClause{level=1} :  com.fx.mobile.model.UserOperate (no alias) -> useroperat0_
2015-11-24 14:26:23,56815-11-24 14:26:23 ERROR (ErrorCounter.java:56 LINE) ErrorCounter.reportError -> <AST>:1:77: unexpected AST node: =
2015-11-24 14:26:23,56815-11-24 14:26:23 DEBUG (ErrorCounter.java:51 LINE) ErrorCounter.reportError -> <AST>:1:77: unexpected AST node: =
<AST>:1:77: unexpected AST node: =
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.exprOrSubquery(HqlSqlBaseWalker.java:4553)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:3944)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2047)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:831)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:617)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:301)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:244)
	at org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:256)
	at org.hibernate.hql.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:187)
	at org.hibernate.hql.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:138)
	at org.hibernate.engine.query.HQLQueryPlan.<init>(HQLQueryPlan.java:101)
	at org.hibernate.engine.query.HQLQueryPlan.<init>(HQLQueryPlan.java:80)
	at org.hibernate.engine.query.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:124)
	at org.hibernate.impl.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:156)
	at org.hibernate.impl.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:135)
	at org.hibernate.impl.SessionImpl.createQuery(SessionImpl.java:1770)
	at org.springframework.orm.hibernate3.HibernateTemplate$30.doInHibernate(HibernateTemplate.java:914)
	at org.springframework.orm.hibernate3.HibernateTemplate$30.doInHibernate(HibernateTemplate.java:912)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:406)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:912)
	at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:904)
	at com.fx.mobile.user.dao.impl.UserOperateDaoImp.findUserByName(UserOperateDaoImp.java:212)
	at com.fx.mobile.junit.UserOperateDaoImplTest.getListTest(UserOperateDaoImplTest.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
2015-11-24 14:26:23,56815-11-24 14:26:23 ERROR (ErrorCounter.java:56 LINE) ErrorCounter.reportError ->  right-hand operand of a binary operator was null
2015-11-24 14:26:23,56815-11-24 14:26:23 DEBUG (ErrorCounter.java:51 LINE) ErrorCounter.reportError ->  right-hand operand of a binary operator was null
 right-hand operand of a binary operator was null
	at org.hibernate.hql.ast.tree.BinaryLogicOperatorNode.initialize(BinaryLogicOperatorNode.java:55)
	at org.hibernate.hql.ast.HqlSqlWalker.prepareLogicOperator(HqlSqlWalker.java:1199)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.comparisonExpr(HqlSqlBaseWalker.java:4414)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.logicalExpr(HqlSqlBaseWalker.java:2047)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.whereClause(HqlSqlBaseWalker.java:831)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.query(HqlSqlBaseWalker.java:617)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.selectStatement(HqlSqlBaseWalker.java:301)
	at org.hibernate.hql.antlr.HqlSqlBaseWalker.statement(HqlSqlBaseWalker.java:244)
	at org.hibernate.hql.ast.QueryTranslatorImpl.analyze(QueryTranslatorImpl.java:256)
	at org.hibernate.hql.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:187)
	at org.hibernate.hql.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:138)
	at org.hibernate.engine.query.HQLQueryPlan.<init>(HQLQueryPlan.java:101)
	at org.hibernate.engine.query.HQLQueryPlan.<init>(HQLQueryPlan.java:80)
	at org.hibernate.engine.query.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:124)
	at org.hibernate.impl.AbstractSessionImpl.getHQLQueryPlan(AbstractSessionImpl.java:156)
	at org.hibernate.impl.AbstractSessionImpl.createQuery(AbstractSessionImpl.java:135)
	at org.hibernate.impl.SessionImpl.createQuery(SessionImpl.java:1770)
	at org.springframework.orm.hibernate3.HibernateTemplate$30.doInHibernate(HibernateTemplate.java:914)
	at org.springframework.orm.hibernate3.HibernateTemplate$30.doInHibernate(HibernateTemplate.java:912)
	at org.springframework.orm.hibernate3.HibernateTemplate.doExecute(HibernateTemplate.java:406)
	at org.springframework.orm.hibernate3.HibernateTemplate.executeWithNativeSession(HibernateTemplate.java:374)
	at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:912)
	at org.springframework.orm.hibernate3.HibernateTemplate.find(HibernateTemplate.java:904)
	at com.fx.mobile.user.dao.impl.UserOperateDaoImp.findUserByName(UserOperateDaoImp.java:212)
	at com.fx.mobile.junit.UserOperateDaoImplTest.getListTest(UserOperateDaoImplTest.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:74)
	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:83)
	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:88)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:675)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
2015-11-24 14:26:23,56815-11-24 14:26:23 DEBUG (HqlSqlBaseWalker.java:117 LINE) HqlSqlBaseWalker.beforeStatementCompletion -> select : finishing up [level=1, statement=select]
2015-11-24 14:26:23,56815-11-24 14:26:23 DEBUG (HqlSqlWalker.java:625 LINE) HqlSqlWalker.processQuery -> processQuery() :  ( SELECT ( FromClause{level=1} user_operate useroperat0_ ) ( where ( = '芳草碧连天' ) ) )
2015-11-24 14:26:23,58415-11-24 14:26:23 DEBUG (HqlSqlWalker.java:868 LINE) HqlSqlWalker.createSelectClauseFromFromClause -> Derived SELECT clause created.
2015-11-24 14:26:23,58415-11-24 14:26:23 DEBUG (JoinProcessor.java:179 LINE) JoinProcessor.addJoinNodes -> Using FROM fragment [user_operate useroperat0_]
2015-11-24 14:26:23,58415-11-24 14:26:23 DEBUG (HqlSqlBaseWalker.java:123 LINE) HqlSqlBaseWalker.afterStatementCompletion -> select >> end [level=1, statement=select]
2015-11-24 14:26:23,58415-11-24 14:26:23 DEBUG (QueryTranslatorImpl.java:260 LINE) QueryTranslatorImpl.analyze -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_operate)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'useroperat0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}}
    |  \-[SQL_TOKEN] SqlFragment: 'useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[useroperat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_operate useroperat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          \-[QUOTED_STRING] LiteralNode: ''\u82b3\u8349\u78a7\u8fde\u5929''

2015-11-24 14:26:23,58415-11-24 14:26:23 DEBUG (SessionFactoryUtils.java:800 LINE) SessionFactoryUtils.closeSession -> Closing Hibernate Session
2015-11-24 14:26:23,59915-11-24 14:26:23 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@3b1a82fd testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@498dce5b, testMethod = getListTest@UserOperateDaoImplTest, testException = org.springframework.orm.hibernate3.HibernateQueryException: unexpected AST node: = near line 1, column 77 [from com.fx.mobile.model.UserOperate where userName='芳草碧连天' || userPhoneNumb='芳草碧连天'  || userEmail='芳草碧连天']; nested exception is org.hibernate.hql.ast.QuerySyntaxException: unexpected AST node: = near line 1, column 77 [from com.fx.mobile.model.UserOperate where userName='芳草碧连天' || userPhoneNumb='芳草碧连天'  || userEmail='芳草碧连天'], mergedContextConfiguration = [MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 14:26:23,59915-11-24 14:26:23 DEBUG (DirtiesContextTestExecutionListener.java:138 LINE) DirtiesContextTestExecutionListener.afterTestClass -> After test class: context [[TestContext@3b1a82fd testClass = UserOperateDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
2015-11-24 14:26:23,59915-11-24 14:26:23  INFO (AbstractApplicationContext.java:1042 LINE) AbstractApplicationContext.doClose -> Closing org.springframework.context.support.GenericApplicationContext@20a893d5: startup date [Tue Nov 24 14:26:19 CST 2015]; root of context hierarchy
2015-11-24 14:26:23,59915-11-24 14:26:23 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:26:23,59915-11-24 14:26:23  INFO (DefaultSingletonBeanRegistry.java:444 LINE) DefaultSingletonBeanRegistry.destroySingletons -> Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@245a690: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:26:23,59915-11-24 14:26:23 DEBUG (DefaultSingletonBeanRegistry.java:500 LINE) DefaultSingletonBeanRegistry.destroyBean -> Retrieved dependent beans for bean 'userOperateDao': [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:26:23,59915-11-24 14:26:23 DEBUG (DisposableBeanAdapter.java:219 LINE) DisposableBeanAdapter.destroy -> Invoking destroy() on bean with name 'sessionFactory'
2015-11-24 14:26:23,59915-11-24 14:26:23  INFO (AbstractSessionFactoryBean.java:223 LINE) AbstractSessionFactoryBean.destroy -> Closing Hibernate SessionFactory
2015-11-24 14:26:23,59915-11-24 14:26:23  INFO (SessionFactoryImpl.java:927 LINE) SessionFactoryImpl.close -> closing
2015-11-24 14:26:23,63115-11-24 14:26:23 DEBUG (DisposableBeanAdapter.java:295 LINE) DisposableBeanAdapter.invokeCustomDestroyMethod -> Invoking destroy method 'close' on bean with name 'dataSource'
2015-11-24 14:28:51,70115-11-24 14:28:51 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 14:28:51,80515-11-24 14:28:51 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@6ed76e89 declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 14:28:51,80915-11-24 14:28:51 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:28:51,81415-11-24 14:28:51 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 14:28:51,84015-11-24 14:28:51 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:28:51,84015-11-24 14:28:51 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:28:51,84315-11-24 14:28:51 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:28:51,84315-11-24 14:28:51 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:28:51,94815-11-24 14:28:51 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:28:51,94915-11-24 14:28:51 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:28:51,95015-11-24 14:28:51 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:28:51,95115-11-24 14:28:51 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:28:51,95215-11-24 14:28:51 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:28:51,95215-11-24 14:28:51 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:28:51,95415-11-24 14:28:51 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:28:51,95415-11-24 14:28:51 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:28:51,95815-11-24 14:28:51 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@3b1a82fd testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@498dce5b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 14:28:51,95915-11-24 14:28:51 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 14:28:51,95915-11-24 14:28:51 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:28:52,15115-11-24 14:28:52 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:28:52,15315-11-24 14:28:52 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:28:52,15515-11-24 14:28:52 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:28:52,15515-11-24 14:28:52 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:28:52,16115-11-24 14:28:52 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:28:52,16215-11-24 14:28:52 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:28:52,16215-11-24 14:28:52 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:28:52,16215-11-24 14:28:52 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:28:52,16915-11-24 14:28:52 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 14:28:52,17015-11-24 14:28:52 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 14:28:52,17415-11-24 14:28:52 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 14:28:52,17515-11-24 14:28:52  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 14:28:52,19415-11-24 14:28:52 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:28:52,25115-11-24 14:28:52 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 14:28:52,25715-11-24 14:28:52 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 14:28:52,26015-11-24 14:28:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:28:52,33115-11-24 14:28:52 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:28:52,38715-11-24 14:28:52  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 14:28:52,40915-11-24 14:28:52 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:28:52,41215-11-24 14:28:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:28:52,44315-11-24 14:28:52 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:28:52,45315-11-24 14:28:52  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 14:28:52,48015-11-24 14:28:52 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:28:52,48915-11-24 14:28:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:28:52,53915-11-24 14:28:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 14:28:52,54315-11-24 14:28:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:28:52,55015-11-24 14:28:52 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:28:52,56115-11-24 14:28:52 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 14:28:52,58915-11-24 14:28:52  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 14:28:52,59615-11-24 14:28:52 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:28:52,59815-11-24 14:28:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:28:52,61415-11-24 14:28:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 14:28:52,62015-11-24 14:28:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:28:52,63515-11-24 14:28:52 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:28:52,68615-11-24 14:28:52  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 14:28:52,68915-11-24 14:28:52  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 14:28:52,69815-11-24 14:28:52 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 14:28:52,69815-11-24 14:28:52 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:28:52,69915-11-24 14:28:52 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:28:52,70115-11-24 14:28:52 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 14:28:52,76015-11-24 14:28:52 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 14:28:52,79715-11-24 14:28:52 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 14:28:52,79915-11-24 14:28:52 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 14:28:52,81015-11-24 14:28:52 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 14:28:52,82215-11-24 14:28:52  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 14:28:52,82315-11-24 14:28:52  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 14:28:52,83915-11-24 14:28:52 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:28:52,84215-11-24 14:28:52 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:28:52,86115-11-24 14:28:52 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:28:52,86215-11-24 14:28:52 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 14:28:52,86615-11-24 14:28:52  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@20a893d5: startup date [Tue Nov 24 14:28:52 CST 2015]; root of context hierarchy
2015-11-24 14:28:52,86715-11-24 14:28:52 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@20a893d5: org.springframework.beans.factory.support.DefaultListableBeanFactory@2aba391a: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 14:28:53,01715-11-24 14:28:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:28:53,01815-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:28:53,04515-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:28:53,04815-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:28:53,21915-11-24 14:28:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:28:53,21915-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:28:53,22315-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 14:28:53,38715-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:28:53,38715-11-24 14:28:53  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 14:28:53,40315-11-24 14:28:53  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 14:28:53,40315-11-24 14:28:53  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 14:28:53,41015-11-24 14:28:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:28:53,41115-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:28:53,41215-11-24 14:28:53  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 14:28:53,41315-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:28:53,41315-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:28:53,41315-11-24 14:28:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:28:53,41315-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:28:53,41415-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:28:53,41515-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:28:53,41515-11-24 14:28:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:28:53,41615-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:28:53,42215-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:28:53,42315-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:28:53,42315-11-24 14:28:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:28:53,42415-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:28:53,42415-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:28:53,42515-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:28:53,42515-11-24 14:28:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:28:53,42615-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:28:53,42615-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 14:28:53,42615-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:28:53,42715-11-24 14:28:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:28:53,42715-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:28:53,43815-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 14:28:53,47715-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:28:53,48115-11-24 14:28:53 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@48ec350d]
2015-11-24 14:28:53,54115-11-24 14:28:53 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@3dd1d4b8]
2015-11-24 14:28:53,55815-11-24 14:28:53  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2aba391a: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:28:53,55915-11-24 14:28:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 14:28:53,56015-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 14:28:53,57515-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 14:28:53,58315-11-24 14:28:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 14:28:53,58315-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 14:28:53,60115-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 14:28:53,61515-11-24 14:28:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 14:28:53,61515-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 14:28:53,80315-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 14:28:53,83315-11-24 14:28:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:28:53,89615-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:28:53,89715-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:28:53,89815-11-24 14:28:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:28:53,89915-11-24 14:28:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:28:53,89915-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:28:53,90015-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:28:53,90115-11-24 14:28:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:28:53,90215-11-24 14:28:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:28:53,90315-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:28:53,90515-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:28:53,90515-11-24 14:28:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:28:53,91115-11-24 14:28:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:28:53,91215-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:28:53,91515-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:28:53,91515-11-24 14:28:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:28:53,91715-11-24 14:28:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:28:53,91815-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:28:53,91815-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:28:53,91915-11-24 14:28:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:28:53,93415-11-24 14:28:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:53,93415-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:53,93815-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 14:28:53,96715-11-24 14:28:53 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:28:53,96815-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:28:53,96915-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 14:28:53,98015-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:28:53,98115-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:53,98615-11-24 14:28:53 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 14:28:53,98715-11-24 14:28:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:28:53,98815-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:28:53,98815-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:28:53,98815-11-24 14:28:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:28:53,98915-11-24 14:28:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:28:53,99015-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:28:53,99015-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:28:53,99215-11-24 14:28:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:28:53,99315-11-24 14:28:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:28:53,99415-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:28:53,99415-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:28:53,99415-11-24 14:28:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:28:53,99515-11-24 14:28:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:28:53,99615-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:28:53,99615-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:28:53,99715-11-24 14:28:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:28:53,99815-11-24 14:28:53 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:28:53,99815-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:28:53,99915-11-24 14:28:53 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:28:53,99915-11-24 14:28:53 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:28:54,00415-11-24 14:28:54 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 14:28:54,16115-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@522fca87
2015-11-24 14:28:54,16215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@522fca87
2015-11-24 14:28:54,16215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@522fca87
2015-11-24 14:28:54,16515-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ccf4c0e
2015-11-24 14:28:54,16915-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@7a33e9d2
2015-11-24 14:28:54,17315-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@3b596684
2015-11-24 14:28:54,17915-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@3d5243ff
2015-11-24 14:28:54,18015-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@3d5243ff
2015-11-24 14:28:54,18015-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d5243ff
2015-11-24 14:28:54,18615-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@2e7c1c14
2015-11-24 14:28:54,18615-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@2e7c1c14
2015-11-24 14:28:54,18615-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2e7c1c14
2015-11-24 14:28:54,19015-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@33ea6bf
2015-11-24 14:28:54,19215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@33ea6bf
2015-11-24 14:28:54,19215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ea6bf
2015-11-24 14:28:54,20115-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@16a1fa7f
2015-11-24 14:28:54,20215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@16a1fa7f
2015-11-24 14:28:54,20215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@16a1fa7f
2015-11-24 14:28:54,20815-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@24a11405
2015-11-24 14:28:54,20815-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@24a11405
2015-11-24 14:28:54,20815-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@24a11405
2015-11-24 14:28:54,22115-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@5b58d16e
2015-11-24 14:28:54,22215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@5b58d16e
2015-11-24 14:28:54,23815-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b58d16e
2015-11-24 14:28:54,24515-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@15acef44
2015-11-24 14:28:54,24515-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@15acef44
2015-11-24 14:28:54,24715-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@15acef44
2015-11-24 14:28:54,25315-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33e0df33
2015-11-24 14:28:54,25415-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33e0df33
2015-11-24 14:28:54,25615-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41350279
2015-11-24 14:28:54,25715-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41350279
2015-11-24 14:28:54,25915-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@455fcabc
2015-11-24 14:28:54,25915-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@455fcabc
2015-11-24 14:28:54,26215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@7f6eea56
2015-11-24 14:28:54,26215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@7f6eea56
2015-11-24 14:28:54,31415-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@d4fa48a
2015-11-24 14:28:54,31415-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@d4fa48a
2015-11-24 14:28:54,31815-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@130332ba
2015-11-24 14:28:54,31815-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@130332ba
2015-11-24 14:28:54,32215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@4f8efdf7
2015-11-24 14:28:54,32215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f8efdf7
2015-11-24 14:28:54,32315-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f8efdf7
2015-11-24 14:28:54,32415-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d4c6abc
2015-11-24 14:28:54,32715-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@57ec035e
2015-11-24 14:28:54,32715-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@57ec035e
2015-11-24 14:28:54,32715-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@57ec035e
2015-11-24 14:28:54,32915-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52aa430a
2015-11-24 14:28:54,33115-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@4e310d66
2015-11-24 14:28:54,33115-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4e310d66
2015-11-24 14:28:54,33415-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@294e58d8
2015-11-24 14:28:54,33415-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@294e58d8
2015-11-24 14:28:54,33615-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f3e5aa1
2015-11-24 14:28:54,33715-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f3e5aa1
2015-11-24 14:28:54,33915-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@309db6ff
2015-11-24 14:28:54,34015-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@309db6ff
2015-11-24 14:28:54,34315-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1275a539
2015-11-24 14:28:54,34415-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1275a539
2015-11-24 14:28:54,35915-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@65e45708
2015-11-24 14:28:54,36215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@991571e
2015-11-24 14:28:54,36415-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@3fdaf238
2015-11-24 14:28:54,36515-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@3fdaf238
2015-11-24 14:28:54,36515-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@3fdaf238
2015-11-24 14:28:54,36715-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3cad5c07
2015-11-24 14:28:54,36715-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3cad5c07
2015-11-24 14:28:54,36815-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3cad5c07
2015-11-24 14:28:54,36915-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@4c71df84
2015-11-24 14:28:54,37215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@4fedc7c7
2015-11-24 14:28:54,37215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@4fedc7c7
2015-11-24 14:28:54,37315-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@4fedc7c7
2015-11-24 14:28:54,37615-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48cc9f29
2015-11-24 14:28:54,37715-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48cc9f29
2015-11-24 14:28:54,37715-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48cc9f29
2015-11-24 14:28:54,37915-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@615807eb
2015-11-24 14:28:54,38915-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@56076eaa
2015-11-24 14:28:54,39015-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56076eaa
2015-11-24 14:28:54,39215-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72bcb509
2015-11-24 14:28:54,39415-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@581bce9a
2015-11-24 14:28:54,40315-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@6eb53873
2015-11-24 14:28:54,40415-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6eb53873
2015-11-24 14:28:54,40515-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22d0e7e3
2015-11-24 14:28:54,40615-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@2b1eb67d
2015-11-24 14:28:54,40815-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@35fa3ff2
2015-11-24 14:28:54,41115-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@5100de32
2015-11-24 14:28:54,41815-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@a8be055
2015-11-24 14:28:54,41915-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@a8be055
2015-11-24 14:28:54,42015-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@76a45568
2015-11-24 14:28:54,42115-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1ee35bb2
2015-11-24 14:28:54,42415-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@609912f5
2015-11-24 14:28:54,42615-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@61abc45e
2015-11-24 14:28:54,42715-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53e9296a
2015-11-24 14:28:54,42715-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@709e192f
2015-11-24 14:28:54,42715-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1b87966c
2015-11-24 14:28:54,42815-11-24 14:28:54 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@62a49a92
2015-11-24 14:28:54,51515-11-24 14:28:54  INFO (Version.java:37 LINE) Version.<clinit> -> Hibernate Commons Annotations 3.2.0.Final
2015-11-24 14:28:54,52615-11-24 14:28:54  INFO (Environment.java:603 LINE) Environment.<clinit> -> Hibernate 3.6.8.Final
2015-11-24 14:28:54,53415-11-24 14:28:54  INFO (Environment.java:636 LINE) Environment.<clinit> -> hibernate.properties not found
2015-11-24 14:28:54,54315-11-24 14:28:54  INFO (Environment.java:814 LINE) Environment.buildBytecodeProvider -> Bytecode provider name : javassist
2015-11-24 14:28:54,55215-11-24 14:28:54  INFO (Environment.java:695 LINE) Environment.<clinit> -> using JDK 1.4 java.sql.Timestamp handling
2015-11-24 14:28:54,66915-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2015-11-24 14:28:54,67015-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2015-11-24 14:28:54,67215-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:28:54,67215-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:28:54,67515-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2015-11-24 14:28:54,67515-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2015-11-24 14:28:54,67715-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2015-11-24 14:28:54,67715-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2015-11-24 14:28:54,67815-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2015-11-24 14:28:54,67915-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2015-11-24 14:28:54,68015-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2015-11-24 14:28:54,68115-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2015-11-24 14:28:54,68115-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2015-11-24 14:28:54,68215-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-11-24 14:28:54,68315-11-24 14:28:54 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2015-11-24 14:28:54,73515-11-24 14:28:54 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:28:54,73515-11-24 14:28:54  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:28:54,73515-11-24 14:28:54 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:28:54,73615-11-24 14:28:54 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:28:54,83915-11-24 14:28:54 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:28:54,84415-11-24 14:28:54  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:28:54,84515-11-24 14:28:54 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:28:54,84615-11-24 14:28:54 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:28:54,96415-11-24 14:28:54 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:28:54,96415-11-24 14:28:54  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:28:54,96615-11-24 14:28:54 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:28:54,96715-11-24 14:28:54 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:28:55,09915-11-24 14:28:55 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:28:55,13115-11-24 14:28:55  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.UserOperate -> user_operate
2015-11-24 14:28:55,13715-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:28:55,14415-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userName -> userName
2015-11-24 14:28:55,14415-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPassword -> userPassword
2015-11-24 14:28:55,14515-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: phicommId -> phicomm_id
2015-11-24 14:28:55,14515-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userEmail -> userEmail
2015-11-24 14:28:55,14515-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPhoneNumb -> user_PhoneNumb
2015-11-24 14:28:55,14615-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userType -> userType
2015-11-24 14:28:55,14615-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: isChecked -> isChecked
2015-11-24 14:28:55,14615-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nickname -> nickname
2015-11-24 14:28:55,14615-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: figureurl -> figureurl
2015-11-24 14:28:55,14715-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: sex -> sex
2015-11-24 14:28:55,14715-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: province -> province
2015-11-24 14:28:55,14715-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: city -> city
2015-11-24 14:28:55,14715-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: birthday -> birthday
2015-11-24 14:28:55,14815-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openId -> open_id
2015-11-24 14:28:55,14815-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openKey -> open_key
2015-11-24 14:28:55,14815-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: accessToken -> access_token
2015-11-24 14:28:55,14815-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: expireseIn -> expirese_in
2015-11-24 14:28:55,14815-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: devinfo -> devinfo
2015-11-24 14:28:55,14915-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userinfo -> userinfo
2015-11-24 14:28:55,14915-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqq -> openqq
2015-11-24 14:28:55,14915-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqqinfo -> openqqinfo
2015-11-24 14:28:55,14915-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensina -> opensina
2015-11-24 14:28:55,15015-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensinainfo -> opensinainfo
2015-11-24 14:28:55,15015-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: createTime -> createTime
2015-11-24 14:28:55,15015-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: updateTime -> updateTime
2015-11-24 14:28:55,15115-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: lastLoginTime -> lastLoginTime
2015-11-24 14:28:55,15115-11-24 14:28:55  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.NoteNumbRecord -> note_numb_record
2015-11-24 14:28:55,15115-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:28:55,15215-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nodeNumb -> node_numb
2015-11-24 14:28:55,15215-11-24 14:28:55  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.CrashLog -> crash_log
2015-11-24 14:28:55,15315-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:28:55,15315-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: url -> url
2015-11-24 14:28:55,15315-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: describes -> describes
2015-11-24 14:28:55,15415-11-24 14:28:55 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: addDate -> addDate
2015-11-24 14:28:55,15415-11-24 14:28:55 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:28:55,15615-11-24 14:28:55 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:28:55,15815-11-24 14:28:55 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:28:55,15915-11-24 14:28:55 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:28:55,15915-11-24 14:28:55 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:28:55,15915-11-24 14:28:55 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:28:55,15915-11-24 14:28:55 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:28:55,16015-11-24 14:28:55 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:28:55,16515-11-24 14:28:55  INFO (Configuration.java:1676 LINE) Configuration.applyHibernateValidatorLegacyConstraintsOnDDL -> Hibernate Validator not found: ignoring
2015-11-24 14:28:55,25915-11-24 14:28:55 DEBUG (LoggerFactory.java:29 LINE) LoggerFactory.make -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-11-24 14:28:55,25915-11-24 14:28:55  INFO (Version.java:27 LINE) Version.<clinit> -> HV000001: Hibernate Validator 5.0.0.Final
2015-11-24 14:28:55,28015-11-24 14:28:55 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:28:55,28715-11-24 14:28:55 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:28:55,29415-11-24 14:28:55 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:28:55,48115-11-24 14:28:55  INFO (LocalSessionFactoryBean.java:780 LINE) LocalSessionFactoryBean.buildSessionFactory -> Building new Hibernate SessionFactory
2015-11-24 14:28:55,48115-11-24 14:28:55 DEBUG (Configuration.java:1854 LINE) Configuration.buildSessionFactory -> Preparing to build session factory with filters : {}
2015-11-24 14:28:55,48115-11-24 14:28:55 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:28:55,48115-11-24 14:28:55 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:28:55,48215-11-24 14:28:55 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:28:55,48215-11-24 14:28:55 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:28:55,48215-11-24 14:28:55 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:28:55,48215-11-24 14:28:55 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:28:55,48215-11-24 14:28:55 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:28:55,48215-11-24 14:28:55 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:28:55,48215-11-24 14:28:55 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:28:55,48315-11-24 14:28:55 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:28:55,48415-11-24 14:28:55 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:28:55,49215-11-24 14:28:55 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:28:55,51015-11-24 14:28:55 DEBUG (Configuration.java:1896 LINE) Configuration.enableLegacyHibernateValidator -> Legacy Validator not present in classpath, ignoring event listener registration
2015-11-24 14:28:55,51015-11-24 14:28:55 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:28:55,51015-11-24 14:28:55 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:28:55,51115-11-24 14:28:55 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:28:55,51615-11-24 14:28:55 DEBUG (HibernateSearchEventListenerRegister.java:231 LINE) HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener -> Search not present in classpath, ignoring event listener registration.
2015-11-24 14:28:55,51615-11-24 14:28:55  INFO (HibernateSearchEventListenerRegister.java:75 LINE) HibernateSearchEventListenerRegister.enableHibernateSearch -> Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2015-11-24 14:28:55,52015-11-24 14:28:55  INFO (ConnectionProviderFactory.java:173 LINE) ConnectionProviderFactory.initializeConnectionProviderFromConfig -> Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2015-11-24 14:28:55,92415-11-24 14:28:55  INFO (Dialect.java:135 LINE) Dialect.<init> -> Using dialect: org.hibernate.dialect.MySQLDialect
2015-11-24 14:28:55,98015-11-24 14:28:55  INFO (SettingsFactory.java:126 LINE) SettingsFactory.buildSettings -> Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-11-24 14:28:55,98015-11-24 14:28:55  INFO (SettingsFactory.java:132 LINE) SettingsFactory.buildSettings -> Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.25 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2015-11-24 14:28:55,98415-11-24 14:28:55  INFO (TransactionFactoryFactory.java:65 LINE) TransactionFactoryFactory.buildTransactionFactory -> Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2015-11-24 14:28:55,98615-11-24 14:28:55  INFO (TransactionManagerLookupFactory.java:83 LINE) TransactionManagerLookupFactory.getTransactionManagerLookup -> No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2015-11-24 14:28:55,98715-11-24 14:28:55  INFO (SettingsFactory.java:179 LINE) SettingsFactory.buildSettings -> Automatic flush during beforeCompletion(): disabled
2015-11-24 14:28:55,98715-11-24 14:28:55  INFO (SettingsFactory.java:183 LINE) SettingsFactory.buildSettings -> Automatic session close at end of transaction: disabled
2015-11-24 14:28:55,98815-11-24 14:28:55  INFO (SettingsFactory.java:190 LINE) SettingsFactory.buildSettings -> JDBC batch size: 25
2015-11-24 14:28:55,98815-11-24 14:28:55  INFO (SettingsFactory.java:193 LINE) SettingsFactory.buildSettings -> JDBC batch updates for versioned data: disabled
2015-11-24 14:28:55,98915-11-24 14:28:55  INFO (SettingsFactory.java:198 LINE) SettingsFactory.buildSettings -> Scrollable result sets: enabled
2015-11-24 14:28:55,99015-11-24 14:28:55 DEBUG (SettingsFactory.java:202 LINE) SettingsFactory.buildSettings -> Wrap result sets: disabled
2015-11-24 14:28:55,99015-11-24 14:28:55  INFO (SettingsFactory.java:206 LINE) SettingsFactory.buildSettings -> JDBC3 getGeneratedKeys(): enabled
2015-11-24 14:28:55,99015-11-24 14:28:55  INFO (SettingsFactory.java:210 LINE) SettingsFactory.buildSettings -> JDBC result set fetch size: 50
2015-11-24 14:28:56,02715-11-24 14:28:56  INFO (SettingsFactory.java:214 LINE) SettingsFactory.buildSettings -> Connection release mode: after_transaction
2015-11-24 14:28:56,04015-11-24 14:28:56  INFO (SettingsFactory.java:238 LINE) SettingsFactory.buildSettings -> Maximum outer join fetch depth: 2
2015-11-24 14:28:56,04015-11-24 14:28:56  INFO (SettingsFactory.java:241 LINE) SettingsFactory.buildSettings -> Default batch fetch size: 1
2015-11-24 14:28:56,04115-11-24 14:28:56  INFO (SettingsFactory.java:245 LINE) SettingsFactory.buildSettings -> Generate SQL with comments: disabled
2015-11-24 14:28:56,04115-11-24 14:28:56  INFO (SettingsFactory.java:249 LINE) SettingsFactory.buildSettings -> Order SQL updates by primary key: disabled
2015-11-24 14:28:56,04115-11-24 14:28:56  INFO (SettingsFactory.java:253 LINE) SettingsFactory.buildSettings -> Order SQL inserts for batching: disabled
2015-11-24 14:28:56,04115-11-24 14:28:56  INFO (SettingsFactory.java:431 LINE) SettingsFactory.createQueryTranslatorFactory -> Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2015-11-24 14:28:56,04415-11-24 14:28:56  INFO (ASTQueryTranslatorFactory.java:47 LINE) ASTQueryTranslatorFactory.<init> -> Using ASTQueryTranslatorFactory
2015-11-24 14:28:56,04415-11-24 14:28:56  INFO (SettingsFactory.java:261 LINE) SettingsFactory.buildSettings -> Query language substitutions: {false='N', true='Y'}
2015-11-24 14:28:56,04515-11-24 14:28:56  INFO (SettingsFactory.java:266 LINE) SettingsFactory.buildSettings -> JPA-QL strict compliance: disabled
2015-11-24 14:28:56,04515-11-24 14:28:56  INFO (SettingsFactory.java:271 LINE) SettingsFactory.buildSettings -> Second-level cache: enabled
2015-11-24 14:28:56,04515-11-24 14:28:56  INFO (SettingsFactory.java:275 LINE) SettingsFactory.buildSettings -> Query cache: enabled
2015-11-24 14:28:56,04615-11-24 14:28:56  INFO (SettingsFactory.java:406 LINE) SettingsFactory.createRegionFactory -> Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
2015-11-24 14:28:56,05115-11-24 14:28:56  INFO (RegionFactoryCacheProviderBridge.java:61 LINE) RegionFactoryCacheProviderBridge.<init> -> Cache provider: org.hibernate.cache.EhCacheProvider
2015-11-24 14:28:56,05515-11-24 14:28:56  INFO (SettingsFactory.java:285 LINE) SettingsFactory.buildSettings -> Optimize cache for minimal puts: disabled
2015-11-24 14:28:56,05515-11-24 14:28:56  INFO (SettingsFactory.java:294 LINE) SettingsFactory.buildSettings -> Structured second-level cache entries: disabled
2015-11-24 14:28:56,05615-11-24 14:28:56  INFO (SettingsFactory.java:385 LINE) SettingsFactory.createQueryCacheFactory -> Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
2015-11-24 14:28:56,06215-11-24 14:28:56  INFO (SettingsFactory.java:314 LINE) SettingsFactory.buildSettings -> Echoing all SQL to stdout
2015-11-24 14:28:56,06315-11-24 14:28:56  INFO (SettingsFactory.java:323 LINE) SettingsFactory.buildSettings -> Statistics: disabled
2015-11-24 14:28:56,06415-11-24 14:28:56  INFO (SettingsFactory.java:327 LINE) SettingsFactory.buildSettings -> Deleted entity synthetic identifier rollback: disabled
2015-11-24 14:28:56,06415-11-24 14:28:56  INFO (SettingsFactory.java:343 LINE) SettingsFactory.buildSettings -> Default entity-mode: pojo
2015-11-24 14:28:56,06415-11-24 14:28:56  INFO (SettingsFactory.java:347 LINE) SettingsFactory.buildSettings -> Named query checking : enabled
2015-11-24 14:28:56,06515-11-24 14:28:56  INFO (SettingsFactory.java:351 LINE) SettingsFactory.buildSettings -> Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2015-11-24 14:28:56,08915-11-24 14:28:56  INFO (SessionFactoryImpl.java:202 LINE) SessionFactoryImpl.<init> -> building session factory
2015-11-24 14:28:56,09515-11-24 14:28:56 DEBUG (SessionFactoryImpl.java:206 LINE) SessionFactoryImpl.<init> -> Statistics initialized [enabled=false]}
2015-11-24 14:28:56,09715-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@522fca87
2015-11-24 14:28:56,09715-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@522fca87
2015-11-24 14:28:56,09715-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@522fca87
2015-11-24 14:28:56,09815-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2ccf4c0e
2015-11-24 14:28:56,09815-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@7a33e9d2
2015-11-24 14:28:56,09815-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@3b596684
2015-11-24 14:28:56,09815-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@3d5243ff
2015-11-24 14:28:56,09915-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@3d5243ff
2015-11-24 14:28:56,09915-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3d5243ff
2015-11-24 14:28:56,09915-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@2e7c1c14
2015-11-24 14:28:56,09915-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@2e7c1c14
2015-11-24 14:28:56,09915-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2e7c1c14
2015-11-24 14:28:56,10015-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@33ea6bf
2015-11-24 14:28:56,10015-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@33ea6bf
2015-11-24 14:28:56,10015-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@33ea6bf
2015-11-24 14:28:56,10015-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@16a1fa7f
2015-11-24 14:28:56,10115-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@16a1fa7f
2015-11-24 14:28:56,10115-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@16a1fa7f
2015-11-24 14:28:56,10115-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@24a11405
2015-11-24 14:28:56,10115-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@24a11405
2015-11-24 14:28:56,10215-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@24a11405
2015-11-24 14:28:56,10215-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@5b58d16e
2015-11-24 14:28:56,10215-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@5b58d16e
2015-11-24 14:28:56,10215-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5b58d16e
2015-11-24 14:28:56,10315-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@15acef44
2015-11-24 14:28:56,10315-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@15acef44
2015-11-24 14:28:56,10315-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@15acef44
2015-11-24 14:28:56,10315-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@33e0df33
2015-11-24 14:28:56,10415-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@33e0df33
2015-11-24 14:28:56,10415-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41350279
2015-11-24 14:28:56,10415-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41350279
2015-11-24 14:28:56,10415-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@455fcabc
2015-11-24 14:28:56,10515-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@455fcabc
2015-11-24 14:28:56,10515-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@7f6eea56
2015-11-24 14:28:56,10515-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@7f6eea56
2015-11-24 14:28:56,10515-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@d4fa48a
2015-11-24 14:28:56,10615-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@d4fa48a
2015-11-24 14:28:56,10615-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@130332ba
2015-11-24 14:28:56,10615-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@130332ba
2015-11-24 14:28:56,10615-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@4f8efdf7
2015-11-24 14:28:56,10615-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f8efdf7
2015-11-24 14:28:56,10715-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f8efdf7
2015-11-24 14:28:56,10715-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d4c6abc
2015-11-24 14:28:56,10715-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@57ec035e
2015-11-24 14:28:56,10715-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@57ec035e
2015-11-24 14:28:56,10715-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@57ec035e
2015-11-24 14:28:56,10815-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@52aa430a
2015-11-24 14:28:56,10815-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@4e310d66
2015-11-24 14:28:56,10815-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4e310d66
2015-11-24 14:28:56,10815-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@294e58d8
2015-11-24 14:28:56,10815-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@294e58d8
2015-11-24 14:28:56,10815-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@6f3e5aa1
2015-11-24 14:28:56,10915-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6f3e5aa1
2015-11-24 14:28:56,10915-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@309db6ff
2015-11-24 14:28:56,10915-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@309db6ff
2015-11-24 14:28:56,10915-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1275a539
2015-11-24 14:28:56,10915-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1275a539
2015-11-24 14:28:56,11015-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@65e45708
2015-11-24 14:28:56,11015-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@991571e
2015-11-24 14:28:56,11015-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@3fdaf238
2015-11-24 14:28:56,11015-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@3fdaf238
2015-11-24 14:28:56,11015-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@3fdaf238
2015-11-24 14:28:56,11015-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3cad5c07
2015-11-24 14:28:56,11115-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3cad5c07
2015-11-24 14:28:56,11115-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3cad5c07
2015-11-24 14:28:56,11115-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@4c71df84
2015-11-24 14:28:56,11115-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@4fedc7c7
2015-11-24 14:28:56,11115-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@4fedc7c7
2015-11-24 14:28:56,11215-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@4fedc7c7
2015-11-24 14:28:56,11215-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@48cc9f29
2015-11-24 14:28:56,11215-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@48cc9f29
2015-11-24 14:28:56,11215-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@48cc9f29
2015-11-24 14:28:56,11215-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@615807eb
2015-11-24 14:28:56,11215-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@56076eaa
2015-11-24 14:28:56,11315-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@56076eaa
2015-11-24 14:28:56,11315-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72bcb509
2015-11-24 14:28:56,11315-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@581bce9a
2015-11-24 14:28:56,11315-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@6eb53873
2015-11-24 14:28:56,11315-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6eb53873
2015-11-24 14:28:56,11315-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22d0e7e3
2015-11-24 14:28:56,11415-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@2b1eb67d
2015-11-24 14:28:56,11415-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@35fa3ff2
2015-11-24 14:28:56,11415-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@5100de32
2015-11-24 14:28:56,11415-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@a8be055
2015-11-24 14:28:56,11515-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@a8be055
2015-11-24 14:28:56,11515-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a29c9f8
2015-11-24 14:28:56,11515-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5d8aef3b
2015-11-24 14:28:56,11515-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4c603a77
2015-11-24 14:28:56,11515-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@419e81cd
2015-11-24 14:28:56,11515-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@d5bdb63
2015-11-24 14:28:56,11615-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9a0476f
2015-11-24 14:28:56,11615-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@79b1cd58
2015-11-24 14:28:56,11615-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@8208ad3
2015-11-24 14:28:56,11615-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4caba4fd
2015-11-24 14:28:56,11615-11-24 14:28:56  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@22d0e7e3
2015-11-24 14:28:56,11715-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@18dd055e
2015-11-24 14:28:56,11715-11-24 14:28:56  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@2b1eb67d
2015-11-24 14:28:56,11715-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@311a3c9d
2015-11-24 14:28:56,11715-11-24 14:28:56  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [blob] overrides previous : org.hibernate.type.BlobType@56076eaa
2015-11-24 14:28:56,11715-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@311a3c9d
2015-11-24 14:28:56,11815-11-24 14:28:56  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@56076eaa
2015-11-24 14:28:56,11815-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@194c005c
2015-11-24 14:28:56,11815-11-24 14:28:56  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [clob] overrides previous : org.hibernate.type.ClobType@6eb53873
2015-11-24 14:28:56,11915-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@194c005c
2015-11-24 14:28:56,11915-11-24 14:28:56  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@6eb53873
2015-11-24 14:28:56,11915-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3181809a
2015-11-24 14:28:56,12015-11-24 14:28:56  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@72bcb509
2015-11-24 14:28:56,12015-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@2d2217da
2015-11-24 14:28:56,12015-11-24 14:28:56  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@581bce9a
2015-11-24 14:28:56,12015-11-24 14:28:56 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@568b6b12
2015-11-24 14:28:56,12115-11-24 14:28:56  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@35fa3ff2
2015-11-24 14:28:56,12215-11-24 14:28:56 DEBUG (SessionFactoryImpl.java:228 LINE) SessionFactoryImpl.<init> -> Session factory constructed with filter configurations : {}
2015-11-24 14:28:56,12215-11-24 14:28:56 DEBUG (SessionFactoryImpl.java:232 LINE) SessionFactoryImpl.<init> -> instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, sun.boot.library.path=E:\JDK1.7\bin, java.vm.version=23.7-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.cache.use_query_cache=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\workspace\mobile-user, java.runtime.version=1.7.0_17-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=E:\JDK1.7\lib\endorsed, os.arch=amd64, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\gqy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, hibernate.cache.use_second_level_cache=true, sun.jnu.encoding=GBK, hibernate.jdbc.fetch_size=50, java.library.path=E:\JDK1.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\ProgramData\Lenovo\ReadyApps;E:\JDK\bin;E:\JDK\jre\bin;E:\Go\bin;E:\winscp\WinSCP\;E:\maven\apache-maven-3.2.3\bin;C:\Program Files (x86)\DBank\ClickUp;C:\Program Files (x86)\DBank\ClickUp;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\gqy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=after_transaction, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=gqy, java.class.path=G:\workspace\mobile-user\target\test-classes;G:\workspace\mobile-user\target\classes;H:\Respositories2\repository\com\alibaba\fastjson\1.2.4\fastjson-1.2.4.jar;H:\Respositories2\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;H:\Respositories2\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;H:\Respositories2\repository\io\netty\netty\4.0.0.Alpha8\netty-4.0.0.Alpha8.jar;H:\Respositories2\repository\jstl\jstl\1.2\jstl-1.2.jar;H:\Respositories2\repository\org\springframework\spring-aop\3.2.0.RELEASE\spring-aop-3.2.0.RELEASE.jar;H:\Respositories2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;H:\Respositories2\repository\org\springframework\spring-beans\3.2.0.RELEASE\spring-beans-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context\3.2.0.RELEASE\spring-context-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-expression\3.2.0.RELEASE\spring-expression-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context-support\3.2.0.RELEASE\spring-context-support-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-core\3.2.0.RELEASE\spring-core-3.2.0.RELEASE.jar;H:\Respositories2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;H:\Respositories2\repository\org\springframework\spring-jdbc\3.2.0.RELEASE\spring-jdbc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-orm\3.2.0.RELEASE\spring-orm-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-tx\3.2.0.RELEASE\spring-tx-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-web\3.2.0.RELEASE\spring-web-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-webmvc\3.2.0.RELEASE\spring-webmvc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\amqp\spring-amqp\1.2.0.RELEASE\spring-amqp-1.2.0.RELEASE.jar;H:\Respositories2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;H:\Respositories2\repository\com\fasterxml\jackson\core\jackson-core\2.1.0\jackson-core-2.1.0.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.13\jackson-jaxrs-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-xc\1.9.13\jackson-xc-1.9.13.jar;H:\Respositories2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;H:\Respositories2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;H:\Respositories2\repository\mysql\mysql-connector-java\5.1.25\mysql-connector-java-5.1.25.jar;H:\Respositories2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;H:\Respositories2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;H:\Respositories2\repository\org\aspectj\aspectjweaver\1.6.4\aspectjweaver-1.6.4.jar;H:\Respositories2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;H:\Respositories2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;H:\Respositories2\repository\commons-beanutils\commons-beanutils\1.9.0\commons-beanutils-1.9.0.jar;H:\Respositories2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;H:\Respositories2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;H:\Respositories2\repository\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;H:\Respositories2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;H:\Respositories2\repository\org\mybatis\mybatis-spring\1.2.0\mybatis-spring-1.2.0.jar;H:\Respositories2\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;H:\Respositories2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar;H:\Respositories2\repository\org\json\json\20090211\json-20090211.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-lgpl\1.8.1\jackson-core-lgpl-1.8.1.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-lgpl\1.8.1\jackson-mapper-lgpl-1.8.1.jar;H:\Respositories2\repository\org\freemarker\freemarker\2.3.16\freemarker-2.3.16.jar;H:\Respositories2\repository\opensymphony\sitemesh\2.4.2\sitemesh-2.4.2.jar;H:\Respositories2\repository\org\testng\testng\5.9\testng-5.9-jdk15.jar;H:\Respositories2\repository\junit\junit\4.7\junit-4.7.jar;H:\Respositories2\repository\cglib\cglib-asm\1.0\cglib-asm-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-core\1.0\jxls-core-1.0.jar;H:\Respositories2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;H:\Respositories2\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml\3.7\poi-ooxml-3.7.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml-schemas\3.7\poi-ooxml-schemas-3.7.jar;H:\Respositories2\repository\org\apache\xmlbeans\xmlbeans\2.3.0\xmlbeans-2.3.0.jar;H:\Respositories2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;H:\Respositories2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-reader\1.0\jxls-reader-1.0.jar;H:\Respositories2\repository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient\4.3.2\httpclient-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient-cache\4.3.2\httpclient-cache-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpmime\4.3.2\httpmime-4.3.2.jar;H:\Respositories2\repository\org\quartz-scheduler\quartz\1.8.6\quartz-1.8.6.jar;H:\Respositories2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;H:\Respositories2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;H:\Respositories2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;H:\Respositories2\repository\net\coobird\thumbnailator\0.4.7\thumbnailator-0.4.7.jar;H:\Respositories2\repository\jcifs\jcifs\1.3.17\jcifs-1.3.17.jar;H:\Respositories2\repository\org\apache\poi\poi\3.10.1\poi-3.10.1.jar;H:\Respositories2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;H:\Respositories2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;H:\Respositories2\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;H:\Respositories2\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;H:\Respositories2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;H:\Respositories2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;H:\Respositories2\repository\net\sf\supercsv\super-csv\2.2.0\super-csv-2.2.0.jar;H:\Respositories2\repository\org\bouncycastle\bcprov-jdk16\1.45\bcprov-jdk16-1.45.jar;H:\Respositories2\repository\jdom\jdom\1.0\jdom-1.0.jar;H:\Respositories2\repository\com\belerweb\pinyin4j\2.5.0\pinyin4j-2.5.0.jar;H:\Respositories2\repository\org\glassfish\jersey\ext\jersey-spring3\2.4.1\jersey-spring3-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-server\2.4.1\jersey-server-2.4.1.jar;H:\Respositories2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-api\2.2.0-b21\hk2-api-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\javax.inject\2.2.0-b21\javax.inject-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-locator\2.2.0-b21\hk2-locator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\asm-all-repackaged\2.2.0-b21\asm-all-repackaged-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\cglib\2.2.0-b21\cglib-2.2.0-b21.jar;H:\Respositories2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;H:\Respositories2\repository\org\glassfish\jersey\containers\jersey-container-servlet-core\2.4.1\jersey-container-servlet-core-2.4.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2\2.2.0-b21\hk2-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-utils\2.2.0-b21\hk2-utils-2.2.0-b21.jar;H:\Respositories2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;H:\Respositories2\repository\org\glassfish\hk2\config-types\2.2.0-b21\config-types-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\core\2.2.0-b21\core-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-config\2.2.0-b21\hk2-config-2.2.0-b21.jar;H:\Respositories2\repository\org\jvnet\tiger-types\1.4\tiger-types-1.4.jar;H:\Respositories2\repository\org\glassfish\hk2\external\bean-validator\2.2.0-b21\bean-validator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-runlevel\2.2.0-b21\hk2-runlevel-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\class-model\2.2.0-b21\class-model-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\spring-bridge\2.2.0-b21\spring-bridge-2.2.0-b21.jar;H:\Respositories2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\2.4.1\jersey-media-json-jackson-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-common\2.4.1\jersey-common-2.4.1.jar;H:\Respositories2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;H:\Respositories2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.1\osgi-resource-locator-1.0.1.jar;H:\Respositories2\repository\org\codehaus\groovy\groovy-all\2.2.0\groovy-all-2.2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\providers\jersey-test-framework-provider-external\2.5.1\jersey-test-framework-provider-external-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\jersey-test-framework-core\2.5.1\jersey-test-framework-core-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-client\2.5.1\jersey-client-2.5.1.jar;H:\Respositories2\repository\org\springframework\spring-test\3.2.6.RELEASE\spring-test-3.2.6.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session\1.0.1.RELEASE\spring-session-1.0.1.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session-data-redis\1.0.0.RELEASE\spring-session-data-redis-1.0.0.RELEASE.jar;H:\Respositories2\repository\org\apache\commons\commons-pool2\2.2\commons-pool2-2.2.jar;H:\Respositories2\repository\redis\clients\jedis\2.6.0\jedis-2.6.0.jar;H:\Respositories2\repository\org\springframework\data\spring-data-redis\1.4.1.RELEASE\spring-data-redis-1.4.1.RELEASE.jar;H:\Respositories2\repository\net\sf\ehcache\ehcache-core\2.6.11\ehcache-core-2.6.11.jar;H:\Respositories2\repository\org\hibernate3\hibernate3\3.0.0\hibernate3-3.0.0.jar;H:\Respositories2\repository\com\google\code\gson\gson\2.1\gson-2.1.jar;H:\Respositories2\repository\org\apache\openejb\javaee-api\5.0-1\javaee-api-5.0-1.jar;H:\Respositories2\repository\com\alibaba\druid\1.0.2\druid-1.0.2.jar;H:\Respositories2\repository\javax\faces\jsf-impl\1.2_04\jsf-impl-1.2_04.jar;H:\Respositories2\repository\javax\faces\jsf-api\1.2_04\jsf-api-1.2_04.jar;H:\Respositories2\repository\javax\transaction\jta\1.1\jta-1.1.jar;H:\Respositories2\repository\org\apache\ws\wss4j\1.5.1\wss4j-1.5.1.jar;H:\Respositories2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;H:\Respositories2\repository\hibernate\antlr\2.7.5H3\antlr-2.7.5H3.jar;H:\Respositories2\repository\javassist\javassist\3.9.0.GA\javassist-3.9.0.GA.jar;H:\Respositories2\repository\com\fx\mobile\mobile-model\0.0.1-SNAPSHOT\mobile-model-0.0.1-SNAPSHOT.jar;H:\Respositories2\repository\com\fx\mobile\mobile-core\0.0.1\mobile-core-0.0.1.jar;H:\Respositories2\repository\Decoder\sun.misc.BASE64Decoder\1.0.0\sun.misc.BASE64Decoder-1.0.0.jar;H:\Respositories2\repository\marketingFile\marketingFile\0.0.1\marketingFile-0.0.1.jar;H:\Respositories2\repository\com\qq\connect\Sdk4J\1.0\Sdk4J-1.0.jar;H:\Respositories2\repository\org\apache\commons\commons-io\1.3.2\commons-io-1.3.2.jar;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.query.substitutions=true 'Y', false 'N', hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=E:\JDK1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 59920 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.fx.mobile.junit.UserOperateDaoImplTest, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_17, java.ext.dirs=E:\JDK1.7\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=E:\JDK1.7\lib\resources.jar;E:\JDK1.7\lib\rt.jar;E:\JDK1.7\lib\sunrsasign.jar;E:\JDK1.7\lib\jsse.jar;E:\JDK1.7\lib\jce.jar;E:\JDK1.7\lib\charsets.jar;E:\JDK1.7\lib\jfr.jar;E:\JDK1.7\classes, java.vendor=Oracle Corporation, hibernate.jdbc.batch_size=25, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-11-24 14:28:56,14315-11-24 14:28:56 DEBUG (CacheManager.java:684 LINE) CacheManager.parseConfiguration -> Configuring ehcache from classpath.
2015-11-24 14:28:56,14715-11-24 14:28:56 DEBUG (ConfigurationFactory.java:132 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from ehcache.xml found in the classpath: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:28:56,14715-11-24 14:28:56 DEBUG (ConfigurationFactory.java:98 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from URL: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:28:56,14815-11-24 14:28:56 DEBUG (ConfigurationFactory.java:150 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from InputStream
2015-11-24 14:28:56,21915-11-24 14:28:56 DEBUG (DiskStoreConfiguration.java:141 LINE) DiskStoreConfiguration.translatePath -> Disk Store Path: C:\Users\gqy\AppData\Local\Temp\
2015-11-24 14:28:56,24115-11-24 14:28:56 DEBUG (PropertyUtil.java:88 LINE) PropertyUtil.parseProperties -> propertiesString is null.
2015-11-24 14:28:56,25815-11-24 14:28:56 DEBUG (ConfigurationHelper.java:185 LINE) ConfigurationHelper.createCacheManagerEventListener -> No CacheManagerEventListenerFactory class specified. Skipping...
2015-11-24 14:28:56,29915-11-24 14:28:56 DEBUG (Cache.java:955 LINE) Cache.createBootstrapCacheLoader -> No BootstrapCacheLoaderFactory class specified. Skipping...
2015-11-24 14:28:56,29915-11-24 14:28:56 DEBUG (Cache.java:929 LINE) Cache.createCacheWriter -> CacheWriter factory not configured. Skipping...
2015-11-24 14:28:56,30115-11-24 14:28:56 DEBUG (ConfigurationHelper.java:96 LINE) ConfigurationHelper.createCacheExceptionHandler -> No CacheExceptionHandlerFactory class specified. Skipping...
2015-11-24 14:28:56,33115-11-24 14:28:56 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:28:56,33215-11-24 14:28:56 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:28:56,33315-11-24 14:28:56 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:28:56,53015-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.NoteNumbRecord
2015-11-24 14:28:56,53015-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from note_numb_record where id =?
2015-11-24 14:28:56,53115-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select notenumbre_.id, notenumbre_.node_numb as node2_1_ from note_numb_record notenumbre_ where notenumbre_.id=?
2015-11-24 14:28:56,53115-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into note_numb_record (node_numb, id) values (?, ?)
2015-11-24 14:28:56,53115-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update note_numb_record set node_numb=? where id=?
2015-11-24 14:28:56,53115-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from note_numb_record where id=?
2015-11-24 14:28:56,53215-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into note_numb_record (node_numb) values (?)
2015-11-24 14:28:56,53615-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.CrashLog
2015-11-24 14:28:56,53615-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from marketing1.crash_log where id =?
2015-11-24 14:28:56,53715-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select crashlog_.id, crashlog_.url as url2_, crashlog_.describes as describes2_, crashlog_.addDate as addDate2_ from marketing1.crash_log crashlog_ where crashlog_.id=?
2015-11-24 14:28:56,53715-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into marketing1.crash_log (url, describes, addDate, id) values (?, ?, ?, ?)
2015-11-24 14:28:56,53715-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update marketing1.crash_log set url=?, describes=?, addDate=? where id=?
2015-11-24 14:28:56,53715-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from marketing1.crash_log where id=?
2015-11-24 14:28:56,53815-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into marketing1.crash_log (url, describes, addDate) values (?, ?, ?)
2015-11-24 14:28:56,55715-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.UserOperate
2015-11-24 14:28:56,55715-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from user_operate where id =?
2015-11-24 14:28:56,55815-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select useroperat_.id, useroperat_.userName as userName0_, useroperat_.userPassword as userPass3_0_, useroperat_.phicomm_id as phicomm4_0_, useroperat_.userEmail as userEmail0_, useroperat_.user_PhoneNumb as user6_0_, useroperat_.userType as userType0_, useroperat_.isChecked as isChecked0_, useroperat_.nickname as nickname0_, useroperat_.figureurl as figureurl0_, useroperat_.sex as sex0_, useroperat_.province as province0_, useroperat_.city as city0_, useroperat_.birthday as birthday0_, useroperat_.open_id as open15_0_, useroperat_.open_key as open16_0_, useroperat_.access_token as access17_0_, useroperat_.expirese_in as expirese18_0_, useroperat_.devinfo as devinfo0_, useroperat_.userinfo as userinfo0_, useroperat_.openqq as openqq0_, useroperat_.openqqinfo as openqqinfo0_, useroperat_.opensina as opensina0_, useroperat_.opensinainfo as opensin24_0_, useroperat_.createTime as createTime0_, useroperat_.updateTime as updateTime0_, useroperat_.lastLoginTime as lastLog27_0_ from user_operate useroperat_ where useroperat_.id=?
2015-11-24 14:28:56,55815-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:28:56,55815-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update user_operate set userName=?, userPassword=?, phicomm_id=?, userEmail=?, user_PhoneNumb=?, userType=?, isChecked=?, nickname=?, figureurl=?, sex=?, province=?, city=?, birthday=?, open_id=?, open_key=?, access_token=?, expirese_in=?, devinfo=?, userinfo=?, openqq=?, openqqinfo=?, opensina=?, opensinainfo=?, createTime=?, updateTime=?, lastLoginTime=? where id=?
2015-11-24 14:28:56,55815-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from user_operate where id=?
2015-11-24 14:28:56,55815-11-24 14:28:56 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:28:56,61415-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [NONE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:28:56,61515-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:28:56,61515-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:28:56,61615-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE_NOWAIT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:28:56,61615-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [FORCE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:28:56,61715-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? lock in share mode
2015-11-24 14:28:56,61715-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_WRITE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:28:56,61715-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:28:56,61815-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:28:56,61815-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:28:56,62615-11-24 14:28:56 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:28:56,62715-11-24 14:28:56 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:28:56,63015-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [NONE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:28:56,63115-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:28:56,63215-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:28:56,63515-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE_NOWAIT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:28:56,63515-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [FORCE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:28:56,63615-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? lock in share mode
2015-11-24 14:28:56,63615-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_WRITE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:28:56,63615-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:28:56,63715-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:28:56,63715-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:28:56,63815-11-24 14:28:56 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:28:56,63815-11-24 14:28:56 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:28:56,63915-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [NONE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:28:56,64015-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:28:56,64015-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:28:56,64115-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE_NOWAIT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:28:56,64115-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [FORCE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:28:56,64215-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? lock in share mode
2015-11-24 14:28:56,64215-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_WRITE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:28:56,64315-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [PESSIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:28:56,64315-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:28:56,64415-11-24 14:28:56 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [OPTIMISTIC_FORCE_INCREMENT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:28:56,64415-11-24 14:28:56 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:28:56,64515-11-24 14:28:56 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.UserOperate: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:28:56,64615-11-24 14:28:56 DEBUG (SessionFactoryObjectFactory.java:61 LINE) SessionFactoryObjectFactory.<clinit> -> initializing class SessionFactoryObjectFactory
2015-11-24 14:28:56,64715-11-24 14:28:56 DEBUG (SessionFactoryObjectFactory.java:99 LINE) SessionFactoryObjectFactory.addInstance -> registered: 1d9cd4bb-68fd-4d5b-b96e-0958aabfb5fa (unnamed)
2015-11-24 14:28:56,64715-11-24 14:28:56  INFO (SessionFactoryObjectFactory.java:105 LINE) SessionFactoryObjectFactory.addInstance -> Not binding factory to JNDI, no JNDI name configured
2015-11-24 14:28:56,64715-11-24 14:28:56 DEBUG (SessionFactoryImpl.java:369 LINE) SessionFactoryImpl.<init> -> instantiated session factory
2015-11-24 14:28:56,65315-11-24 14:28:56  INFO (SchemaUpdate.java:155 LINE) SchemaUpdate.execute -> Running hbm2ddl schema update
2015-11-24 14:28:56,65315-11-24 14:28:56  INFO (SchemaUpdate.java:167 LINE) SchemaUpdate.execute -> fetching database metadata
2015-11-24 14:28:56,65515-11-24 14:28:56  INFO (SchemaUpdate.java:179 LINE) SchemaUpdate.execute -> updating schema
2015-11-24 14:28:56,65615-11-24 14:28:56 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:28:56,65615-11-24 14:28:56 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:28:56,65615-11-24 14:28:56 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:28:56,65715-11-24 14:28:56 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:28:56,65715-11-24 14:28:56 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:28:56,65715-11-24 14:28:56 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:28:56,65715-11-24 14:28:56 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:28:56,65815-11-24 14:28:56 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:28:56,65815-11-24 14:28:56 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:28:56,65915-11-24 14:28:56 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:28:56,66015-11-24 14:28:56 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:28:56,66115-11-24 14:28:56 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:28:56,74515-11-24 14:28:56  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:28:56,74615-11-24 14:28:56 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:28:56,82215-11-24 14:28:56  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.note_numb_record
2015-11-24 14:28:56,82315-11-24 14:28:56  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [id, node_numb]
2015-11-24 14:28:56,82315-11-24 14:28:56  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:28:56,82415-11-24 14:28:56  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:28:56,85015-11-24 14:28:56  INFO (TableMetadata.java:65 LINE) TableMetadata.<init> -> table found: mobile_user.user_operate
2015-11-24 14:28:56,85015-11-24 14:28:56  INFO (TableMetadata.java:66 LINE) TableMetadata.<init> -> columns: [birthday, sex, updatetime, open_id, openqq, opensina, userinfo, user_phonenumb, city, createtime, id, userpassword, username, lastlogintime, province, opensinainfo, figureurl, phicomm_id, open_key, access_token, nickname, usertype, ischecked, openqqinfo, useremail, devinfo, expirese_in]
2015-11-24 14:28:56,85115-11-24 14:28:56  INFO (TableMetadata.java:68 LINE) TableMetadata.<init> -> foreign keys: []
2015-11-24 14:28:56,85115-11-24 14:28:56  INFO (TableMetadata.java:69 LINE) TableMetadata.<init> -> indexes: [primary]
2015-11-24 14:28:56,85215-11-24 14:28:56  INFO (DatabaseMetadata.java:119 LINE) DatabaseMetadata.getTableMetadata -> table not found: crash_log
2015-11-24 14:28:56,85315-11-24 14:28:56 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:28:56,85315-11-24 14:28:56 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:28:56,85415-11-24 14:28:56 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:28:56,85415-11-24 14:28:56 DEBUG (SchemaUpdate.java:203 LINE) SchemaUpdate.execute -> create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:28:56,85515-11-24 14:28:56 ERROR (SchemaUpdate.java:212 LINE) SchemaUpdate.execute -> Unsuccessful: create table marketing1.crash_log (id bigint not null auto_increment, url varchar(100), describes varchar(200), addDate varchar(30), primary key (id))
2015-11-24 14:28:56,85615-11-24 14:28:56 ERROR (SchemaUpdate.java:213 LINE) SchemaUpdate.execute -> Unknown database 'marketing1'
2015-11-24 14:28:56,85615-11-24 14:28:56  INFO (SchemaUpdate.java:217 LINE) SchemaUpdate.execute -> schema update complete
2015-11-24 14:28:56,86015-11-24 14:28:56  INFO (UpdateTimestampsCache.java:57 LINE) UpdateTimestampsCache.<init> -> starting update timestamps cache at region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:28:56,86215-11-24 14:28:56  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.UpdateTimestampsCache]; using defaults.
2015-11-24 14:28:56,88415-11-24 14:28:56 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:28:56,90115-11-24 14:28:56 DEBUG (DiskStorePathManager.java:169 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Using diskstore path C:\Users\gqy\AppData\Local\Temp
2015-11-24 14:28:56,90115-11-24 14:28:56 DEBUG (DiskStorePathManager.java:170 LINE) DiskStorePathManager.resolveAndLockIfNeeded -> Holding exclusive lock on C:\Users\gqy\AppData\Local\Temp\.ehcache-diskstore.lock
2015-11-24 14:28:56,90215-11-24 14:28:56 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.data
2015-11-24 14:28:56,93415-11-24 14:28:56 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:28:56,94715-11-24 14:28:56 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:28:56,94815-11-24 14:28:56 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0055pdate%0054imestamps%0043ache.index
2015-11-24 14:28:56,96015-11-24 14:28:56 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:28:56,96015-11-24 14:28:56 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.UpdateTimestampsCache'.
2015-11-24 14:28:56,96115-11-24 14:28:56 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.UpdateTimestampsCache
2015-11-24 14:28:56,96315-11-24 14:28:56  INFO (StandardQueryCache.java:76 LINE) StandardQueryCache.<init> -> starting query cache at region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:28:56,96315-11-24 14:28:56  WARN (EhCacheProvider.java:93 LINE) EhCacheProvider.buildCache -> Could not find configuration [org.hibernate.cache.StandardQueryCache]; using defaults.
2015-11-24 14:28:56,96415-11-24 14:28:56 DEBUG (MemoryStore.java:153 LINE) MemoryStore.<init> -> Initialized net.sf.ehcache.store.MemoryStore for org.hibernate.cache.StandardQueryCache
2015-11-24 14:28:56,96515-11-24 14:28:56 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.data
2015-11-24 14:28:56,96615-11-24 14:28:56 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:28:56,96715-11-24 14:28:56 DEBUG (DiskStorageFactory.java:168 LINE) DiskStorageFactory.<init> -> Matching data file missing (or empty) for index file. Deleting index file C:\Users\gqy\AppData\Local\Temp\org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:28:56,96715-11-24 14:28:56 DEBUG (DiskStorageFactory.java:860 LINE) DiskStorageFactory.deleteFile -> Failed to delete file org%002ehibernate%002ecache%002e%0053tandard%0051uery%0043ache.index
2015-11-24 14:28:56,96815-11-24 14:28:56 DEBUG (Cache.java:1165 LINE) Cache.initialise -> Initialised cache: org.hibernate.cache.StandardQueryCache
2015-11-24 14:28:56,96815-11-24 14:28:56 DEBUG (ConfigurationHelper.java:354 LINE) ConfigurationHelper.createDefaultCacheDecorators -> CacheDecoratorFactory not configured for defaultCache. Skipping for 'org.hibernate.cache.StandardQueryCache'.
2015-11-24 14:28:56,96815-11-24 14:28:56 DEBUG (EhCacheProvider.java:96 LINE) EhCacheProvider.buildCache -> started EHCache region: org.hibernate.cache.StandardQueryCache
2015-11-24 14:28:56,96815-11-24 14:28:56 DEBUG (SessionFactoryImpl.java:539 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named HQL queries
2015-11-24 14:28:56,96815-11-24 14:28:56 DEBUG (SessionFactoryImpl.java:559 LINE) SessionFactoryImpl.checkNamedQueries -> Checking 0 named SQL queries
2015-11-24 14:28:56,97015-11-24 14:28:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:56,97115-11-24 14:28:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'sessionFactory'
2015-11-24 14:28:56,97115-11-24 14:28:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:56,97915-11-24 14:28:56 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userOperateDao'
2015-11-24 14:28:56,97915-11-24 14:28:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:56,98015-11-24 14:28:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userOperateDao'
2015-11-24 14:28:56,98015-11-24 14:28:56 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userInterfaceDao'
2015-11-24 14:28:56,98115-11-24 14:28:56 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userInterfaceDao'
2015-11-24 14:28:56,98115-11-24 14:28:56 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userInterfaceDao' to allow for resolving potential circular references
2015-11-24 14:28:56,98615-11-24 14:28:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:28:56,98615-11-24 14:28:56 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'userInterfaceDao'
2015-11-24 14:28:56,98615-11-24 14:28:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:56,98715-11-24 14:28:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userInterfaceDao'
2015-11-24 14:28:56,98715-11-24 14:28:56 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'noteNumRecordDao'
2015-11-24 14:28:56,98715-11-24 14:28:56 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'noteNumRecordDao'
2015-11-24 14:28:56,98815-11-24 14:28:56 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'noteNumRecordDao' to allow for resolving potential circular references
2015-11-24 14:28:56,99315-11-24 14:28:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:28:56,99415-11-24 14:28:56 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'noteNumRecordDao'
2015-11-24 14:28:56,99415-11-24 14:28:56 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:56,99515-11-24 14:28:56 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'noteNumRecordDao'
2015-11-24 14:28:56,99615-11-24 14:28:56 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'crashLogDao'
2015-11-24 14:28:56,99615-11-24 14:28:56 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'crashLogDao'
2015-11-24 14:28:56,99715-11-24 14:28:56 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'crashLogDao' to allow for resolving potential circular references
2015-11-24 14:28:57,03715-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:28:57,03715-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'crashLogDao'
2015-11-24 14:28:57,03715-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:57,03815-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'crashLogDao'
2015-11-24 14:28:57,03815-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'dataSource'
2015-11-24 14:28:57,03815-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:28:57,03815-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:28:57,03915-11-24 14:28:57 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:28:57,03915-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:28:57,04115-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2015-11-24 14:28:57,04515-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:28:57,04515-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:28:57,04515-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2015-11-24 14:28:57,04515-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:57,04515-11-24 14:28:57 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'transactionManager'
2015-11-24 14:28:57,04515-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'transactionManager'
2015-11-24 14:28:57,05215-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
2015-11-24 14:28:57,05615-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'sessionFactory'
2015-11-24 14:28:57,05615-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'transactionManager'
2015-11-24 14:28:57,06215-11-24 14:28:57  INFO (HibernateTransactionManager.java:415 LINE) HibernateTransactionManager.afterPropertiesSet -> Using DataSource [org.apache.commons.dbcp.BasicDataSource@5922224f] of Hibernate SessionFactory for HibernateTransactionManager
2015-11-24 14:28:57,06215-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:57,06315-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'transactionManager'
2015-11-24 14:28:57,06315-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:28:57,06315-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:28:57,06315-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:28:57,06315-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:28:57,06315-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:28:57,06315-11-24 14:28:57 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'operateService'
2015-11-24 14:28:57,06415-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'operateService'
2015-11-24 14:28:57,06915-11-24 14:28:57 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserOperateServiceImp]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:28:57,06915-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'operateService' to allow for resolving potential circular references
2015-11-24 14:28:57,07115-11-24 14:28:57 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'operateService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.user.service.impl.UserOperateServiceImp.userOperateDao
2015-11-24 14:28:57,08115-11-24 14:28:57 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'fileRemote'
2015-11-24 14:28:57,08115-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'fileRemote'
2015-11-24 14:28:57,08315-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'fileRemote' to allow for resolving potential circular references
2015-11-24 14:28:57,09115-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'fileRemote'
2015-11-24 14:28:57,10215-11-24 14:28:57 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is EmptyTargetSource: no target class, static
2015-11-24 14:28:57,10715-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'fileRemote'
2015-11-24 14:28:57,10815-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:28:57,10915-11-24 14:28:57 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'operateService' to bean named 'userOperateDao'
2015-11-24 14:28:57,10915-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:57,11415-11-24 14:28:57 DEBUG (AbstractFallbackTransactionAttributeSource.java:106 LINE) AbstractFallbackTransactionAttributeSource.getTransactionAttribute -> Adding transactional method 'registAccount' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; '',-java.lang.Throwable
2015-11-24 14:28:57,11515-11-24 14:28:57 DEBUG (AbstractAutoProxyCreator.java:534 LINE) AbstractAutoProxyCreator.buildAdvisors -> Creating implicit proxy for bean 'operateService' with 0 common interceptors and 1 specific interceptors
2015-11-24 14:28:57,11515-11-24 14:28:57 DEBUG (JdkDynamicAopProxy.java:115 LINE) JdkDynamicAopProxy.getProxy -> Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [com.fx.mobile.user.service.impl.UserOperateServiceImp@1ebee38a]
2015-11-24 14:28:57,11915-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'operateService'
2015-11-24 14:28:57,12015-11-24 14:28:57 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'SpringContextUtil'
2015-11-24 14:28:57,12015-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'SpringContextUtil'
2015-11-24 14:28:57,12115-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'SpringContextUtil' to allow for resolving potential circular references
2015-11-24 14:28:57,12515-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:57,12515-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'SpringContextUtil'
2015-11-24 14:28:57,12615-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'fileRemote'
2015-11-24 14:28:57,12615-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:28:57,12715-11-24 14:28:57 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userinterfaceService'
2015-11-24 14:28:57,12715-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userinterfaceService'
2015-11-24 14:28:57,12815-11-24 14:28:57 DEBUG (InjectionMetadata.java:71 LINE) InjectionMetadata.checkConfigMembers -> Registered injected element on class [com.fx.mobile.user.service.impl.UserInterfaceServiceImpl]: AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:28:57,12815-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userinterfaceService' to allow for resolving potential circular references
2015-11-24 14:28:57,13015-11-24 14:28:57 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'userinterfaceService': AutowiredFieldElement for public com.fx.mobile.user.dao.UserInterfaceDao com.fx.mobile.user.service.impl.UserInterfaceServiceImpl.userInterfaceDao
2015-11-24 14:28:57,13115-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userInterfaceDao'
2015-11-24 14:28:57,13115-11-24 14:28:57 DEBUG (AutowiredAnnotationBeanPostProcessor.java:433 LINE) AutowiredAnnotationBeanPostProcessor.registerDependentBeans -> Autowiring by type from bean name 'userinterfaceService' to bean named 'userInterfaceDao'
2015-11-24 14:28:57,13115-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:57,13215-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'userinterfaceService'
2015-11-24 14:28:57,13215-11-24 14:28:57 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'urlProperties'
2015-11-24 14:28:57,13315-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'urlProperties'
2015-11-24 14:28:57,13315-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'urlProperties' to allow for resolving potential circular references
2015-11-24 14:28:57,13515-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:57,13615-11-24 14:28:57 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'urlProperties'
2015-11-24 14:28:57,13615-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:28:57,13815-11-24 14:28:57 DEBUG (AbstractApplicationContext.java:858 LINE) AbstractApplicationContext.initLifecycleProcessor -> Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4a35d93f]
2015-11-24 14:28:57,13915-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:28:57,17415-11-24 14:28:57 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2015-11-24 14:28:57,17515-11-24 14:28:57 DEBUG (PropertySourcesPropertyResolver.java:70 LINE) PropertySourcesPropertyResolver.getProperty -> Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2015-11-24 14:28:57,17615-11-24 14:28:57 DEBUG (PropertySourcesPropertyResolver.java:93 LINE) PropertySourcesPropertyResolver.getProperty -> Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2015-11-24 14:28:57,17615-11-24 14:28:57 DEBUG (CacheAwareContextLoaderDelegate.java:93 LINE) CacheAwareContextLoaderDelegate.loadContext -> Storing ApplicationContext in cache under key [[MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:28:57,18215-11-24 14:28:57 DEBUG (InjectionMetadata.java:85 LINE) InjectionMetadata.inject -> Processing injected method of bean 'com.fx.mobile.junit.UserOperateDaoImplTest': ResourceElement for com.fx.mobile.user.dao.UserOperateDao com.fx.mobile.junit.UserOperateDaoImplTest.userOperateDao
2015-11-24 14:28:57,18315-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'userOperateDao'
2015-11-24 14:28:57,18315-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:28:57,20715-11-24 14:28:57 DEBUG (SessionFactoryUtils.java:322 LINE) SessionFactoryUtils.doGetSession -> Opening Hibernate Session
2015-11-24 14:28:57,24915-11-24 14:28:57 DEBUG (SessionImpl.java:265 LINE) SessionImpl.<init> -> opened session at timestamp: 5932427416403968
2015-11-24 14:28:57,34315-11-24 14:28:57 DEBUG (QueryTranslatorImpl.java:274 LINE) QueryTranslatorImpl.parse -> parse() - HQL: from com.fx.mobile.model.UserOperate where userName='芳草碧连天' or userPhoneNumb='芳草碧连天'  or userEmail='芳草碧连天'
2015-11-24 14:28:57,35615-11-24 14:28:57 DEBUG (QueryTranslatorImpl.java:293 LINE) QueryTranslatorImpl.showHqlAst -> --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  \-[IDENT] Node: 'fx'
    |           |  |  \-[IDENT] Node: 'mobile'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'UserOperate'
    \-[WHERE] Node: 'where'
       \-[OR] Node: 'or'
          +-[OR] Node: 'or'
          |  +-[EQ] Node: '='
          |  |  +-[IDENT] Node: 'userName'
          |  |  \-[QUOTED_STRING] Node: ''\u82b3\u8349\u78a7\u8fde\u5929''
          |  \-[EQ] Node: '='
          |     +-[IDENT] Node: 'userPhoneNumb'
          |     \-[QUOTED_STRING] Node: ''\u82b3\u8349\u78a7\u8fde\u5929''
          \-[EQ] Node: '='
             +-[IDENT] Node: 'userEmail'
             \-[QUOTED_STRING] Node: ''\u82b3\u8349\u78a7\u8fde\u5929''

2015-11-24 14:28:57,35615-11-24 14:28:57 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:28:57,39115-11-24 14:28:57 DEBUG (HqlSqlBaseWalker.java:111 LINE) HqlSqlBaseWalker.beforeStatement -> select << begin [level=1, statement=select]
2015-11-24 14:28:57,41715-11-24 14:28:57 DEBUG (FromElement.java:157 LINE) FromElement.doInitialize -> FromClause{level=1} :  com.fx.mobile.model.UserOperate (no alias) -> useroperat0_
2015-11-24 14:28:57,43315-11-24 14:28:57 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 14:28:57,43815-11-24 14:28:57 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userName -> org.hibernate.type.StringType@455fcabc
2015-11-24 14:28:57,44015-11-24 14:28:57 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userName -> useroperat0_.userName
2015-11-24 14:28:57,44115-11-24 14:28:57 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 14:28:57,44215-11-24 14:28:57 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userPhoneNumb -> org.hibernate.type.StringType@455fcabc
2015-11-24 14:28:57,44215-11-24 14:28:57 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userPhoneNumb -> useroperat0_.user_PhoneNumb
2015-11-24 14:28:57,44215-11-24 14:28:57 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias} -> {synthetic-alias}
2015-11-24 14:28:57,44215-11-24 14:28:57 DEBUG (DotNode.java:613 LINE) DotNode.getDataType -> getDataType() : userEmail -> org.hibernate.type.StringType@455fcabc
2015-11-24 14:28:57,47515-11-24 14:28:57 DEBUG (FromReferenceNode.java:74 LINE) FromReferenceNode.setResolved -> Resolved :  {synthetic-alias}.userEmail -> useroperat0_.userEmail
2015-11-24 14:28:57,47615-11-24 14:28:57 DEBUG (HqlSqlBaseWalker.java:117 LINE) HqlSqlBaseWalker.beforeStatementCompletion -> select : finishing up [level=1, statement=select]
2015-11-24 14:28:57,47615-11-24 14:28:57 DEBUG (HqlSqlWalker.java:625 LINE) HqlSqlWalker.processQuery -> processQuery() :  ( SELECT ( FromClause{level=1} user_operate useroperat0_ ) ( where ( or ( or ( = ( useroperat0_.userName {synthetic-alias} userName ) '芳草碧连天' ) ( = ( useroperat0_.user_PhoneNumb {synthetic-alias} userPhoneNumb ) '芳草碧连天' ) ) ( = ( useroperat0_.userEmail {synthetic-alias} userEmail ) '芳草碧连天' ) ) ) )
2015-11-24 14:28:57,48315-11-24 14:28:57 DEBUG (HqlSqlWalker.java:868 LINE) HqlSqlWalker.createSelectClauseFromFromClause -> Derived SELECT clause created.
2015-11-24 14:28:57,49115-11-24 14:28:57 DEBUG (JoinProcessor.java:179 LINE) JoinProcessor.addJoinNodes -> Using FROM fragment [user_operate useroperat0_]
2015-11-24 14:28:57,49115-11-24 14:28:57 DEBUG (HqlSqlBaseWalker.java:123 LINE) HqlSqlBaseWalker.afterStatementCompletion -> select >> end [level=1, statement=select]
2015-11-24 14:28:57,49215-11-24 14:28:57 DEBUG (QueryTranslatorImpl.java:260 LINE) QueryTranslatorImpl.analyze -> --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user_operate)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'useroperat0_.id as id0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}}
    |  \-[SQL_TOKEN] SqlFragment: 'useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[useroperat0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'user_operate useroperat0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=user_operate,tableAlias=useroperat0_,origin=null,columns={,className=com.fx.mobile.model.UserOperate}}
    \-[WHERE] SqlNode: 'where'
       \-[OR] SqlNode: 'or'
          +-[OR] SqlNode: 'or'
          |  +-[EQ] BinaryLogicOperatorNode: '='
          |  |  +-[DOT] DotNode: 'useroperat0_.userName' {propertyName=userName,dereferenceType=ALL,propertyPath=userName,path={synthetic-alias}.userName,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |  |  |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  |  |  \-[IDENT] IdentNode: 'userName' {originalText=userName}
          |  |  \-[QUOTED_STRING] LiteralNode: ''\u82b3\u8349\u78a7\u8fde\u5929''
          |  \-[EQ] BinaryLogicOperatorNode: '='
          |     +-[DOT] DotNode: 'useroperat0_.user_PhoneNumb' {propertyName=userPhoneNumb,dereferenceType=ALL,propertyPath=userPhoneNumb,path={synthetic-alias}.userPhoneNumb,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
          |     |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |     |  \-[IDENT] IdentNode: 'userPhoneNumb' {originalText=userPhoneNumb}
          |     \-[QUOTED_STRING] LiteralNode: ''\u82b3\u8349\u78a7\u8fde\u5929''
          \-[EQ] BinaryLogicOperatorNode: '='
             +-[DOT] DotNode: 'useroperat0_.userEmail' {propertyName=userEmail,dereferenceType=ALL,propertyPath=userEmail,path={synthetic-alias}.userEmail,tableAlias=useroperat0_,className=com.fx.mobile.model.UserOperate,classAlias=null}
             |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
             |  \-[IDENT] IdentNode: 'userEmail' {originalText=userEmail}
             \-[QUOTED_STRING] LiteralNode: ''\u82b3\u8349\u78a7\u8fde\u5929''

2015-11-24 14:28:57,49215-11-24 14:28:57 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:28:57,50315-11-24 14:28:57 DEBUG (QueryTranslatorImpl.java:243 LINE) QueryTranslatorImpl.generate -> HQL: from com.fx.mobile.model.UserOperate where userName='芳草碧连天' or userPhoneNumb='芳草碧连天'  or userEmail='芳草碧连天'
2015-11-24 14:28:57,50315-11-24 14:28:57 DEBUG (QueryTranslatorImpl.java:244 LINE) QueryTranslatorImpl.generate -> SQL: select useroperat0_.id as id0_, useroperat0_.userName as userName0_, useroperat0_.userPassword as userPass3_0_, useroperat0_.phicomm_id as phicomm4_0_, useroperat0_.userEmail as userEmail0_, useroperat0_.user_PhoneNumb as user6_0_, useroperat0_.userType as userType0_, useroperat0_.isChecked as isChecked0_, useroperat0_.nickname as nickname0_, useroperat0_.figureurl as figureurl0_, useroperat0_.sex as sex0_, useroperat0_.province as province0_, useroperat0_.city as city0_, useroperat0_.birthday as birthday0_, useroperat0_.open_id as open15_0_, useroperat0_.open_key as open16_0_, useroperat0_.access_token as access17_0_, useroperat0_.expirese_in as expirese18_0_, useroperat0_.devinfo as devinfo0_, useroperat0_.userinfo as userinfo0_, useroperat0_.openqq as openqq0_, useroperat0_.openqqinfo as openqqinfo0_, useroperat0_.opensina as opensina0_, useroperat0_.opensinainfo as opensin24_0_, useroperat0_.createTime as createTime0_, useroperat0_.updateTime as updateTime0_, useroperat0_.lastLoginTime as lastLog27_0_ from user_operate useroperat0_ where useroperat0_.userName='芳草碧连天' or useroperat0_.user_PhoneNumb='芳草碧连天' or useroperat0_.userEmail='芳草碧连天'
2015-11-24 14:28:57,50415-11-24 14:28:57 DEBUG (ErrorCounter.java:91 LINE) ErrorCounter.throwQueryException -> throwQueryException() : no errors
2015-11-24 14:28:57,51815-11-24 14:28:57 DEBUG (AbstractBatcher.java:410 LINE) AbstractBatcher.logOpenPreparedStatement -> about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
2015-11-24 14:28:57,51915-11-24 14:28:57 DEBUG (ConnectionManager.java:444 LINE) ConnectionManager.openConnection -> opening JDBC connection
2015-11-24 14:28:57,52115-11-24 14:28:57 DEBUG (SQLStatementLogger.java:111 LINE) SQLStatementLogger.logStatement -> 
    select
        useroperat0_.id as id0_,
        useroperat0_.userName as userName0_,
        useroperat0_.userPassword as userPass3_0_,
        useroperat0_.phicomm_id as phicomm4_0_,
        useroperat0_.userEmail as userEmail0_,
        useroperat0_.user_PhoneNumb as user6_0_,
        useroperat0_.userType as userType0_,
        useroperat0_.isChecked as isChecked0_,
        useroperat0_.nickname as nickname0_,
        useroperat0_.figureurl as figureurl0_,
        useroperat0_.sex as sex0_,
        useroperat0_.province as province0_,
        useroperat0_.city as city0_,
        useroperat0_.birthday as birthday0_,
        useroperat0_.open_id as open15_0_,
        useroperat0_.open_key as open16_0_,
        useroperat0_.access_token as access17_0_,
        useroperat0_.expirese_in as expirese18_0_,
        useroperat0_.devinfo as devinfo0_,
        useroperat0_.userinfo as userinfo0_,
        useroperat0_.openqq as openqq0_,
        useroperat0_.openqqinfo as openqqinfo0_,
        useroperat0_.opensina as opensina0_,
        useroperat0_.opensinainfo as opensin24_0_,
        useroperat0_.createTime as createTime0_,
        useroperat0_.updateTime as updateTime0_,
        useroperat0_.lastLoginTime as lastLog27_0_ 
    from
        user_operate useroperat0_ 
    where
        useroperat0_.userName='芳草碧连天' 
        or useroperat0_.user_PhoneNumb='芳草碧连天' 
        or useroperat0_.userEmail='芳草碧连天'
2015-11-24 14:28:57,53715-11-24 14:28:57 DEBUG (AbstractBatcher.java:426 LINE) AbstractBatcher.logOpenResults -> about to open ResultSet (open ResultSets: 0, globally: 0)
2015-11-24 14:28:57,54215-11-24 14:28:57 DEBUG (Loader.java:1322 LINE) Loader.getRow -> result row: EntityKey[com.fx.mobile.model.UserOperate#2]
2015-11-24 14:28:57,54815-11-24 14:28:57 DEBUG (AbstractBatcher.java:433 LINE) AbstractBatcher.logCloseResults -> about to close ResultSet (open ResultSets: 1, globally: 1)
2015-11-24 14:28:57,54815-11-24 14:28:57 DEBUG (AbstractBatcher.java:418 LINE) AbstractBatcher.logClosePreparedStatement -> about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
2015-11-24 14:28:57,54915-11-24 14:28:57 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 14:28:57,54915-11-24 14:28:57 DEBUG (ConnectionManager.java:464 LINE) ConnectionManager.closeConnection -> releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
2015-11-24 14:28:57,55115-11-24 14:28:57 DEBUG (TwoPhaseLoad.java:130 LINE) TwoPhaseLoad.initializeEntity -> resolving associations for [com.fx.mobile.model.UserOperate#2]
2015-11-24 14:28:57,55415-11-24 14:28:57 DEBUG (TwoPhaseLoad.java:255 LINE) TwoPhaseLoad.initializeEntity -> done materializing entity [com.fx.mobile.model.UserOperate#2]
2015-11-24 14:28:57,55515-11-24 14:28:57 DEBUG (StatefulPersistenceContext.java:893 LINE) StatefulPersistenceContext.initializeNonLazyCollections -> initializing non-lazy collections
2015-11-24 14:28:57,55715-11-24 14:28:57 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 14:28:57,55815-11-24 14:28:57 DEBUG (HibernateAccessor.java:389 LINE) HibernateAccessor.flushIfNecessary -> Eagerly flushing Hibernate session
2015-11-24 14:28:57,55915-11-24 14:28:57 DEBUG (AbstractFlushingEventListener.java:134 LINE) AbstractFlushingEventListener.prepareEntityFlushes -> processing flush-time cascades
2015-11-24 14:28:57,56115-11-24 14:28:57 DEBUG (AbstractFlushingEventListener.java:177 LINE) AbstractFlushingEventListener.prepareCollectionFlushes -> dirty checking collections
2015-11-24 14:28:57,56415-11-24 14:28:57 DEBUG (AbstractFlushingEventListener.java:108 LINE) AbstractFlushingEventListener.flushEverythingToExecutions -> Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2015-11-24 14:28:57,56415-11-24 14:28:57 DEBUG (AbstractFlushingEventListener.java:114 LINE) AbstractFlushingEventListener.flushEverythingToExecutions -> Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2015-11-24 14:28:57,56615-11-24 14:28:57 DEBUG (Printer.java:106 LINE) Printer.toString -> listing entities:
2015-11-24 14:28:57,56615-11-24 14:28:57 DEBUG (Printer.java:113 LINE) Printer.toString -> com.fx.mobile.model.UserOperate{createTime=null, birthday=null, sex=null, accessToken=a75e2666765d54ebe5cfcd8f919d4a40, openqq=null, userPassword=e10adc3949ba59abbe56e057, opensina=null, userEmail=null, userinfo=null, openKey=dbd2a27b2d6b4e0754b8539448fb3377, userType=userSrc, city=null, id=2, isChecked=null, province=null, userName=芳草碧连天, expireseIn=2015-11-23 15:21:49, opensinainfo=null, figureurl=null, lastLoginTime=null, updateTime=null, nickname=null, userPhoneNumb=18251901682, phicommId=124, openqqinfo=null, devinfo=null, openId=6f06d7f4-89ec-47ce-8cc2-7075223f6feb}
2015-11-24 14:28:57,56615-11-24 14:28:57 DEBUG (ConnectionManager.java:427 LINE) ConnectionManager.aggressiveRelease -> aggressively releasing JDBC connection
2015-11-24 14:28:57,56715-11-24 14:28:57 DEBUG (SessionFactoryUtils.java:800 LINE) SessionFactoryUtils.closeSession -> Closing Hibernate Session
2015-11-24 14:28:57,62115-11-24 14:28:57 DEBUG (DirtiesContextTestExecutionListener.java:107 LINE) DirtiesContextTestExecutionListener.afterTestMethod -> After test method: context [[TestContext@3b1a82fd testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@498dce5b, testMethod = getListTest@UserOperateDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], class dirties context [false], class mode [null], method dirties context [false].
2015-11-24 14:28:57,62215-11-24 14:28:57 DEBUG (DirtiesContextTestExecutionListener.java:138 LINE) DirtiesContextTestExecutionListener.afterTestClass -> After test class: context [[TestContext@3b1a82fd testClass = UserOperateDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7ce6de16 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]], dirtiesContext [false].
2015-11-24 14:28:57,62715-11-24 14:28:57  INFO (AbstractApplicationContext.java:1042 LINE) AbstractApplicationContext.doClose -> Closing org.springframework.context.support.GenericApplicationContext@20a893d5: startup date [Tue Nov 24 14:28:52 CST 2015]; root of context hierarchy
2015-11-24 14:28:57,62815-11-24 14:28:57 DEBUG (AbstractBeanFactory.java:246 LINE) AbstractBeanFactory.doGetBean -> Returning cached instance of singleton bean 'lifecycleProcessor'
2015-11-24 14:28:57,62815-11-24 14:28:57  INFO (DefaultSingletonBeanRegistry.java:444 LINE) DefaultSingletonBeanRegistry.destroySingletons -> Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2aba391a: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:28:57,63515-11-24 14:28:57 DEBUG (DefaultSingletonBeanRegistry.java:500 LINE) DefaultSingletonBeanRegistry.destroyBean -> Retrieved dependent beans for bean 'userOperateDao': [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:28:57,63515-11-24 14:28:57 DEBUG (DisposableBeanAdapter.java:219 LINE) DisposableBeanAdapter.destroy -> Invoking destroy() on bean with name 'sessionFactory'
2015-11-24 14:28:57,63515-11-24 14:28:57  INFO (AbstractSessionFactoryBean.java:223 LINE) AbstractSessionFactoryBean.destroy -> Closing Hibernate SessionFactory
2015-11-24 14:28:57,63515-11-24 14:28:57  INFO (SessionFactoryImpl.java:927 LINE) SessionFactoryImpl.close -> closing
2015-11-24 14:28:57,65415-11-24 14:28:57 DEBUG (DisposableBeanAdapter.java:295 LINE) DisposableBeanAdapter.invokeCustomDestroyMethod -> Invoking destroy method 'close' on bean with name 'dataSource'
2015-11-24 14:29:29,11415-11-24 14:29:29 DEBUG (SpringJUnit4ClassRunner.java:106 LINE) SpringJUnit4ClassRunner.<init> -> SpringJUnit4ClassRunner constructor called with [class com.fx.mobile.junit.UserOperateDaoImplTest].
2015-11-24 14:29:29,22015-11-24 14:29:29 DEBUG (AbstractDelegatingSmartContextLoader.java:89 LINE) AbstractDelegatingSmartContextLoader.delegateProcessing -> Delegating to GenericXmlContextLoader to process context configuration [ContextConfigurationAttributes@2db8dc9 declaringClass = 'com.fx.mobile.junit.UserOperateDaoImplTest', locations = '{classpath*:context/*-context.xml}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'org.springframework.test.context.ContextLoader'].
2015-11-24 14:29:29,22215-11-24 14:29:29 DEBUG (ContextLoaderUtils.java:471 LINE) ContextLoaderUtils.resolveActiveProfiles -> Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:29:29,22415-11-24 14:29:29 DEBUG (TestContextManager.java:184 LINE) TestContextManager.retrieveTestExecutionListeners -> @TestExecutionListeners is not present for class [class com.fx.mobile.junit.UserOperateDaoImplTest]: using defaults.
2015-11-24 14:29:29,29515-11-24 14:29:29 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:29:29,29615-11-24 14:29:29 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:29:29,29915-11-24 14:29:29 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:29:29,29915-11-24 14:29:29 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:29:29,30415-11-24 14:29:29 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:29:29,30515-11-24 14:29:29 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:29:29,31015-11-24 14:29:29 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:29:29,31115-11-24 14:29:29 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:29:29,31215-11-24 14:29:29 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:29:29,31215-11-24 14:29:29 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:29:29,31415-11-24 14:29:29 DEBUG (ProfileValueUtils.java:68 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved @ProfileValueSourceConfiguration [null] for test class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:29:29,31415-11-24 14:29:29 DEBUG (ProfileValueUtils.java:80 LINE) ProfileValueUtils.retrieveProfileValueSource -> Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.fx.mobile.junit.UserOperateDaoImplTest]
2015-11-24 14:29:29,32615-11-24 14:29:29 DEBUG (DependencyInjectionTestExecutionListener.java:73 LINE) DependencyInjectionTestExecutionListener.prepareTestInstance -> Performing dependency injection for test context [[TestContext@467c1a71 testClass = UserOperateDaoImplTest, testInstance = com.fx.mobile.junit.UserOperateDaoImplTest@7dac14dd, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2c8df9a0 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]]].
2015-11-24 14:29:29,32715-11-24 14:29:29 DEBUG (AbstractDelegatingSmartContextLoader.java:98 LINE) AbstractDelegatingSmartContextLoader.delegateLoading -> Delegating to GenericXmlContextLoader to load context from [MergedContextConfiguration@2c8df9a0 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]].
2015-11-24 14:29:29,32715-11-24 14:29:29 DEBUG (AbstractGenericContextLoader.java:104 LINE) AbstractGenericContextLoader.loadContext -> Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@2c8df9a0 testClass = UserOperateDaoImplTest, locations = '{classpath*:context/*-context.xml}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'org.springframework.test.context.support.DelegatingSmartContextLoader', parent = [null]]].
2015-11-24 14:29:29,51915-11-24 14:29:29 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:29:29,52215-11-24 14:29:29 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:29:29,52515-11-24 14:29:29 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:29:29,52615-11-24 14:29:29 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:29:29,53515-11-24 14:29:29 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:29:29,53615-11-24 14:29:29 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:29:29,53615-11-24 14:29:29 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:29:29,53615-11-24 14:29:29 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:29:29,54815-11-24 14:29:29 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\context]
2015-11-24 14:29:29,54915-11-24 14:29:29 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\context] for files matching pattern [G:/workspace/mobile-user/target/classes/context/*-context.xml]
2015-11-24 14:29:29,55415-11-24 14:29:29 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:context/*-context.xml] to resources [file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml], file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml], file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]]
2015-11-24 14:29:29,55515-11-24 14:29:29  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-controller-context.xml]
2015-11-24 14:29:29,56015-11-24 14:29:29 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:29:29,62015-11-24 14:29:29 DEBUG (PluggableSchemaResolver.java:140 LINE) PluggableSchemaResolver.getSchemaMappings -> Loading schema mappings from [META-INF/spring.schemas]
2015-11-24 14:29:29,63415-11-24 14:29:29 DEBUG (PluggableSchemaResolver.java:146 LINE) PluggableSchemaResolver.getSchemaMappings -> Loaded schema mappings: {http://www.springframework.org/schema/redis/spring-redis-1.0.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://mybatis.org/schema/mybatis-spring-1.2.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/redis/spring-redis.xsd=org/springframework/data/redis/config/spring-redis-1.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://mybatis.org/schema/mybatis-spring.xsd=org/mybatis/spring/config/mybatis-spring-1.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd}
2015-11-24 14:29:29,64815-11-24 14:29:29 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:29:29,71515-11-24 14:29:29 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:29:29,72315-11-24 14:29:29  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-dao-context.xml]
2015-11-24 14:29:29,72515-11-24 14:29:29 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:29:29,72815-11-24 14:29:29 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:29:29,80815-11-24 14:29:29 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:29:29,82015-11-24 14:29:29  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-datasource-context.xml]
2015-11-24 14:29:29,82215-11-24 14:29:29 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:29:29,83015-11-24 14:29:29 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:29:29,86115-11-24 14:29:29 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tx/spring-tx-3.0.xsd] in classpath: org/springframework/transaction/config/spring-tx-3.0.xsd
2015-11-24 14:29:29,86715-11-24 14:29:29 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:29:29,87115-11-24 14:29:29 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:29:29,87815-11-24 14:29:29 DEBUG (DefaultNamespaceHandlerResolver.java:156 LINE) DefaultNamespaceHandlerResolver.getHandlerMappings -> Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/redis=org.springframework.data.redis.config.RedisNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://mybatis.org/schema/mybatis-spring=org.mybatis.spring.config.NamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}
2015-11-24 14:29:29,92615-11-24 14:29:29  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]
2015-11-24 14:29:29,92815-11-24 14:29:29 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:29:29,93115-11-24 14:29:29 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:29:29,94915-11-24 14:29:29 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/context/spring-context-3.0.xsd] in classpath: org/springframework/context/config/spring-context-3.0.xsd
2015-11-24 14:29:29,95415-11-24 14:29:29 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/tool/spring-tool-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-3.0.xsd
2015-11-24 14:29:29,96315-11-24 14:29:29 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:29:29,99415-11-24 14:29:29  INFO (ClassPathScanningCandidateComponentProvider.java:222 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-250 'javax.annotation.ManagedBean' found and supported for component scanning
2015-11-24 14:29:29,99715-11-24 14:29:29  INFO (ClassPathScanningCandidateComponentProvider.java:230 LINE) ClassPathScanningCandidateComponentProvider.registerDefaultFilters -> JSR-330 'javax.inject.Named' annotation found and supported for component scanning
2015-11-24 14:29:30,00815-11-24 14:29:30 DEBUG (PathMatchingResourcePatternResolver.java:550 LINE) PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources -> Looking for matching resources in directory tree [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service]
2015-11-24 14:29:30,01115-11-24 14:29:30 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:29:30,01215-11-24 14:29:30 DEBUG (PathMatchingResourcePatternResolver.java:612 LINE) PathMatchingResourcePatternResolver.doRetrieveMatchingFiles -> Searching directory [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl] for files matching pattern [G:/workspace/mobile-user/target/classes/com/fx/mobile/user/service/**/*.class]
2015-11-24 14:29:30,01515-11-24 14:29:30 DEBUG (PathMatchingResourcePatternResolver.java:351 LINE) PathMatchingResourcePatternResolver.findPathMatchingResources -> Resolved location pattern [classpath*:com/fx/mobile/user/service/**/*.class] to resources [file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CommonDao.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\CrashLogService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\NoteNumRecordService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UrlProperties.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserinterfaceService.class], file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\UserOperateService.class]]
2015-11-24 14:29:30,15115-11-24 14:29:30 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\CrashLogServiceImpl.class]
2015-11-24 14:29:30,15915-11-24 14:29:30 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\NoteNumRecordServiceImpl.class]
2015-11-24 14:29:30,16115-11-24 14:29:30 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserInterfaceServiceImpl.class]
2015-11-24 14:29:30,16315-11-24 14:29:30 DEBUG (ClassPathScanningCandidateComponentProvider.java:264 LINE) ClassPathScanningCandidateComponentProvider.findCandidateComponents -> Identified candidate component class: file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]
2015-11-24 14:29:30,17515-11-24 14:29:30  INFO (DefaultListableBeanFactory.java:644 LINE) DefaultListableBeanFactory.registerBeanDefinition -> Overriding bean definition for bean 'operateService': replacing [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=prototype; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\com\fx\mobile\user\service\impl\UserOperateServiceImp.class]] with [Generic bean: class [com.fx.mobile.user.service.impl.UserOperateServiceImp]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [G:\workspace\mobile-user\target\classes\context\marketing-service-context.xml]]
2015-11-24 14:29:30,17615-11-24 14:29:30  INFO (XmlBeanDefinitionReader.java:315 LINE) XmlBeanDefinitionReader.loadBeanDefinitions -> Loading XML bean definitions from file [G:\workspace\mobile-user\target\classes\context\nosql-redis-context.xml]
2015-11-24 14:29:30,18015-11-24 14:29:30 DEBUG (DefaultDocumentLoader.java:72 LINE) DefaultDocumentLoader.loadDocument -> Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2015-11-24 14:29:30,18515-11-24 14:29:30 DEBUG (PluggableSchemaResolver.java:118 LINE) PluggableSchemaResolver.resolveEntity -> Found XML schema [http://www.springframework.org/schema/beans/spring-beans-3.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-3.0.xsd
2015-11-24 14:29:30,22215-11-24 14:29:30 DEBUG (DefaultBeanDefinitionDocumentReader.java:108 LINE) DefaultBeanDefinitionDocumentReader.registerBeanDefinitions -> Loading bean definitions
2015-11-24 14:29:30,22515-11-24 14:29:30 DEBUG (AbstractBeanDefinitionReader.java:216 LINE) AbstractBeanDefinitionReader.loadBeanDefinitions -> Loaded 25 bean definitions from location pattern [classpath*:context/*-context.xml]
2015-11-24 14:29:30,26615-11-24 14:29:30  INFO (AbstractApplicationContext.java:510 LINE) AbstractApplicationContext.prepareRefresh -> Refreshing org.springframework.context.support.GenericApplicationContext@c9e3b21: startup date [Tue Nov 24 14:29:30 CST 2015]; root of context hierarchy
2015-11-24 14:29:30,26915-11-24 14:29:30 DEBUG (AbstractApplicationContext.java:540 LINE) AbstractApplicationContext.obtainFreshBeanFactory -> Bean factory for org.springframework.context.support.GenericApplicationContext@c9e3b21: org.springframework.beans.factory.support.DefaultListableBeanFactory@4f768377: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties]; root of factory hierarchy
2015-11-24 14:29:30,31315-11-24 14:29:30 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:29:30,31415-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:29:30,33315-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:29:30,33515-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
2015-11-24 14:29:30,47015-11-24 14:29:30 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'corePropertyConfigurer'
2015-11-24 14:29:30,47115-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:29:30,47615-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'corePropertyConfigurer' to allow for resolving potential circular references
2015-11-24 14:29:30,59415-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'corePropertyConfigurer'
2015-11-24 14:29:30,59415-11-24 14:29:30  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/jdbc.properties]
2015-11-24 14:29:30,59515-11-24 14:29:30  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/market.properties]
2015-11-24 14:29:30,59515-11-24 14:29:30  INFO (PropertiesLoaderSupport.java:177 LINE) PropertiesLoaderSupport.loadProperties -> Loading properties file from URL [file:/G:/workspace/mobile-user/target/classes/user.properties]
2015-11-24 14:29:30,60515-11-24 14:29:30 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:29:30,60515-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:29:30,60615-11-24 14:29:30  INFO (AutowiredAnnotationBeanPostProcessor.java:140 LINE) AutowiredAnnotationBeanPostProcessor.<init> -> JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2015-11-24 14:29:30,60715-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:29:30,60715-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
2015-11-24 14:29:30,60715-11-24 14:29:30 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:29:30,60815-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:29:30,60915-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:29:30,61015-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
2015-11-24 14:29:30,61015-11-24 14:29:30 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:29:30,61015-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:29:30,61615-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:29:30,61615-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
2015-11-24 14:29:30,61715-11-24 14:29:30 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:29:30,61715-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:29:30,61715-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
2015-11-24 14:29:30,61815-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
2015-11-24 14:29:30,61815-11-24 14:29:30 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:29:30,61815-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:29:30,61815-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
2015-11-24 14:29:30,61915-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
2015-11-24 14:29:30,61915-11-24 14:29:30 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:29:30,61915-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:29:30,63515-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2015-11-24 14:29:30,65815-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2015-11-24 14:29:30,66215-11-24 14:29:30 DEBUG (AbstractApplicationContext.java:807 LINE) AbstractApplicationContext.initMessageSource -> Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3b6a05ff]
2015-11-24 14:29:30,66515-11-24 14:29:30 DEBUG (AbstractApplicationContext.java:831 LINE) AbstractApplicationContext.initApplicationEventMulticaster -> Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@478a0598]
2015-11-24 14:29:30,67215-11-24 14:29:30  INFO (DefaultListableBeanFactory.java:577 LINE) DefaultListableBeanFactory.preInstantiateSingletons -> Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4f768377: defining beans [userOperateDao,userInterfaceDao,noteNumRecordDao,crashLogDao,dataSource,sessionFactory,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor,transactionManager,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,crashLogService,noteNumRecordService,userInterfaceService,operateService,SpringContextUtil,fileRemote,corePropertyConfigurer,userinterfaceService,urlProperties,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor]; root of factory hierarchy
2015-11-24 14:29:30,67315-11-24 14:29:30 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'userOperateDao'
2015-11-24 14:29:30,67315-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'userOperateDao'
2015-11-24 14:29:30,68315-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'userOperateDao' to allow for resolving potential circular references
2015-11-24 14:29:30,69115-11-24 14:29:30 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'sessionFactory'
2015-11-24 14:29:30,69215-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'sessionFactory'
2015-11-24 14:29:30,70415-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2015-11-24 14:29:30,78315-11-24 14:29:30 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'dataSource'
2015-11-24 14:29:30,78315-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'dataSource'
2015-11-24 14:29:30,95415-11-24 14:29:30 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2015-11-24 14:29:30,96515-11-24 14:29:30 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:29:30,96615-11-24 14:29:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:29:30,96715-11-24 14:29:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:29:30,96715-11-24 14:29:30 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:29:30,97115-11-24 14:29:30 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:29:30,97115-11-24 14:29:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:29:30,97215-11-24 14:29:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:29:30,97315-11-24 14:29:30 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:29:30,97415-11-24 14:29:30 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:29:30,97515-11-24 14:29:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:29:30,97515-11-24 14:29:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:29:30,97615-11-24 14:29:30 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:29:30,99615-11-24 14:29:30 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:29:30,99615-11-24 14:29:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:29:30,99715-11-24 14:29:30 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:29:30,99815-11-24 14:29:30 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:29:31,00015-11-24 14:29:31 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:29:31,00015-11-24 14:29:31 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:29:31,00115-11-24 14:29:31 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:29:31,00115-11-24 14:29:31 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:29:31,02715-11-24 14:29:31 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:31,02915-11-24 14:29:31 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:31,03615-11-24 14:29:31 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2015-11-24 14:29:31,08015-11-24 14:29:31 DEBUG (DefaultSingletonBeanRegistry.java:215 LINE) DefaultSingletonBeanRegistry.getSingleton -> Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:29:31,08115-11-24 14:29:31 DEBUG (AbstractAutowireCapableBeanFactory.java:435 LINE) AbstractAutowireCapableBeanFactory.createBean -> Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:29:31,08215-11-24 14:29:31 DEBUG (AbstractAutowireCapableBeanFactory.java:509 LINE) AbstractAutowireCapableBeanFactory.doCreateBean -> Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2015-11-24 14:29:31,09715-11-24 14:29:31 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2015-11-24 14:29:31,09815-11-24 14:29:31 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2015-11-24 14:29:31,10415-11-24 14:29:31 DEBUG (AbstractAutowireCapableBeanFactory.java:463 LINE) AbstractAutowireCapableBeanFactory.createBean -> Finished creating instance of bean 'dataSource'
2015-11-24 14:29:31,10615-11-24 14:29:31 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:29:31,11015-11-24 14:29:31 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:29:31,11315-11-24 14:29:31 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:29:31,11615-11-24 14:29:31 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:29:31,11715-11-24 14:29:31 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:29:31,11815-11-24 14:29:31 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:29:31,11915-11-24 14:29:31 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:29:31,11915-11-24 14:29:31 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:29:31,12015-11-24 14:29:31 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:29:31,12115-11-24 14:29:31 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:29:31,12215-11-24 14:29:31 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:29:31,12315-11-24 14:29:31 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:29:31,12415-11-24 14:29:31 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:29:31,12415-11-24 14:29:31 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:29:31,12515-11-24 14:29:31 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:29:31,12615-11-24 14:29:31 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:29:31,13015-11-24 14:29:31 DEBUG (AbstractEnvironment.java:112 LINE) AbstractEnvironment.<init> -> Initializing new StandardEnvironment
2015-11-24 14:29:31,13115-11-24 14:29:31 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemProperties] PropertySource with lowest search precedence
2015-11-24 14:29:31,15015-11-24 14:29:31 DEBUG (MutablePropertySources.java:107 LINE) MutablePropertySources.addLast -> Adding [systemEnvironment] PropertySource with lowest search precedence
2015-11-24 14:29:31,15215-11-24 14:29:31 DEBUG (AbstractEnvironment.java:116 LINE) AbstractEnvironment.<init> -> Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2015-11-24 14:29:31,20315-11-24 14:29:31 DEBUG (AbstractAutowireCapableBeanFactory.java:1529 LINE) AbstractAutowireCapableBeanFactory.invokeInitMethods -> Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2015-11-24 14:29:31,41115-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@394943b2
2015-11-24 14:29:31,41115-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@394943b2
2015-11-24 14:29:31,41115-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@394943b2
2015-11-24 14:29:31,41815-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@50e83abb
2015-11-24 14:29:31,42415-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@2708d3bf
2015-11-24 14:29:31,42815-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@663c18ab
2015-11-24 14:29:31,43515-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@63012b1b
2015-11-24 14:29:31,43515-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@63012b1b
2015-11-24 14:29:31,43515-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@63012b1b
2015-11-24 14:29:31,43915-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@7f1b048c
2015-11-24 14:29:31,44015-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@7f1b048c
2015-11-24 14:29:31,44115-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7f1b048c
2015-11-24 14:29:31,44915-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@64cbb440
2015-11-24 14:29:31,45015-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@64cbb440
2015-11-24 14:29:31,45115-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64cbb440
2015-11-24 14:29:31,45615-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@4aa55143
2015-11-24 14:29:31,45615-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@4aa55143
2015-11-24 14:29:31,45715-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4aa55143
2015-11-24 14:29:31,46215-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4b0f6ef
2015-11-24 14:29:31,46315-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4b0f6ef
2015-11-24 14:29:31,46415-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b0f6ef
2015-11-24 14:29:31,47315-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@290e1b2
2015-11-24 14:29:31,47315-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@290e1b2
2015-11-24 14:29:31,47315-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@290e1b2
2015-11-24 14:29:31,47715-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@6dfc2e0b
2015-11-24 14:29:31,47815-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@6dfc2e0b
2015-11-24 14:29:31,47815-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6dfc2e0b
2015-11-24 14:29:31,52315-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@989f8c6
2015-11-24 14:29:31,52415-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@989f8c6
2015-11-24 14:29:31,52615-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d4e97a1
2015-11-24 14:29:31,52615-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d4e97a1
2015-11-24 14:29:31,52915-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@3fbbaaad
2015-11-24 14:29:31,52915-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@3fbbaaad
2015-11-24 14:29:31,53115-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@6495dc5a
2015-11-24 14:29:31,53215-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@6495dc5a
2015-11-24 14:29:31,53515-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@3098cc00
2015-11-24 14:29:31,53615-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@3098cc00
2015-11-24 14:29:31,54015-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@56515185
2015-11-24 14:29:31,54015-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56515185
2015-11-24 14:29:31,54515-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@50aaaf66
2015-11-24 14:29:31,54615-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50aaaf66
2015-11-24 14:29:31,54615-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50aaaf66
2015-11-24 14:29:31,54815-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7daa2420
2015-11-24 14:29:31,55115-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@7dbff9ea
2015-11-24 14:29:31,55115-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7dbff9ea
2015-11-24 14:29:31,55115-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7dbff9ea
2015-11-24 14:29:31,55415-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1154d30d
2015-11-24 14:29:31,55615-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@7a6b653f
2015-11-24 14:29:31,55715-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7a6b653f
2015-11-24 14:29:31,55815-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@67728a26
2015-11-24 14:29:31,55815-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@67728a26
2015-11-24 14:29:31,56015-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@7f4b0ad4
2015-11-24 14:29:31,56015-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7f4b0ad4
2015-11-24 14:29:31,56315-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@5854e99f
2015-11-24 14:29:31,56315-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5854e99f
2015-11-24 14:29:31,56615-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7bd00baf
2015-11-24 14:29:31,56715-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7bd00baf
2015-11-24 14:29:31,56915-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@38430e80
2015-11-24 14:29:31,57115-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6ef15ee1
2015-11-24 14:29:31,57415-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@1c8cb15b
2015-11-24 14:29:31,57515-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@1c8cb15b
2015-11-24 14:29:31,57515-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@1c8cb15b
2015-11-24 14:29:31,61115-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@44a8253a
2015-11-24 14:29:31,61215-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@44a8253a
2015-11-24 14:29:31,61215-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@44a8253a
2015-11-24 14:29:31,61315-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@1410770
2015-11-24 14:29:31,61515-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@5d7106d
2015-11-24 14:29:31,61615-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@5d7106d
2015-11-24 14:29:31,61615-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@5d7106d
2015-11-24 14:29:31,61815-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@15b7025c
2015-11-24 14:29:31,61915-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@15b7025c
2015-11-24 14:29:31,61915-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@15b7025c
2015-11-24 14:29:31,62115-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@3f511d13
2015-11-24 14:29:31,63415-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@12dc0874
2015-11-24 14:29:31,63515-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12dc0874
2015-11-24 14:29:31,63615-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72e0be6
2015-11-24 14:29:31,63815-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@696eeb41
2015-11-24 14:29:31,64915-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@5f9c3821
2015-11-24 14:29:31,64915-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f9c3821
2015-11-24 14:29:31,65115-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6765e467
2015-11-24 14:29:31,65315-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@5c74b704
2015-11-24 14:29:31,65415-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@239494f6
2015-11-24 14:29:31,65715-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@4a02775e
2015-11-24 14:29:31,66415-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@6e256bb1
2015-11-24 14:29:31,66415-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6e256bb1
2015-11-24 14:29:31,66615-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c661664
2015-11-24 14:29:31,66615-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@62481601
2015-11-24 14:29:31,66715-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6a9cce0f
2015-11-24 14:29:31,66715-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c9c7177
2015-11-24 14:29:31,66815-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@22dd6b21
2015-11-24 14:29:31,66815-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76a45568
2015-11-24 14:29:31,66815-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1ee35bb2
2015-11-24 14:29:31,66915-11-24 14:29:31 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@609912f5
2015-11-24 14:29:31,70115-11-24 14:29:31  INFO (Version.java:37 LINE) Version.<clinit> -> Hibernate Commons Annotations 3.2.0.Final
2015-11-24 14:29:31,71815-11-24 14:29:31  INFO (Environment.java:603 LINE) Environment.<clinit> -> Hibernate 3.6.8.Final
2015-11-24 14:29:31,75315-11-24 14:29:31  INFO (Environment.java:636 LINE) Environment.<clinit> -> hibernate.properties not found
2015-11-24 14:29:31,75815-11-24 14:29:31  INFO (Environment.java:814 LINE) Environment.buildBytecodeProvider -> Bytecode provider name : javassist
2015-11-24 14:29:31,76215-11-24 14:29:31  INFO (Environment.java:695 LINE) Environment.<clinit> -> using JDK 1.4 java.sql.Timestamp handling
2015-11-24 14:29:31,82915-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid2] -> [class org.hibernate.id.UUIDGenerator]
2015-11-24 14:29:31,82915-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [guid] -> [class org.hibernate.id.GUIDGenerator]
2015-11-24 14:29:31,83115-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:29:31,83115-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [uuid.hex] -> [class org.hibernate.id.UUIDHexGenerator]
2015-11-24 14:29:31,83315-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [hilo] -> [class org.hibernate.id.TableHiLoGenerator]
2015-11-24 14:29:31,83415-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [assigned] -> [class org.hibernate.id.Assigned]
2015-11-24 14:29:31,83615-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [identity] -> [class org.hibernate.id.IdentityGenerator]
2015-11-24 14:29:31,83615-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [select] -> [class org.hibernate.id.SelectGenerator]
2015-11-24 14:29:31,83715-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence] -> [class org.hibernate.id.SequenceGenerator]
2015-11-24 14:29:31,83815-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [seqhilo] -> [class org.hibernate.id.SequenceHiLoGenerator]
2015-11-24 14:29:31,83915-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [increment] -> [class org.hibernate.id.IncrementGenerator]
2015-11-24 14:29:31,84015-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [foreign] -> [class org.hibernate.id.ForeignGenerator]
2015-11-24 14:29:31,84115-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [sequence-identity] -> [class org.hibernate.id.SequenceIdentityGenerator]
2015-11-24 14:29:31,84215-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-sequence] -> [class org.hibernate.id.enhanced.SequenceStyleGenerator]
2015-11-24 14:29:31,84315-11-24 14:29:31 DEBUG (DefaultIdentifierGeneratorFactory.java:100 LINE) DefaultIdentifierGeneratorFactory.register -> Registering IdentifierGenerator strategy [enhanced-table] -> [class org.hibernate.id.enhanced.TableGenerator]
2015-11-24 14:29:31,93715-11-24 14:29:31 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:29:31,93715-11-24 14:29:31  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:29:31,93815-11-24 14:29:31 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:29:31,93915-11-24 14:29:31 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:29:31,99315-11-24 14:29:31 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:29:31,99415-11-24 14:29:31  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:29:31,99415-11-24 14:29:31 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:29:31,99515-11-24 14:29:31 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:29:32,09315-11-24 14:29:32 DEBUG (DTDEntityResolver.java:67 LINE) DTDEntityResolver.resolveEntity -> trying to resolve system-id [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
2015-11-24 14:29:32,09415-11-24 14:29:32  WARN (DTDEntityResolver.java:73 LINE) DTDEntityResolver.resolveEntity -> recognized obsolete hibernate namespace http://hibernate.sourceforge.net/. Use namespace http://www.hibernate.org/dtd/ instead. Refer to Hibernate 3.6 Migration Guide!
2015-11-24 14:29:32,09415-11-24 14:29:32 DEBUG (DTDEntityResolver.java:77 LINE) DTDEntityResolver.resolveEntity -> attempting to resolve on classpath under org/hibernate/
2015-11-24 14:29:32,09515-11-24 14:29:32 DEBUG (DTDEntityResolver.java:109 LINE) DTDEntityResolver.resolveOnClassPath -> located [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd] in classpath
2015-11-24 14:29:32,17615-11-24 14:29:32 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:29:32,20515-11-24 14:29:32  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.UserOperate -> user_operate
2015-11-24 14:29:32,21515-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:29:32,22615-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userName -> userName
2015-11-24 14:29:32,22615-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPassword -> userPassword
2015-11-24 14:29:32,22715-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: phicommId -> phicomm_id
2015-11-24 14:29:32,22715-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userEmail -> userEmail
2015-11-24 14:29:32,22715-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userPhoneNumb -> user_PhoneNumb
2015-11-24 14:29:32,22815-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userType -> userType
2015-11-24 14:29:32,22815-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: isChecked -> isChecked
2015-11-24 14:29:32,23115-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nickname -> nickname
2015-11-24 14:29:32,23215-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: figureurl -> figureurl
2015-11-24 14:29:32,23215-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: sex -> sex
2015-11-24 14:29:32,23215-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: province -> province
2015-11-24 14:29:32,23315-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: city -> city
2015-11-24 14:29:32,23315-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: birthday -> birthday
2015-11-24 14:29:32,23315-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openId -> open_id
2015-11-24 14:29:32,23415-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openKey -> open_key
2015-11-24 14:29:32,23415-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: accessToken -> access_token
2015-11-24 14:29:32,23415-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: expireseIn -> expirese_in
2015-11-24 14:29:32,23515-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: devinfo -> devinfo
2015-11-24 14:29:32,23515-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: userinfo -> userinfo
2015-11-24 14:29:32,23515-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqq -> openqq
2015-11-24 14:29:32,23615-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: openqqinfo -> openqqinfo
2015-11-24 14:29:32,23615-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensina -> opensina
2015-11-24 14:29:32,23615-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: opensinainfo -> opensinainfo
2015-11-24 14:29:32,23715-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: createTime -> createTime
2015-11-24 14:29:32,23715-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: updateTime -> updateTime
2015-11-24 14:29:32,23715-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: lastLoginTime -> lastLoginTime
2015-11-24 14:29:32,23815-11-24 14:29:32  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.NoteNumbRecord -> note_numb_record
2015-11-24 14:29:32,23815-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:29:32,23815-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: nodeNumb -> node_numb
2015-11-24 14:29:32,23915-11-24 14:29:32  INFO (HbmBinder.java:353 LINE) HbmBinder.bindRootPersistentClassCommonValues -> Mapping class: com.fx.mobile.model.CrashLog -> crash_log
2015-11-24 14:29:32,23915-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: id -> id
2015-11-24 14:29:32,24015-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: url -> url
2015-11-24 14:29:32,24015-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: describes -> describes
2015-11-24 14:29:32,24015-11-24 14:29:32 DEBUG (HbmBinder.java:1354 LINE) HbmBinder.bindProperty -> Mapped property: addDate -> addDate
2015-11-24 14:29:32,24115-11-24 14:29:32 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:29:32,24315-11-24 14:29:32 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:29:32,24915-11-24 14:29:32 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:29:32,24915-11-24 14:29:32 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:29:32,25015-11-24 14:29:32 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:29:32,25015-11-24 14:29:32 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:29:32,25115-11-24 14:29:32 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:29:32,25115-11-24 14:29:32 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:29:32,25815-11-24 14:29:32  INFO (Configuration.java:1676 LINE) Configuration.applyHibernateValidatorLegacyConstraintsOnDDL -> Hibernate Validator not found: ignoring
2015-11-24 14:29:32,30315-11-24 14:29:32 DEBUG (LoggerFactory.java:29 LINE) LoggerFactory.make -> Logging Provider: org.jboss.logging.Log4jLoggerProvider
2015-11-24 14:29:32,30315-11-24 14:29:32  INFO (Version.java:27 LINE) Version.<clinit> -> HV000001: Hibernate Validator 5.0.0.Final
2015-11-24 14:29:32,32715-11-24 14:29:32 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:29:32,33415-11-24 14:29:32 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:29:32,34315-11-24 14:29:32 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:29:32,58415-11-24 14:29:32  INFO (LocalSessionFactoryBean.java:780 LINE) LocalSessionFactoryBean.buildSessionFactory -> Building new Hibernate SessionFactory
2015-11-24 14:29:32,58515-11-24 14:29:32 DEBUG (Configuration.java:1854 LINE) Configuration.buildSessionFactory -> Preparing to build session factory with filters : {}
2015-11-24 14:29:32,58515-11-24 14:29:32 DEBUG (Configuration.java:3995 LINE) Configuration$MetadataSourceQueue.processHbmXmlQueue -> Processing hbm.xml files
2015-11-24 14:29:32,58515-11-24 14:29:32 DEBUG (Configuration.java:4025 LINE) Configuration$MetadataSourceQueue.processAnnotatedClassesQueue -> Process annotated classes
2015-11-24 14:29:32,58515-11-24 14:29:32 DEBUG (Configuration.java:1466 LINE) Configuration.processFkSecondPassInOrder -> processing fk mappings (*ToOne and JoinedSubclass)
2015-11-24 14:29:32,58615-11-24 14:29:32 DEBUG (Configuration.java:1708 LINE) Configuration.originalSecondPassCompile -> processing extends queue
2015-11-24 14:29:32,58615-11-24 14:29:32 DEBUG (Configuration.java:1762 LINE) Configuration.processExtendsQueue -> processing extends queue
2015-11-24 14:29:32,58615-11-24 14:29:32 DEBUG (Configuration.java:1711 LINE) Configuration.originalSecondPassCompile -> processing collection mappings
2015-11-24 14:29:32,58615-11-24 14:29:32 DEBUG (Configuration.java:1721 LINE) Configuration.originalSecondPassCompile -> processing native query and ResultSetMapping mappings
2015-11-24 14:29:32,58615-11-24 14:29:32 DEBUG (Configuration.java:1729 LINE) Configuration.originalSecondPassCompile -> processing association property references
2015-11-24 14:29:32,58715-11-24 14:29:32 DEBUG (Configuration.java:1751 LINE) Configuration.originalSecondPassCompile -> processing foreign key constraints
2015-11-24 14:29:32,58815-11-24 14:29:32 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:29:32,58815-11-24 14:29:32 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:29:32,60115-11-24 14:29:32 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:29:32,62315-11-24 14:29:32 DEBUG (Configuration.java:1896 LINE) Configuration.enableLegacyHibernateValidator -> Legacy Validator not present in classpath, ignoring event listener registration
2015-11-24 14:29:32,62315-11-24 14:29:32 DEBUG (DefaultTraversableResolver.java:84 LINE) DefaultTraversableResolver.detectJPA -> Found javax.persistence.Persistence on classpath, but no method 'getPersistenceUtil'. Assuming JPA 1 environment. All properties will per default be traversable.
2015-11-24 14:29:32,62415-11-24 14:29:32 DEBUG (ValidationXmlParser.java:88 LINE) ValidationXmlParser.getInputStream -> Trying to load META-INF/validation.xml for XML based Validator configuration.
2015-11-24 14:29:32,62515-11-24 14:29:32 DEBUG (ValidationXmlParser.java:95 LINE) ValidationXmlParser.getInputStream -> No META-INF/validation.xml found. Using annotation based configuration only.
2015-11-24 14:29:32,63115-11-24 14:29:32 DEBUG (HibernateSearchEventListenerRegister.java:231 LINE) HibernateSearchEventListenerRegister.attemptToLoadSearchEventListener -> Search not present in classpath, ignoring event listener registration.
2015-11-24 14:29:32,63115-11-24 14:29:32  INFO (HibernateSearchEventListenerRegister.java:75 LINE) HibernateSearchEventListenerRegister.enableHibernateSearch -> Unable to find org.hibernate.search.event.FullTextIndexEventListener on the classpath. Hibernate Search is not enabled.
2015-11-24 14:29:32,63615-11-24 14:29:32  INFO (ConnectionProviderFactory.java:173 LINE) ConnectionProviderFactory.initializeConnectionProviderFromConfig -> Initializing connection provider: org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider
2015-11-24 14:29:33,11315-11-24 14:29:33  INFO (Dialect.java:135 LINE) Dialect.<init> -> Using dialect: org.hibernate.dialect.MySQLDialect
2015-11-24 14:29:33,12915-11-24 14:29:33  INFO (SettingsFactory.java:126 LINE) SettingsFactory.buildSettings -> Database ->
       name : MySQL
    version : 5.6.21-log
      major : 5
      minor : 6
2015-11-24 14:29:33,12915-11-24 14:29:33  INFO (SettingsFactory.java:132 LINE) SettingsFactory.buildSettings -> Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.25 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2015-11-24 14:29:33,13215-11-24 14:29:33  INFO (TransactionFactoryFactory.java:65 LINE) TransactionFactoryFactory.buildTransactionFactory -> Transaction strategy: org.springframework.orm.hibernate3.SpringTransactionFactory
2015-11-24 14:29:33,13415-11-24 14:29:33  INFO (TransactionManagerLookupFactory.java:83 LINE) TransactionManagerLookupFactory.getTransactionManagerLookup -> No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)
2015-11-24 14:29:33,13415-11-24 14:29:33  INFO (SettingsFactory.java:179 LINE) SettingsFactory.buildSettings -> Automatic flush during beforeCompletion(): disabled
2015-11-24 14:29:33,13515-11-24 14:29:33  INFO (SettingsFactory.java:183 LINE) SettingsFactory.buildSettings -> Automatic session close at end of transaction: disabled
2015-11-24 14:29:33,13515-11-24 14:29:33  INFO (SettingsFactory.java:190 LINE) SettingsFactory.buildSettings -> JDBC batch size: 25
2015-11-24 14:29:33,13515-11-24 14:29:33  INFO (SettingsFactory.java:193 LINE) SettingsFactory.buildSettings -> JDBC batch updates for versioned data: disabled
2015-11-24 14:29:33,13615-11-24 14:29:33  INFO (SettingsFactory.java:198 LINE) SettingsFactory.buildSettings -> Scrollable result sets: enabled
2015-11-24 14:29:33,13615-11-24 14:29:33 DEBUG (SettingsFactory.java:202 LINE) SettingsFactory.buildSettings -> Wrap result sets: disabled
2015-11-24 14:29:33,13615-11-24 14:29:33  INFO (SettingsFactory.java:206 LINE) SettingsFactory.buildSettings -> JDBC3 getGeneratedKeys(): enabled
2015-11-24 14:29:33,13715-11-24 14:29:33  INFO (SettingsFactory.java:210 LINE) SettingsFactory.buildSettings -> JDBC result set fetch size: 50
2015-11-24 14:29:33,13715-11-24 14:29:33  INFO (SettingsFactory.java:214 LINE) SettingsFactory.buildSettings -> Connection release mode: after_transaction
2015-11-24 14:29:33,13815-11-24 14:29:33  INFO (SettingsFactory.java:238 LINE) SettingsFactory.buildSettings -> Maximum outer join fetch depth: 2
2015-11-24 14:29:33,13815-11-24 14:29:33  INFO (SettingsFactory.java:241 LINE) SettingsFactory.buildSettings -> Default batch fetch size: 1
2015-11-24 14:29:33,13915-11-24 14:29:33  INFO (SettingsFactory.java:245 LINE) SettingsFactory.buildSettings -> Generate SQL with comments: disabled
2015-11-24 14:29:33,13915-11-24 14:29:33  INFO (SettingsFactory.java:249 LINE) SettingsFactory.buildSettings -> Order SQL updates by primary key: disabled
2015-11-24 14:29:33,13915-11-24 14:29:33  INFO (SettingsFactory.java:253 LINE) SettingsFactory.buildSettings -> Order SQL inserts for batching: disabled
2015-11-24 14:29:33,13915-11-24 14:29:33  INFO (SettingsFactory.java:431 LINE) SettingsFactory.createQueryTranslatorFactory -> Query translator: org.hibernate.hql.ast.ASTQueryTranslatorFactory
2015-11-24 14:29:33,14215-11-24 14:29:33  INFO (ASTQueryTranslatorFactory.java:47 LINE) ASTQueryTranslatorFactory.<init> -> Using ASTQueryTranslatorFactory
2015-11-24 14:29:33,14215-11-24 14:29:33  INFO (SettingsFactory.java:261 LINE) SettingsFactory.buildSettings -> Query language substitutions: {false='N', true='Y'}
2015-11-24 14:29:33,14215-11-24 14:29:33  INFO (SettingsFactory.java:266 LINE) SettingsFactory.buildSettings -> JPA-QL strict compliance: disabled
2015-11-24 14:29:33,14215-11-24 14:29:33  INFO (SettingsFactory.java:271 LINE) SettingsFactory.buildSettings -> Second-level cache: enabled
2015-11-24 14:29:33,14315-11-24 14:29:33  INFO (SettingsFactory.java:275 LINE) SettingsFactory.buildSettings -> Query cache: enabled
2015-11-24 14:29:33,14315-11-24 14:29:33  INFO (SettingsFactory.java:406 LINE) SettingsFactory.createRegionFactory -> Cache region factory : org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge
2015-11-24 14:29:33,14715-11-24 14:29:33  INFO (RegionFactoryCacheProviderBridge.java:61 LINE) RegionFactoryCacheProviderBridge.<init> -> Cache provider: org.hibernate.cache.EhCacheProvider
2015-11-24 14:29:33,15115-11-24 14:29:33  INFO (SettingsFactory.java:285 LINE) SettingsFactory.buildSettings -> Optimize cache for minimal puts: disabled
2015-11-24 14:29:33,15115-11-24 14:29:33  INFO (SettingsFactory.java:294 LINE) SettingsFactory.buildSettings -> Structured second-level cache entries: disabled
2015-11-24 14:29:33,15115-11-24 14:29:33  INFO (SettingsFactory.java:385 LINE) SettingsFactory.createQueryCacheFactory -> Query cache factory: org.hibernate.cache.StandardQueryCacheFactory
2015-11-24 14:29:33,15615-11-24 14:29:33  INFO (SettingsFactory.java:314 LINE) SettingsFactory.buildSettings -> Echoing all SQL to stdout
2015-11-24 14:29:33,15815-11-24 14:29:33  INFO (SettingsFactory.java:323 LINE) SettingsFactory.buildSettings -> Statistics: disabled
2015-11-24 14:29:33,15815-11-24 14:29:33  INFO (SettingsFactory.java:327 LINE) SettingsFactory.buildSettings -> Deleted entity synthetic identifier rollback: disabled
2015-11-24 14:29:33,15915-11-24 14:29:33  INFO (SettingsFactory.java:343 LINE) SettingsFactory.buildSettings -> Default entity-mode: pojo
2015-11-24 14:29:33,15915-11-24 14:29:33  INFO (SettingsFactory.java:347 LINE) SettingsFactory.buildSettings -> Named query checking : enabled
2015-11-24 14:29:33,16015-11-24 14:29:33  INFO (SettingsFactory.java:351 LINE) SettingsFactory.buildSettings -> Check Nullability in Core (should be disabled when Bean Validation is on): disabled
2015-11-24 14:29:33,21015-11-24 14:29:33  INFO (SessionFactoryImpl.java:202 LINE) SessionFactoryImpl.<init> -> building session factory
2015-11-24 14:29:33,22115-11-24 14:29:33 DEBUG (SessionFactoryImpl.java:206 LINE) SessionFactoryImpl.<init> -> Statistics initialized [enabled=false]}
2015-11-24 14:29:33,22315-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@394943b2
2015-11-24 14:29:33,22415-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration boolean -> org.hibernate.type.BooleanType@394943b2
2015-11-24 14:29:33,22415-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@394943b2
2015-11-24 14:29:33,22515-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@50e83abb
2015-11-24 14:29:33,22515-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration true_false -> org.hibernate.type.TrueFalseType@2708d3bf
2015-11-24 14:29:33,22615-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration yes_no -> org.hibernate.type.YesNoType@663c18ab
2015-11-24 14:29:33,22615-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@63012b1b
2015-11-24 14:29:33,22815-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte -> org.hibernate.type.ByteType@63012b1b
2015-11-24 14:29:33,22815-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@63012b1b
2015-11-24 14:29:33,22915-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration character -> org.hibernate.type.CharacterType@7f1b048c
2015-11-24 14:29:33,22915-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char -> org.hibernate.type.CharacterType@7f1b048c
2015-11-24 14:29:33,23015-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7f1b048c
2015-11-24 14:29:33,23015-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@64cbb440
2015-11-24 14:29:33,23015-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration short -> org.hibernate.type.ShortType@64cbb440
2015-11-24 14:29:33,23615-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64cbb440
2015-11-24 14:29:33,23815-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration integer -> org.hibernate.type.IntegerType@4aa55143
2015-11-24 14:29:33,23815-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration int -> org.hibernate.type.IntegerType@4aa55143
2015-11-24 14:29:33,23915-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4aa55143
2015-11-24 14:29:33,23915-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4b0f6ef
2015-11-24 14:29:33,23915-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration long -> org.hibernate.type.LongType@4b0f6ef
2015-11-24 14:29:33,23915-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Long -> org.hibernate.type.LongType@4b0f6ef
2015-11-24 14:29:33,24015-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@290e1b2
2015-11-24 14:29:33,24015-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration float -> org.hibernate.type.FloatType@290e1b2
2015-11-24 14:29:33,24115-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Float -> org.hibernate.type.FloatType@290e1b2
2015-11-24 14:29:33,24115-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@6dfc2e0b
2015-11-24 14:29:33,24115-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration double -> org.hibernate.type.DoubleType@6dfc2e0b
2015-11-24 14:29:33,24115-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6dfc2e0b
2015-11-24 14:29:33,24115-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@989f8c6
2015-11-24 14:29:33,24115-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@989f8c6
2015-11-24 14:29:33,24215-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration big_integer -> org.hibernate.type.BigIntegerType@d4e97a1
2015-11-24 14:29:33,24215-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@d4e97a1
2015-11-24 14:29:33,24215-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration string -> org.hibernate.type.StringType@3fbbaaad
2015-11-24 14:29:33,24215-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.String -> org.hibernate.type.StringType@3fbbaaad
2015-11-24 14:29:33,24315-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration url -> org.hibernate.type.UrlType@6495dc5a
2015-11-24 14:29:33,24315-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.net.URL -> org.hibernate.type.UrlType@6495dc5a
2015-11-24 14:29:33,24315-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration date -> org.hibernate.type.DateType@3098cc00
2015-11-24 14:29:33,24315-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Date -> org.hibernate.type.DateType@3098cc00
2015-11-24 14:29:33,24315-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration time -> org.hibernate.type.TimeType@56515185
2015-11-24 14:29:33,24315-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Time -> org.hibernate.type.TimeType@56515185
2015-11-24 14:29:33,24415-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timestamp -> org.hibernate.type.TimestampType@50aaaf66
2015-11-24 14:29:33,24415-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@50aaaf66
2015-11-24 14:29:33,24415-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Date -> org.hibernate.type.TimestampType@50aaaf66
2015-11-24 14:29:33,24415-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7daa2420
2015-11-24 14:29:33,24415-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar -> org.hibernate.type.CalendarType@7dbff9ea
2015-11-24 14:29:33,24415-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7dbff9ea
2015-11-24 14:29:33,24515-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7dbff9ea
2015-11-24 14:29:33,24515-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1154d30d
2015-11-24 14:29:33,24515-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration locale -> org.hibernate.type.LocaleType@7a6b653f
2015-11-24 14:29:33,24515-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7a6b653f
2015-11-24 14:29:33,24515-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration currency -> org.hibernate.type.CurrencyType@67728a26
2015-11-24 14:29:33,24615-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@67728a26
2015-11-24 14:29:33,24615-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration timezone -> org.hibernate.type.TimeZoneType@7f4b0ad4
2015-11-24 14:29:33,24615-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7f4b0ad4
2015-11-24 14:29:33,24615-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration class -> org.hibernate.type.ClassType@5854e99f
2015-11-24 14:29:33,24615-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5854e99f
2015-11-24 14:29:33,24615-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7bd00baf
2015-11-24 14:29:33,24715-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7bd00baf
2015-11-24 14:29:33,24715-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@38430e80
2015-11-24 14:29:33,24715-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6ef15ee1
2015-11-24 14:29:33,24715-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration binary -> org.hibernate.type.BinaryType@1c8cb15b
2015-11-24 14:29:33,24715-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration byte[] -> org.hibernate.type.BinaryType@1c8cb15b
2015-11-24 14:29:33,24815-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [B -> org.hibernate.type.BinaryType@1c8cb15b
2015-11-24 14:29:33,24815-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@44a8253a
2015-11-24 14:29:33,24815-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@44a8253a
2015-11-24 14:29:33,24815-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@44a8253a
2015-11-24 14:29:33,24815-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration image -> org.hibernate.type.ImageType@1410770
2015-11-24 14:29:33,24915-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters -> org.hibernate.type.CharArrayType@5d7106d
2015-11-24 14:29:33,24915-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration char[] -> org.hibernate.type.CharArrayType@5d7106d
2015-11-24 14:29:33,24915-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [C -> org.hibernate.type.CharArrayType@5d7106d
2015-11-24 14:29:33,24915-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@15b7025c
2015-11-24 14:29:33,24915-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@15b7025c
2015-11-24 14:29:33,24915-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@15b7025c
2015-11-24 14:29:33,25015-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration text -> org.hibernate.type.TextType@3f511d13
2015-11-24 14:29:33,25015-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@12dc0874
2015-11-24 14:29:33,25015-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@12dc0874
2015-11-24 14:29:33,25015-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72e0be6
2015-11-24 14:29:33,25015-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@696eeb41
2015-11-24 14:29:33,25015-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@5f9c3821
2015-11-24 14:29:33,25115-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5f9c3821
2015-11-24 14:29:33,25115-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6765e467
2015-11-24 14:29:33,25115-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@5c74b704
2015-11-24 14:29:33,25115-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@239494f6
2015-11-24 14:29:33,25115-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration serializable -> org.hibernate.type.SerializableType@4a02775e
2015-11-24 14:29:33,25215-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration object -> org.hibernate.type.ObjectType@6e256bb1
2015-11-24 14:29:33,25215-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6e256bb1
2015-11-24 14:29:33,25215-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3dbb01dd
2015-11-24 14:29:33,25215-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@407773d4
2015-11-24 14:29:33,25215-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6255845c
2015-11-24 14:29:33,25215-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c64e673
2015-11-24 14:29:33,25315-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6455b768
2015-11-24 14:29:33,25315-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@377c404e
2015-11-24 14:29:33,25315-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3e61dd57
2015-11-24 14:29:33,25315-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b0a9ac0
2015-11-24 14:29:33,25315-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration characters_clob -> org.hibernate.type.PrimitiveCharacterArrayClobType@78214ca6
2015-11-24 14:29:33,25415-11-24 14:29:33  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [characters_clob] overrides previous : org.hibernate.type.PrimitiveCharacterArrayClobType@239494f6
2015-11-24 14:29:33,25415-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration blob -> org.hibernate.type.BlobType@2d917ec
2015-11-24 14:29:33,25415-11-24 14:29:33  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [blob] overrides previous : org.hibernate.type.BlobType@12dc0874
2015-11-24 14:29:33,25415-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2d917ec
2015-11-24 14:29:33,25415-11-24 14:29:33  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Blob] overrides previous : org.hibernate.type.BlobType@12dc0874
2015-11-24 14:29:33,25415-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_materialized_blob -> org.hibernate.type.WrappedMaterializedBlobType@1d72e46d
2015-11-24 14:29:33,25515-11-24 14:29:33  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_materialized_blob] overrides previous : org.hibernate.type.WrappedMaterializedBlobType@696eeb41
2015-11-24 14:29:33,25515-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7e762d0
2015-11-24 14:29:33,25515-11-24 14:29:33  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_clob] overrides previous : org.hibernate.type.MaterializedClobType@6765e467
2015-11-24 14:29:33,25515-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration wrapper_characters_clob -> org.hibernate.type.CharacterArrayClobType@680849bd
2015-11-24 14:29:33,25615-11-24 14:29:33  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [wrapper_characters_clob] overrides previous : org.hibernate.type.CharacterArrayClobType@5c74b704
2015-11-24 14:29:33,25615-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration clob -> org.hibernate.type.ClobType@61f2bf35
2015-11-24 14:29:33,25615-11-24 14:29:33  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [clob] overrides previous : org.hibernate.type.ClobType@5f9c3821
2015-11-24 14:29:33,25615-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@61f2bf35
2015-11-24 14:29:33,25615-11-24 14:29:33  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [java.sql.Clob] overrides previous : org.hibernate.type.ClobType@5f9c3821
2015-11-24 14:29:33,25715-11-24 14:29:33 DEBUG (BasicTypeRegistry.java:147 LINE) BasicTypeRegistry.register -> Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7ab18869
2015-11-24 14:29:33,25715-11-24 14:29:33  INFO (BasicTypeRegistry.java:150 LINE) BasicTypeRegistry.register -> Type registration [materialized_blob] overrides previous : org.hibernate.type.MaterializedBlobType@72e0be6
2015-11-24 14:29:33,25815-11-24 14:29:33 DEBUG (SessionFactoryImpl.java:228 LINE) SessionFactoryImpl.<init> -> Session factory constructed with filter configurations : {}
2015-11-24 14:29:33,25915-11-24 14:29:33 DEBUG (SessionFactoryImpl.java:232 LINE) SessionFactoryImpl.<init> -> instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider, sun.boot.library.path=E:\JDK1.7\bin, java.vm.version=23.7-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, hibernate.cache.use_query_cache=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=G:\workspace\mobile-user, java.runtime.version=1.7.0_17-b02, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate3.SpringSessionContext, java.endorsed.dirs=E:\JDK1.7\lib\endorsed, os.arch=amd64, hibernate.check_nullability=false, java.io.tmpdir=C:\Users\gqy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 8, hibernate.cache.use_second_level_cache=true, sun.jnu.encoding=GBK, hibernate.jdbc.fetch_size=50, java.library.path=E:\JDK1.7\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x86;C:\Program Files (x86)\Intel\OpenCL SDK\3.0\bin\x64;C:\ProgramData\Lenovo\ReadyApps;E:\JDK\bin;E:\JDK\jre\bin;E:\Go\bin;E:\winscp\WinSCP\;E:\maven\apache-maven-3.2.3\bin;C:\Program Files (x86)\DBank\ClickUp;C:\Program Files (x86)\DBank\ClickUp;., java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.transaction.factory_class=org.springframework.orm.hibernate3.SpringTransactionFactory, os.version=6.2, user.home=C:\Users\gqy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, hibernate.connection.release_mode=after_transaction, java.specification.version=1.7, file.encoding=UTF-8, hibernate.format_sql=true, user.name=gqy, java.class.path=G:\workspace\mobile-user\target\test-classes;G:\workspace\mobile-user\target\classes;H:\Respositories2\repository\com\alibaba\fastjson\1.2.4\fastjson-1.2.4.jar;H:\Respositories2\repository\com\google\zxing\core\3.0.0\core-3.0.0.jar;H:\Respositories2\repository\com\google\zxing\javase\3.0.0\javase-3.0.0.jar;H:\Respositories2\repository\io\netty\netty\4.0.0.Alpha8\netty-4.0.0.Alpha8.jar;H:\Respositories2\repository\jstl\jstl\1.2\jstl-1.2.jar;H:\Respositories2\repository\org\springframework\spring-aop\3.2.0.RELEASE\spring-aop-3.2.0.RELEASE.jar;H:\Respositories2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;H:\Respositories2\repository\org\springframework\spring-beans\3.2.0.RELEASE\spring-beans-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context\3.2.0.RELEASE\spring-context-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-expression\3.2.0.RELEASE\spring-expression-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-context-support\3.2.0.RELEASE\spring-context-support-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-core\3.2.0.RELEASE\spring-core-3.2.0.RELEASE.jar;H:\Respositories2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;H:\Respositories2\repository\org\springframework\spring-jdbc\3.2.0.RELEASE\spring-jdbc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-orm\3.2.0.RELEASE\spring-orm-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-tx\3.2.0.RELEASE\spring-tx-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-web\3.2.0.RELEASE\spring-web-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\spring-webmvc\3.2.0.RELEASE\spring-webmvc-3.2.0.RELEASE.jar;H:\Respositories2\repository\org\springframework\amqp\spring-amqp\1.2.0.RELEASE\spring-amqp-1.2.0.RELEASE.jar;H:\Respositories2\repository\org\aspectj\aspectjrt\1.7.0\aspectjrt-1.7.0.jar;H:\Respositories2\repository\com\fasterxml\jackson\core\jackson-core\2.1.0\jackson-core-2.1.0.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.13\jackson-jaxrs-1.9.13.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-xc\1.9.13\jackson-xc-1.9.13.jar;H:\Respositories2\repository\commons-fileupload\commons-fileupload\1.3\commons-fileupload-1.3.jar;H:\Respositories2\repository\commons-io\commons-io\2.2\commons-io-2.2.jar;H:\Respositories2\repository\mysql\mysql-connector-java\5.1.25\mysql-connector-java-5.1.25.jar;H:\Respositories2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;H:\Respositories2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;H:\Respositories2\repository\org\aspectj\aspectjweaver\1.6.4\aspectjweaver-1.6.4.jar;H:\Respositories2\repository\net\sf\json-lib\json-lib\2.4\json-lib-2.4-jdk15.jar;H:\Respositories2\repository\commons-collections\commons-collections\3.2.1\commons-collections-3.2.1.jar;H:\Respositories2\repository\commons-beanutils\commons-beanutils\1.9.0\commons-beanutils-1.9.0.jar;H:\Respositories2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;H:\Respositories2\repository\net\sf\ezmorph\ezmorph\1.0.6\ezmorph-1.0.6.jar;H:\Respositories2\repository\org\jsoup\jsoup\1.7.3\jsoup-1.7.3.jar;H:\Respositories2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;H:\Respositories2\repository\org\mybatis\mybatis-spring\1.2.0\mybatis-spring-1.2.0.jar;H:\Respositories2\repository\org\mybatis\mybatis\3.2.7\mybatis-3.2.7.jar;H:\Respositories2\repository\c3p0\c3p0\0.9.1.2\c3p0-0.9.1.2.jar;H:\Respositories2\repository\org\json\json\20090211\json-20090211.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-core-lgpl\1.8.1\jackson-core-lgpl-1.8.1.jar;H:\Respositories2\repository\org\codehaus\jackson\jackson-mapper-lgpl\1.8.1\jackson-mapper-lgpl-1.8.1.jar;H:\Respositories2\repository\org\freemarker\freemarker\2.3.16\freemarker-2.3.16.jar;H:\Respositories2\repository\opensymphony\sitemesh\2.4.2\sitemesh-2.4.2.jar;H:\Respositories2\repository\org\testng\testng\5.9\testng-5.9-jdk15.jar;H:\Respositories2\repository\junit\junit\4.7\junit-4.7.jar;H:\Respositories2\repository\cglib\cglib-asm\1.0\cglib-asm-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-core\1.0\jxls-core-1.0.jar;H:\Respositories2\repository\commons-digester\commons-digester\2.0\commons-digester-2.0.jar;H:\Respositories2\repository\org\apache\commons\commons-jexl\2.0.1\commons-jexl-2.0.1.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml\3.7\poi-ooxml-3.7.jar;H:\Respositories2\repository\org\apache\poi\poi-ooxml-schemas\3.7\poi-ooxml-schemas-3.7.jar;H:\Respositories2\repository\org\apache\xmlbeans\xmlbeans\2.3.0\xmlbeans-2.3.0.jar;H:\Respositories2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;H:\Respositories2\repository\org\apache\geronimo\specs\geronimo-stax-api_1.0_spec\1.0\geronimo-stax-api_1.0_spec-1.0.jar;H:\Respositories2\repository\net\sf\jxls\jxls-reader\1.0\jxls-reader-1.0.jar;H:\Respositories2\repository\com\caucho\hessian\4.0.38\hessian-4.0.38.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpcore\4.3.2\httpcore-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient\4.3.2\httpclient-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpclient-cache\4.3.2\httpclient-cache-4.3.2.jar;H:\Respositories2\repository\org\apache\httpcomponents\httpmime\4.3.2\httpmime-4.3.2.jar;H:\Respositories2\repository\org\quartz-scheduler\quartz\1.8.6\quartz-1.8.6.jar;H:\Respositories2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;H:\Respositories2\repository\org\slf4j\slf4j-api\1.6.1\slf4j-api-1.6.1.jar;H:\Respositories2\repository\log4j\log4j\1.2.16\log4j-1.2.16.jar;H:\Respositories2\repository\net\coobird\thumbnailator\0.4.7\thumbnailator-0.4.7.jar;H:\Respositories2\repository\jcifs\jcifs\1.3.17\jcifs-1.3.17.jar;H:\Respositories2\repository\org\apache\poi\poi\3.10.1\poi-3.10.1.jar;H:\Respositories2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;H:\Respositories2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;H:\Respositories2\repository\javax\servlet\jsp\jsp-api\2.2\jsp-api-2.2.jar;H:\Respositories2\repository\jaxen\jaxen\1.1.6\jaxen-1.1.6.jar;H:\Respositories2\repository\commons-httpclient\commons-httpclient\3.0.1\commons-httpclient-3.0.1.jar;H:\Respositories2\repository\commons-codec\commons-codec\1.9\commons-codec-1.9.jar;H:\Respositories2\repository\net\sf\supercsv\super-csv\2.2.0\super-csv-2.2.0.jar;H:\Respositories2\repository\org\bouncycastle\bcprov-jdk16\1.45\bcprov-jdk16-1.45.jar;H:\Respositories2\repository\jdom\jdom\1.0\jdom-1.0.jar;H:\Respositories2\repository\com\belerweb\pinyin4j\2.5.0\pinyin4j-2.5.0.jar;H:\Respositories2\repository\org\glassfish\jersey\ext\jersey-spring3\2.4.1\jersey-spring3-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-server\2.4.1\jersey-server-2.4.1.jar;H:\Respositories2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-api\2.2.0-b21\hk2-api-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\javax.inject\2.2.0-b21\javax.inject-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-locator\2.2.0-b21\hk2-locator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\asm-all-repackaged\2.2.0-b21\asm-all-repackaged-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\external\cglib\2.2.0-b21\cglib-2.2.0-b21.jar;H:\Respositories2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;H:\Respositories2\repository\org\glassfish\jersey\containers\jersey-container-servlet-core\2.4.1\jersey-container-servlet-core-2.4.1.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2\2.2.0-b21\hk2-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-utils\2.2.0-b21\hk2-utils-2.2.0-b21.jar;H:\Respositories2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;H:\Respositories2\repository\org\glassfish\hk2\config-types\2.2.0-b21\config-types-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\core\2.2.0-b21\core-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-config\2.2.0-b21\hk2-config-2.2.0-b21.jar;H:\Respositories2\repository\org\jvnet\tiger-types\1.4\tiger-types-1.4.jar;H:\Respositories2\repository\org\glassfish\hk2\external\bean-validator\2.2.0-b21\bean-validator-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\hk2-runlevel\2.2.0-b21\hk2-runlevel-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\class-model\2.2.0-b21\class-model-2.2.0-b21.jar;H:\Respositories2\repository\org\glassfish\hk2\spring-bridge\2.2.0-b21\spring-bridge-2.2.0-b21.jar;H:\Respositories2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\media\jersey-media-json-jackson\2.4.1\jersey-media-json-jackson-2.4.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-common\2.4.1\jersey-common-2.4.1.jar;H:\Respositories2\repository\javax\annotation\javax.annotation-api\1.2\javax.annotation-api-1.2.jar;H:\Respositories2\repository\org\glassfish\hk2\osgi-resource-locator\1.0.1\osgi-resource-locator-1.0.1.jar;H:\Respositories2\repository\org\codehaus\groovy\groovy-all\2.2.0\groovy-all-2.2.0.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\providers\jersey-test-framework-provider-external\2.5.1\jersey-test-framework-provider-external-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\test-framework\jersey-test-framework-core\2.5.1\jersey-test-framework-core-2.5.1.jar;H:\Respositories2\repository\org\glassfish\jersey\core\jersey-client\2.5.1\jersey-client-2.5.1.jar;H:\Respositories2\repository\org\springframework\spring-test\3.2.6.RELEASE\spring-test-3.2.6.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session\1.0.1.RELEASE\spring-session-1.0.1.RELEASE.jar;H:\Respositories2\repository\org\springframework\session\spring-session-data-redis\1.0.0.RELEASE\spring-session-data-redis-1.0.0.RELEASE.jar;H:\Respositories2\repository\org\apache\commons\commons-pool2\2.2\commons-pool2-2.2.jar;H:\Respositories2\repository\redis\clients\jedis\2.6.0\jedis-2.6.0.jar;H:\Respositories2\repository\org\springframework\data\spring-data-redis\1.4.1.RELEASE\spring-data-redis-1.4.1.RELEASE.jar;H:\Respositories2\repository\net\sf\ehcache\ehcache-core\2.6.11\ehcache-core-2.6.11.jar;H:\Respositories2\repository\org\hibernate3\hibernate3\3.0.0\hibernate3-3.0.0.jar;H:\Respositories2\repository\com\google\code\gson\gson\2.1\gson-2.1.jar;H:\Respositories2\repository\org\apache\openejb\javaee-api\5.0-1\javaee-api-5.0-1.jar;H:\Respositories2\repository\com\alibaba\druid\1.0.2\druid-1.0.2.jar;H:\Respositories2\repository\javax\faces\jsf-impl\1.2_04\jsf-impl-1.2_04.jar;H:\Respositories2\repository\javax\faces\jsf-api\1.2_04\jsf-api-1.2_04.jar;H:\Respositories2\repository\javax\transaction\jta\1.1\jta-1.1.jar;H:\Respositories2\repository\org\apache\ws\wss4j\1.5.1\wss4j-1.5.1.jar;H:\Respositories2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.0-api\1.0.1.Final\hibernate-jpa-2.0-api-1.0.1.Final.jar;H:\Respositories2\repository\hibernate\antlr\2.7.5H3\antlr-2.7.5H3.jar;H:\Respositories2\repository\javassist\javassist\3.9.0.GA\javassist-3.9.0.GA.jar;H:\Respositories2\repository\com\fx\mobile\mobile-model\0.0.1-SNAPSHOT\mobile-model-0.0.1-SNAPSHOT.jar;H:\Respositories2\repository\com\fx\mobile\mobile-core\0.0.1\mobile-core-0.0.1.jar;H:\Respositories2\repository\Decoder\sun.misc.BASE64Decoder\1.0.0\sun.misc.BASE64Decoder-1.0.0.jar;H:\Respositories2\repository\marketingFile\marketingFile\0.0.1\marketingFile-0.0.1.jar;H:\Respositories2\repository\com\qq\connect\Sdk4J\1.0\Sdk4J-1.0.jar;H:\Respositories2\repository\org\apache\commons\commons-io\1.3.2\commons-io-1.3.2.jar;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/362/0/.cp/;/E:/新建文件夹/eclipse/configuration/org.eclipse.osgi/361/0/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.query.substitutions=true 'Y', false 'N', hibernate.show_sql=true, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=E:\JDK1.7, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 59924 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.fx.mobile.junit.UserOperateDaoImplTest, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_17, java.ext.dirs=E:\JDK1.7\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=E:\JDK1.7\lib\resources.jar;E:\JDK1.7\lib\rt.jar;E:\JDK1.7\lib\sunrsasign.jar;E:\JDK1.7\lib\jsse.jar;E:\JDK1.7\lib\jce.jar;E:\JDK1.7\lib\charsets.jar;E:\JDK1.7\lib\jfr.jar;E:\JDK1.7\classes, java.vendor=Oracle Corporation, hibernate.jdbc.batch_size=25, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, hibernate.connection.provider_class=org.springframework.orm.hibernate3.LocalDataSourceConnectionProvider, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
2015-11-24 14:29:33,27615-11-24 14:29:33 DEBUG (CacheManager.java:684 LINE) CacheManager.parseConfiguration -> Configuring ehcache from classpath.
2015-11-24 14:29:33,28115-11-24 14:29:33 DEBUG (ConfigurationFactory.java:132 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from ehcache.xml found in the classpath: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:29:33,28115-11-24 14:29:33 DEBUG (ConfigurationFactory.java:98 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from URL: file:/G:/workspace/mobile-user/target/classes/ehcache.xml
2015-11-24 14:29:33,28215-11-24 14:29:33 DEBUG (ConfigurationFactory.java:150 LINE) ConfigurationFactory.parseConfiguration -> Configuring ehcache from InputStream
2015-11-24 14:29:33,35915-11-24 14:29:33 DEBUG (DiskStoreConfiguration.java:141 LINE) DiskStoreConfiguration.translatePath -> Disk Store Path: C:\Users\gqy\AppData\Local\Temp\
2015-11-24 14:29:33,38215-11-24 14:29:33 DEBUG (PropertyUtil.java:88 LINE) PropertyUtil.parseProperties -> propertiesString is null.
2015-11-24 14:29:33,39615-11-24 14:29:33 DEBUG (ConfigurationHelper.java:185 LINE) ConfigurationHelper.createCacheManagerEventListener -> No CacheManagerEventListenerFactory class specified. Skipping...
2015-11-24 14:29:33,43915-11-24 14:29:33 DEBUG (Cache.java:955 LINE) Cache.createBootstrapCacheLoader -> No BootstrapCacheLoaderFactory class specified. Skipping...
2015-11-24 14:29:33,43915-11-24 14:29:33 DEBUG (Cache.java:929 LINE) Cache.createCacheWriter -> CacheWriter factory not configured. Skipping...
2015-11-24 14:29:33,44215-11-24 14:29:33 DEBUG (ConfigurationHelper.java:96 LINE) ConfigurationHelper.createCacheExceptionHandler -> No CacheExceptionHandlerFactory class specified. Skipping...
2015-11-24 14:29:33,51215-11-24 14:29:33 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:29:33,51415-11-24 14:29:33 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:29:33,51415-11-24 14:29:33 DEBUG (DefaultIdentifierGeneratorFactory.java:90 LINE) DefaultIdentifierGeneratorFactory.setDialect -> Setting dialect [org.hibernate.dialect.MySQLDialect]
2015-11-24 14:29:33,71015-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.NoteNumbRecord
2015-11-24 14:29:33,71115-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from note_numb_record where id =?
2015-11-24 14:29:33,71115-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select notenumbre_.id, notenumbre_.node_numb as node2_1_ from note_numb_record notenumbre_ where notenumbre_.id=?
2015-11-24 14:29:33,71115-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into note_numb_record (node_numb, id) values (?, ?)
2015-11-24 14:29:33,71215-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update note_numb_record set node_numb=? where id=?
2015-11-24 14:29:33,71215-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from note_numb_record where id=?
2015-11-24 14:29:33,71215-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into note_numb_record (node_numb) values (?)
2015-11-24 14:29:33,71615-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.CrashLog
2015-11-24 14:29:33,71715-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from marketing1.crash_log where id =?
2015-11-24 14:29:33,71715-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select crashlog_.id, crashlog_.url as url2_, crashlog_.describes as describes2_, crashlog_.addDate as addDate2_ from marketing1.crash_log crashlog_ where crashlog_.id=?
2015-11-24 14:29:33,71715-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into marketing1.crash_log (url, describes, addDate, id) values (?, ?, ?, ?)
2015-11-24 14:29:33,71715-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update marketing1.crash_log set url=?, describes=?, addDate=? where id=?
2015-11-24 14:29:33,71815-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from marketing1.crash_log where id=?
2015-11-24 14:29:33,71815-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into marketing1.crash_log (url, describes, addDate) values (?, ?, ?)
2015-11-24 14:29:33,74015-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2952 LINE) AbstractEntityPersister.logStaticSQL -> Static SQL for entity: com.fx.mobile.model.UserOperate
2015-11-24 14:29:33,74115-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2957 LINE) AbstractEntityPersister.logStaticSQL ->  Version select: select id from user_operate where id =?
2015-11-24 14:29:33,74115-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2960 LINE) AbstractEntityPersister.logStaticSQL ->  Snapshot select: select useroperat_.id, useroperat_.userName as userName0_, useroperat_.userPassword as userPass3_0_, useroperat_.phicomm_id as phicomm4_0_, useroperat_.userEmail as userEmail0_, useroperat_.user_PhoneNumb as user6_0_, useroperat_.userType as userType0_, useroperat_.isChecked as isChecked0_, useroperat_.nickname as nickname0_, useroperat_.figureurl as figureurl0_, useroperat_.sex as sex0_, useroperat_.province as province0_, useroperat_.city as city0_, useroperat_.birthday as birthday0_, useroperat_.open_id as open15_0_, useroperat_.open_key as open16_0_, useroperat_.access_token as access17_0_, useroperat_.expirese_in as expirese18_0_, useroperat_.devinfo as devinfo0_, useroperat_.userinfo as userinfo0_, useroperat_.openqq as openqq0_, useroperat_.openqqinfo as openqqinfo0_, useroperat_.opensina as opensina0_, useroperat_.opensinainfo as opensin24_0_, useroperat_.createTime as createTime0_, useroperat_.updateTime as updateTime0_, useroperat_.lastLoginTime as lastLog27_0_ from user_operate useroperat_ where useroperat_.id=?
2015-11-24 14:29:33,74115-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2963 LINE) AbstractEntityPersister.logStaticSQL ->  Insert 0: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime, id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:29:33,74115-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2964 LINE) AbstractEntityPersister.logStaticSQL ->  Update 0: update user_operate set userName=?, userPassword=?, phicomm_id=?, userEmail=?, user_PhoneNumb=?, userType=?, isChecked=?, nickname=?, figureurl=?, sex=?, province=?, city=?, birthday=?, open_id=?, open_key=?, access_token=?, expirese_in=?, devinfo=?, userinfo=?, openqq=?, openqqinfo=?, opensina=?, opensinainfo=?, createTime=?, updateTime=?, lastLoginTime=? where id=?
2015-11-24 14:29:33,74115-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2965 LINE) AbstractEntityPersister.logStaticSQL ->  Delete 0: delete from user_operate where id=?
2015-11-24 14:29:33,74215-11-24 14:29:33 DEBUG (AbstractEntityPersister.java:2969 LINE) AbstractEntityPersister.logStaticSQL ->  Identity insert: insert into user_operate (userName, userPassword, phicomm_id, userEmail, user_PhoneNumb, userType, isChecked, nickname, figureurl, sex, province, city, birthday, open_id, open_key, access_token, expirese_in, devinfo, userinfo, openqq, openqqinfo, opensina, opensinainfo, createTime, updateTime, lastLoginTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2015-11-24 14:29:33,80415-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [NONE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:29:33,80415-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:29:33,80515-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:29:33,80515-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [UPGRADE_NOWAIT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:29:33,80515-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [FORCE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:29:33,80615-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_READ]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? lock in share mode
2015-11-24 14:29:33,80615-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_WRITE]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:29:33,80615-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [PESSIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=? for update
2015-11-24 14:29:33,80715-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:29:33,80715-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.NoteNumbRecord [OPTIMISTIC_FORCE_INCREMENT]: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:29:33,81715-11-24 14:29:33 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:29:33,81815-11-24 14:29:33 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.NoteNumbRecord: select notenumbre0_.id as id1_0_, notenumbre0_.node_numb as node2_1_0_ from note_numb_record notenumbre0_ where notenumbre0_.id=?
2015-11-24 14:29:33,82015-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [NONE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:29:33,82115-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:29:33,82115-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:29:33,82115-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [UPGRADE_NOWAIT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:29:33,82215-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [FORCE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:29:33,82215-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_READ]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? lock in share mode
2015-11-24 14:29:33,82215-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_WRITE]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:29:33,82315-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [PESSIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=? for update
2015-11-24 14:29:33,82315-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:29:33,82315-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.CrashLog [OPTIMISTIC_FORCE_INCREMENT]: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:29:33,82415-11-24 14:29:33 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_MERGE on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:29:33,82415-11-24 14:29:33 DEBUG (CascadeEntityLoader.java:56 LINE) CascadeEntityLoader.<init> -> Static select for action ACTION_REFRESH on entity com.fx.mobile.model.CrashLog: select crashlog0_.id as id2_0_, crashlog0_.url as url2_0_, crashlog0_.describes as describes2_0_, crashlog0_.addDate as addDate2_0_ from marketing1.crash_log crashlog0_ where crashlog0_.id=?
2015-11-24 14:29:33,82515-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [NONE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:29:33,82515-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [READ]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=?
2015-11-24 14:29:33,82615-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:29:33,82615-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [UPGRADE_NOWAIT]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
2015-11-24 14:29:33,82715-11-24 14:29:33 DEBUG (EntityLoader.java:123 LINE) EntityLoader.<init> -> Static select for entity com.fx.mobile.model.UserOperate [FORCE]: select useroperat0_.id as id0_0_, useroperat0_.userName as userName0_0_, useroperat0_.userPassword as userPass3_0_0_, useroperat0_.phicomm_id as phicomm4_0_0_, useroperat0_.userEmail as userEmail0_0_, useroperat0_.user_PhoneNumb as user6_0_0_, useroperat0_.userType as userType0_0_, useroperat0_.isChecked as isChecked0_0_, useroperat0_.nickname as nickname0_0_, useroperat0_.figureurl as figureurl0_0_, useroperat0_.sex as sex0_0_, useroperat0_.province as province0_0_, useroperat0_.city as city0_0_, useroperat0_.birthday as birthday0_0_, useroperat0_.open_id as open15_0_0_, useroperat0_.open_key as open16_0_0_, useroperat0_.access_token as access17_0_0_, useroperat0_.expirese_in as expirese18_0_0_, useroperat0_.devinfo as devinfo0_0_, useroperat0_.userinfo as userinfo0_0_, useroperat0_.openqq as openqq0_0_, useroperat0_.openqqinfo as openqqinfo0_0_, useroperat0_.opensina as opensina0_0_, useroperat0_.opensinainfo as opensin24_0_0_, useroperat0_.createTime as createTime0_0_, useroperat0_.updateTime as updateTime0_0_, useroperat0_.lastLoginTime as lastLog27_0_0_ from user_operate useroperat0_ where useroperat0_.id=? for update
